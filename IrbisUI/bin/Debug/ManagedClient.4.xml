<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ManagedClient.4</name>
    </assembly>
    <members>
        <member name="T:ManagedClient.BatchRecordFormatter">
            <summary>
            Форматирование записей с сервера большими порциями
            для увеличения производительности.
            Сами записи отдаются по одной.
            </summary>
        </member>
        <member name="F:ManagedClient.BatchRecordFormatter.DefaultBatchSize">
            <summary>
            Размер порции по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordFormatter.#ctor(ManagedClient.ManagedClient64,System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordFormatter.#ctor(ManagedClient.ManagedClient64,System.Int32,System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordFormatter.#ctor(ManagedClient.ManagedClient64,System.String,System.String,System.Object[])">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordFormatter.#ctor(ManagedClient.ManagedClient64,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordFormatter.#ctor(ManagedClient.ManagedClient64,System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordFormatter.FormatAll">
            <summary>
            Считывает все записи сразу.
            </summary>
        </member>
        <member name="E:ManagedClient.BatchRecordFormatter.BatchRead">
            <summary>
            Вызывается во время считывания очередной порции.
            </summary>
        </member>
        <member name="E:ManagedClient.BatchRecordFormatter.Exception">
            <summary>
            Вызывается при возникновении исключения.
            </summary>
        </member>
        <member name="P:ManagedClient.BatchRecordFormatter.BatchSize">
            <summary>
            Размер порции.
            </summary>
        </member>
        <member name="P:ManagedClient.BatchRecordFormatter.Client">
            <summary>
            ИРБИС-клиент.
            </summary>
        </member>
        <member name="P:ManagedClient.BatchRecordFormatter.Format">
            <summary>
            Формат.
            </summary>
        </member>
        <member name="T:ManagedClient.Output.AbstractOutput">
            <summary>
            Абстрактный объект текстового вывода. 
            Например, консоль или текстовое окно.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.Clear">
            <summary>
            Очищает вывод, например, окно.
            Надо переопределить в потомке.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.Configure(System.String)">
            <summary>
            Конфигурирование объекта.
            Надо переопределить в потомке.
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.Write(System.String)">
            <summary>
            Метод, который нужно переопределить
            в потомке.
            </summary>
            <param name="text"></param>
            <returns>Возвращает сам объект
            вывода.</returns>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.WriteError(System.String)">
            <summary>
            Выводит ошибку. Например, красным цветом.
            Надо переопределить в потомке.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.Write(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.WriteError(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.WriteLine(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.WriteLine(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.WriteErrorLine(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.AbstractOutput.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedClient.Output.AbstractOutput.HaveError">
            <summary>
            Флаг: был ли вывод с помощью WriteError.
            </summary>
        </member>
        <member name="P:ManagedClient.Output.AbstractOutput.Null">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedClient.Output.AbstractOutput.Console">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.AfterQueryEventArgs">
            <summary>
            Трансформация результатов поискового запроса, полученных от сервера.
            </summary>
        </member>
        <member name="T:ManagedClient.BatchRecordReader">
            <summary>
            Считывание записей с сервера большими порциями
            для увеличения производительности.
            Сами записи отдаются по одной.
            </summary>
        </member>
        <member name="F:ManagedClient.BatchRecordReader.DefaultBatchSize">
            <summary>
            Размер порции по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordReader.#ctor(ManagedClient.ManagedClient64)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordReader.#ctor(ManagedClient.ManagedClient64,System.Int32)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordReader.#ctor(ManagedClient.ManagedClient64,System.String,System.Object[])">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordReader.#ctor(ManagedClient.ManagedClient64,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordReader.#ctor(ManagedClient.ManagedClient64,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.BatchRecordReader.ReadAll">
            <summary>
            Считывает все записи сразу.
            </summary>
        </member>
        <member name="E:ManagedClient.BatchRecordReader.BatchRead">
            <summary>
            Вызывается во время считывания очередной порции.
            </summary>
        </member>
        <member name="E:ManagedClient.BatchRecordReader.Exception">
            <summary>
            Вызывается при возникновении исключения.
            </summary>
        </member>
        <member name="P:ManagedClient.BatchRecordReader.BatchSize">
            <summary>
            Размер порции.
            </summary>
        </member>
        <member name="P:ManagedClient.BatchRecordReader.Client">
            <summary>
            ИРБИС-клиент.
            </summary>
        </member>
        <member name="T:ManagedClient.BeforeQueryEventArgs">
            <summary>
            Трансформация поискового запроса перед отправкой на сервер.
            </summary>
        </member>
        <member name="T:ManagedClient.NumberText">
            <summary>
            Строка, содержащая числа, разделенные нечисловыми фрагментами.
            </summary>
        </member>
        <member name="M:ManagedClient.NumberText.Increment">
            <summary>
            Увеличение на единицу последнего сегмента.
            </summary>
        </member>
        <member name="M:ManagedClient.NumberText.Increment(System.Int32)">
            <summary>
            Увеличение последнего сегмента на указанное число.
            </summary>
        </member>
        <member name="P:ManagedClient.NumberText.Empty">
            <summary>
            Пустое ли число?
            </summary>
        </member>
        <member name="P:ManagedClient.NumberText.LastIndex">
            <summary>
            Номер последнего сегмента.
            </summary>
        </member>
        <member name="P:ManagedClient.NumberText.Length">
            <summary>
            Количество сегментов, из которых состоит число.
            </summary>
        </member>
        <member name="T:ManagedClient.NumberText.Chunk">
            <summary>
            Фрагмент: нечисловой префикс плюс число.
            </summary>
        </member>
        <member name="M:ManagedClient.DatabaseChangedEventArgs.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.DatabaseChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Удобный конструктор.
            </summary>
            <param name="oldDatabase">Старая база.</param>
            <param name="newDatabase">Новая база.</param>
        </member>
        <member name="P:ManagedClient.DatabaseChangedEventArgs.OldDatabase">
            <summary>
            Старая база.
            </summary>
        </member>
        <member name="P:ManagedClient.DatabaseChangedEventArgs.NewDatabase">
            <summary>
            Новая база
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.InvertedFile32.NodeLength">
            <summary>
            Длина записи N01/L01.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.MstControlRecord32">
            <summary>
            Первая запись в файле документов – управляющая 
            запись, которая формируется (в момент определения 
            базы данных или при ее инициализации) и поддерживается 
            автоматически.
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.MstControlRecord32.RecordSize">
            <summary>
            Размер управляющей записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord32.Zero">
            <summary>
            Всегда 0.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord32.NextMfn">
            <summary>
            Номер записи файла документов, назначаемый 
            для следующей записи, создаваемой в базе данных.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord32.NextBlock">
            <summary>
            Номер последнего блока файла документов.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord32.NextOffset">
            <summary>
            Смещение следующей доступной позиции в последнем блоке.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord32.Type">
            <summary>
            Всегда 0 для файлов баз данных пользователя.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.MstDictionaryEntry32">
            <summary>
            Элемент справочника MST-файла,
            описывающий поле переменной длины.
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.MstDictionaryEntry32.EntrySize">
            <summary>
            Длина элемента справочника MST-файла.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.MstRecordLeader32">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.MstRecordLeader32.LeaderSize">
            <summary>
            Фиксированный размер лидера записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader32.Mfn">
            <summary>
            Номер записи в  файле документов.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader32.Length">
            <summary>
            Длина записи (всегда четное число).
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader32.Base">
            <summary>
            Смещение (базовый адрес) полей
            переменной длины (это общая часть
            лидера и справочника записи в байтах).
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader32.Nvf">
            <summary>
            Число полей в записи (т.е. число входов
            в справочнике).
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader32.Status">
            <summary>
            Индикатор записи (логически удаленная и т.п.).
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.MstFile32">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedClient.Direct.MstFile32.LockDatabase(System.Boolean)">
            <summary>
            Блокировка базы данных в целом.
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:ManagedClient.Direct.MstFile32.ReadDatabaseLockedFlag">
            <summary>
            Чтение флага блокировки базы данных в целом.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.XrfFile32">
            <summary>
            Файл перекрестных ссылок XRF представляет собой
            таблицу ссылок на записи файла документов.
            Первая ссылка соответствует записи файла документов
            с номером 1, вторая – 2  и тд.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.XrfRecord32">
            <summary>
            Contains information about record offset and status.
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.XrfRecord32.RecordSize">
            <summary>
            Fixed record size.
            </summary>
        </member>
        <member name="M:ManagedClient.Direct.XrfRecord32.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.XrfRecord32.Locked">
            <summary>
            Is the record locked.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.XrfRecord32.Deleted">
            <summary>
            Is the record deleted.
            </summary>
        </member>
        <member name="T:ManagedClient.Fields.CodesInfo">
            <summary>
            Коды (поле 900).
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.DocumentType">
            <summary>
            Тип документа. Подполе t.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.DocumentKind">
            <summary>
            Вид документа. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.DocumentCharacter1">
            <summary>
            Характер документа. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.DocumentCharacter2">
            <summary>
            Характер документа. Подполе 2.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.DocumentCharacter3">
            <summary>
            Характер документа. Подполе 3.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.DocumentCharacter4">
            <summary>
            Характер документа. Подполе 4.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.DocumentCharacter5">
            <summary>
            Характер документа. Подполе 5.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.DocumentCharacter6">
            <summary>
            Характер документа. Подполе 6.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.PurposeCode1">
            <summary>
            Код целевого назначения. Подполе x.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.PurposeCode2">
            <summary>
            Код целевого назначения. Подполе y.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.PurposeCode3">
            <summary>
            Код целевого назначения. Подполе 9.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.CodesInfo.AgeRestrictions">
            <summary>
            Возрастные ограничения. Подполе z.
            </summary>
        </member>
        <member name="T:ManagedClient.Fields.ExemplarInfo">
            <summary>
            Информация об экземпляре (поле 910).
            </summary>
        </member>
        <member name="F:ManagedClient.Fields.ExemplarInfo.KnownCodes">
            <summary>
            Известные коды подполей.
            </summary>
        </member>
        <member name="F:ManagedClient.Fields.ExemplarInfo.ExemplarTag">
            <summary>
            Тег полей, содержащих сведения об экземплярах.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.ExemplarInfo.Parse(ManagedClient.RecordField)">
            <summary>
            Parses the specified field.
            </summary>
            <param name="field">The field.</param>
            <returns>ExemplarInfo.</returns>
        </member>
        <member name="M:ManagedClient.Fields.ExemplarInfo.Parse(ManagedClient.IrbisRecord,System.String)">
            <summary>
            Разбор записи на экземпляры.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.ExemplarInfo.Parse(ManagedClient.IrbisRecord)">
            <summary>
            Разбор записи на экземпляры.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.ExemplarInfo.ToField">
            <summary>
            Преобразование экземпляра обратно в поле записи.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.ExemplarInfo.CompareNumbers(ManagedClient.Fields.ExemplarInfo,ManagedClient.Fields.ExemplarInfo)">
            <summary>
            Compares two specified numbers.
            </summary>
            <param name="first">The first.</param>
            <param name="second">The second.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Status">
            <summary>
            Статус. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Number">
            <summary>
            Инвентарный номер. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Date">
            <summary>
            Дата поступления. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Place">
            <summary>
            Место хранения. Подполе d.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Collection">
            <summary>
            Наименование коллекции. Подполе q.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.ShelfIndex">
            <summary>
            Расстановочный шифр. Подполе r.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Price">
            <summary>
            Цена экземпляра. Подполе e.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Barcode">
            <summary>
            Штрих-код/радиометка. Подполе h.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Amount">
            <summary>
            Число экземпляров. Подполе 1.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Purpose">
            <summary>
            Специальное назначение фонда. Подполе t.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Coefficient">
            <summary>
            Коэффициент многоразового использования. Подполе =.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.OffBalance">
            <summary>
            Экземпляры не на баланс. Подполе 4.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.KsuNumber1">
            <summary>
            Номер записи КСУ. Подполе u.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.ActNumber1">
            <summary>
            Номер акта. Подполе y.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Channel">
            <summary>
            Канал поступления. Подполе f.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.OnHand">
            <summary>
            Число выданных экземпляров. Подполе 2.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.ActNumber2">
            <summary>
            Номер акта списания. Подполе v.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.WriteOff">
            <summary>
            Количество списываемых экземпляров. Подполе x.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Completion">
            <summary>
            Количество экземпляров для докомплектования. Подполе k.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.ActNumber3">
            <summary>
            Номер акта передачи в другое подразделение. Подполе w.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Moving">
            <summary>
            Количество передаваемых экземпляров. Подполе z.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.NewPlace">
            <summary>
            Нове место хранения. Подполе m.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.CheckedDate">
            <summary>
            Дата проверки фонда. Подполе s.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.CheckedAmount">
            <summary>
            Число проверенных экземпляров. Подполе 0.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.RealPlace">
            <summary>
            Реальное место нахождения книги. Подполе !.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.BindingIndex">
            <summary>
            Шифр подшивки. Подполе p.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.BindingNumber">
            <summary>
            Инвентарный номер подшивки. Подполе i.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Year">
            <summary>
            Год издания. Берётся не из подполя.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.OtherSubFields">
            <summary>
            Прочие подполя, не попавшие в вышеперечисленные.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Mfn">
            <summary>
            MFN записи, из которой заимствован экземпляр.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Description">
            <summary>
            Краткое библиографическое описание экземпляра.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.Bbk">
            <summary>
            ББК.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ExemplarInfo.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="M:ManagedClient.FieldReference.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:ManagedClient.Fst.FstItem">
            <summary>
            Строчка из FST-файла.
            </summary>
        </member>
        <member name="P:ManagedClient.Fst.FstItem.LineNumber">
            <summary>
            Номер строки в FST-файле
            </summary>
        </member>
        <member name="P:ManagedClient.Fst.FstItem.Tag">
            <summary>
            Тег поля
            </summary>
        </member>
        <member name="P:ManagedClient.Fst.FstItem.Method">
            <summary>
            Метод
            </summary>
        </member>
        <member name="P:ManagedClient.Fst.FstItem.Format">
            <summary>
            Строка с форматом
            </summary>
        </member>
        <member name="P:ManagedClient.Fst.FstItem.Program">
            <summary>
            Распарсенный формат
            </summary>
        </member>
        <member name="T:ManagedClient.Gbl.GblCommand">
            <summary>
            Команды для GBL.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.Add">
            <summary>
            Добавление нового повторения поля или подполя в заданное существующее поле.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.Delete">
            <summary>
            Удаляет поле или подполе в поле.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.Replace">
            <summary>
            Замена целиком поля или подполя.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.Change">
            <summary>
            Замена данных в поле или подполе.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.ChangeCase">
            <summary>
            Замена данных в поле или подполе.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.DeleteRecord">
            <summary>
            Удаление записи в целом.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.UndeleteRecord">
            <summary>
            Восстановление записи в целом.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.CorrectRecords">
            <summary>
            Из текущей записи, вызывает на корректировку другие записи, 
            отобранные по поисковым терминам  из текущей или другой, 
            доступной в системе, базы данных.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.CreateRecord">
            <summary>
            Создает новую запись в текущей или другой базе данных.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.EmptyRecord">
            <summary>
            Очищает (опустошает) текущую запись.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.Undo">
            <summary>
            Переход к одной из предыдущих копий записи (откат).
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.Comment">
            <summary>
            Комментарий. Может находиться между другими операторами 
            и содержать любые тексты в строках (до 4-х) после себя.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.End">
            <summary>
            Завершает работу с другой базой данных,
            установленной в операторах CORREC или NEWREC.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.If">
            <summary>
            Определяет условие выполнения операторов, 
            следующих за ним до оператора FI. 
            Состоит из двух строк: первая строка – имя оператора IF; 
            вторая строка – формат, результатом которого может быть строка ‘1’, 
            что означает разрешение на выполнение последующих операторов, 
            или любое другое значение, что означает запрет 
            на выполнение последующих операторов.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.Fi">
            <summary>
            Завершает действие оператора IF. Состоит из одной строки – FI.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.All">
            <summary>
            Оператор можно использовать в группе операторов после операторов 
            NEWMFN или CORREC. Он дополняет записи всеми полями текущей записи. 
            Т. е. это способ, например, создать новую запись и наполнить 
            ее содержимым текущей записи. Или можно вызвать на корректировку 
            другую запись (CORREC), очистить ее (EMPTY) и наполнить содержимым 
            текущей записи.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.PutLog">
            <summary>
            Формирование пользовательского протокола.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.Repeat">
            <summary>
            Операторы REPEAT-UNTIL организуют цикл выполнения группы операторов. 
            Группа операторов между ними будет выполняться до тех пор, 
            пока формат в операторе UNTIL будет давать значение ‘1’.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblCommand.Until">
            <summary>
            Второй строкой оператора должен быть формат, который позволяет 
            завершить цикл, если результат форматирования на текущей записи 
            отличен от ‘1’.
            </summary>
        </member>
        <member name="T:ManagedClient.Gbl.GblBuilder">
            <summary>
            <para>Инструмент для упрощённого построения заданий на
            глобальную корректировку.</para>
            <para>Пример построения и выполнения задания:</para>
            <code>
            GblFinal final = new GblBuilder(client)
                   .Add("3079", "'1'")
                   .Delete("3011")
                   .Execute(new[] {30, 32, 34});
            Console.WriteLine ("Processed {0} records", final.RecordsProcessed);
            foreach (GblResult result in final.Results)
            {
                Console.WriteLine(result);
            }
            </code>
            </summary>
        </member>
        <member name="T:ManagedClient.Gbl.GblItem">
            <summary>
            Элемент глобальной корректировки.
            </summary>
        </member>
        <member name="F:ManagedClient.Gbl.GblItem.Delimiter">
            <summary>
            Разделитель элементов
            </summary>
        </member>
        <member name="M:ManagedClient.Gbl.GblItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.Gbl.GblItem.Command">
            <summary>
            Команда (оператор), например, ADD или DEL.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblItem.Parameter1">
            <summary>
            Первый параметр, как правило, спецификация поля/подполя.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblItem.Parameter2">
            <summary>
            Второй параметр, как правило, спецификация повторения.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblItem.Format1">
            <summary>
            Первый формат, например, выражение для замены.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblItem.Format2">
            <summary>
            Второй формат, например, заменяющее выражение.
            </summary>
        </member>
        <member name="T:ManagedClient.Gbl.GblResult">
            <summary>
            Результат выполнения GBL для одной записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblResult.Success">
            <summary>
            Общий признак успеха.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblResult.Database">
            <summary>
            Имя базы данных
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblResult.Mfn">
            <summary>
            MFN записи
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblResult.Autoin">
            <summary>
            Результат Autoin.gbl
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblResult.Error">
            <summary>
            Код ошибки, если есть
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblResult.Text">
            <summary>
            Исходный текст (до парсинга)
            </summary>
        </member>
        <member name="T:ManagedClient.Gbl.GblFinal">
            <summary>
            Результат выполнения глобальной корректировки.
            </summary>
        </member>
        <member name="M:ManagedClient.Gbl.GblFinal.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.Gbl.GblFinal.TimeStarted">
            <summary>
            Момент начала обработки.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblFinal.TimeElapsed">
            <summary>
            Всего времени затрачено (с момента начала обработки).
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblFinal.Canceled">
            <summary>
            Отменено пользователем.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblFinal.Exception">
            <summary>
            Исключение (если возникло).
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblFinal.RecordsSupposed">
            <summary>
            Предполагалось обработать записей.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblFinal.RecordsProcessed">
            <summary>
            Обработано записей.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblFinal.RecordsSucceeded">
            <summary>
            Успешно обработано записей.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblFinal.RecordsFailed">
            <summary>
            Ошибок при обработке записей.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GblFinal.Results">
            <summary>
            Результаты для каждой записи.
            </summary>
        </member>
        <member name="T:ManagedClient.Gbl.GlobalCorrector">
            <summary>
            Обёртка для облегчения выполнения глобальной корректировки
            порциями (например, по 100 записей за раз).
            </summary>
        </member>
        <member name="M:ManagedClient.Gbl.GlobalCorrector.ProcessWholeDatabase(ManagedClient.Gbl.GblItem[])">
            <summary>
            Обработать базу данных в целом.
            </summary>
            <param name="gbl"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Gbl.GlobalCorrector.ProcessSearchResult(System.String,ManagedClient.Gbl.GblItem[])">
            <summary>
            Обработать результат поиска.
            </summary>
        </member>
        <member name="M:ManagedClient.Gbl.GlobalCorrector.ProcessInterval(System.Int32,System.Int32,ManagedClient.Gbl.GblItem[])">
            <summary>
            Обработать интервал записей.
            </summary>
        </member>
        <member name="M:ManagedClient.Gbl.GlobalCorrector.ProcessRecordset(System.Collections.Generic.IEnumerable{System.Int32},ManagedClient.Gbl.GblItem[])">
            <summary>
            Обработать явно (вручную) заданное множество записей.
            </summary>
        </member>
        <member name="E:ManagedClient.Gbl.GlobalCorrector.PortionProcessed">
            <summary>
            Вызывается после обработки очередной порции записей
            и в конце общей обработки.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GlobalCorrector.ChunkSize">
            <summary>
            Размер порции. По умолчанию 100 шт.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GlobalCorrector.DefaultChunkSize">
            <summary>
            Размер порции, устанавливаемый для вновь создаваемых
            экземпляров <see cref="T:ManagedClient.Gbl.GlobalCorrector"/>.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GlobalCorrector.UpdateIf">
            <summary>
            Актуализировать ли словарь. По умолчанию <c>true</c>.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GlobalCorrector.Autoin">
            <summary>
            Выполнять ли autoin.gbl.
            </summary>
        </member>
        <member name="P:ManagedClient.Gbl.GlobalCorrector.Flc">
            <summary>
            Выполнять ли формально-логический контроль.
            </summary>
        </member>
        <member name="F:ManagedClient.IfpRecord.MinPostingsInBlock">
            <summary>
            Число ссылок на термин, после превышения которого
            используется специальный блок ссылок.
            </summary>
        </member>
        <member name="T:ManagedClient.IniFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.IniFile.Section">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.InvertedFile64.NodeLength">
            <summary>
            Длина записи N01/L01.
            </summary>
        </member>
        <member name="T:ManagedClient.Fields.ReaderAddress">
            <summary>
            Адрес читателя: поле 13 в базе RDR.
            </summary>
        </member>
        <member name="F:ManagedClient.Fields.ReaderAddress.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.ReaderAddress.Parse(ManagedClient.RecordField)">
            <summary>
            Разбор поля 13.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.ReaderAddress.Parse(ManagedClient.IrbisRecord,System.String)">
            <summary>
            Разбор поля 13.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.ReaderAddress.Parse(ManagedClient.IrbisRecord)">
            <summary>
            Разбор поля 13.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ReaderAddress.Postcode">
            <summary>
            Почтовый индекс. Подполе A.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ReaderAddress.Country">
            <summary>
            Страна/республика. Подполе B.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ReaderAddress.City">
            <summary>
            Город. Подполе C.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ReaderAddress.Street">
            <summary>
            Улица. Подполе D.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ReaderAddress.Building">
            <summary>
            Номер дома. Подполе E.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ReaderAddress.Entrance">
            <summary>
            Номер подъезда. Подполе G.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ReaderAddress.Apartment">
            <summary>
            Номер квартиры. Подполе H.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ReaderAddress.AdditionalData">
            <summary>
            Дополнительные данные. Подполе F.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.ReaderAddress.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisAlphabetTable">
            <summary>
            ISISAC.TAB
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisAnswerItem">
            <summary>
            Элемент ответа сервера на поисковый запрос.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisAnswerItem.Database">
            <summary>
            Имя базы данных.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisAnswerItem.Mfn">
            <summary>
            MFN записи.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisAnswerItem.Record">
            <summary>
            Собственно запись.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisAnswerItem.Text">
            <summary>
            Расформатированная запись.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisAnswerItem.Key">
            <summary>
            Ключ (для сортировки).
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisAuthenticationEventArgs">
            <summary>
            Аргументы для запроса логина/пароля пользователя.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisAuthenticationEventArgs.ReturnCode">
            <summary>
            Код возврата ИРБИС (для показа читателю).
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisAuthenticationEventArgs.Username">
            <summary>
            Логин пользователя.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisAuthenticationEventArgs.Password">
            <summary>
            Пароль пользователя.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisAuthenticationEventArgs.OkToConnect">
            <summary>
            Можно продолжать.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisCache">
            <summary>
            Простой кэш для форматов, меню и т. д.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisCatalogParameters">
            <summary>
            Wrapper for PAR file.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisCatalogParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedClient.IrbisCatalogParameters"/> class.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">name</exception>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.Name">
            <summary>
            Имя каталога.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.Xrf">
            <summary>
            Параметр №1
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.Mst">
            <summary>
            Параметр №2
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.Cnt">
            <summary>
            Параметр №3
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.N01">
            <summary>
            Параметр №4
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.N02">
            <summary>
            Параметр №5
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.L01">
            <summary>
            Параметр №6
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.L02">
            <summary>
            Параметр №7
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.Ifp">
            <summary>
            Параметр №8
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.Any">
            <summary>
            Параметр №9
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.Pft">
            <summary>
            Параметр №10
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisCatalogParameters.External">
            <summary>
            Параметр №11
            </summary>       
        </member>
        <member name="T:ManagedClient.IrbisClientInfo">
            <summary>
            Информация о клиенте, подключенном к серверу ИРБИС
            (не обязательно о текущем).
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.Number">
            <summary>
            Номер
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.IPAddress">
            <summary>
            Адрес клиента
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.Port">
            <summary>
            Порт клиента
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.Name">
            <summary>
            Логин
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.ID">
            <summary>
            Идентификатор клиентской программы
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.Workstation">
            <summary>
            Клиентский АРМ
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.Registered">
            <summary>
            Время подключения к серверу
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.Acknowledged">
            <summary>
            Последнее подтверждение
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.LastCommand">
            <summary>
            Последняя команда
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisClientInfo.CommandNumber">
            <summary>
            Номер последней команды
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisClientSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisCommadEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisCommadEventArgs.#ctor(ManagedClient.ManagedClient64)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedClient.IrbisCommadEventArgs"/> class.
            </summary>
            <param name="client">The client.</param>
        </member>
        <member name="M:ManagedClient.IrbisCommadEventArgs.#ctor(ManagedClient.ManagedClient64,ManagedClient.IrbisException)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedClient.IrbisCommadEventArgs"/> class.
            </summary>
            <param name="client">The client.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:ManagedClient.IrbisContextSaver">
            <summary>
            Простая сохранялка текущего контекста для клиента.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisContextSaver.#ctor(ManagedClient.ManagedClient64)">
            <summary>
            Сохраняет контекст для указанного клиента.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisContextSaver.SaveContext">
            <summary>
            Сохраняет контекст.
            </summary>
            <returns>Клиента.</returns>
        </member>
        <member name="M:ManagedClient.IrbisContextSaver.RestoreContext">
            <summary>
            Восстанавливает контекст.
            </summary>
            <returns>Клиента.</returns>
        </member>
        <member name="M:ManagedClient.IrbisContextSaver.Dispose">
            <summary>
            Performs application-defined tasks associated 
            with freeing, releasing, or resetting 
            unmanaged resources.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisContextSaver.Host">
            <summary>
            Адрес сервера.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisContextSaver.Port">
            <summary>
            Порт сервера.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisContextSaver.Username">
            <summary>
            Имя пользователя.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisContextSaver.Password">
            <summary>
            Пароль пользователя.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisContextSaver.Database">
            <summary>
            Имя базы данных.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisContextSaver.Workstation">
            <summary>
            Тип АРМ.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisContextSaver.Client">
            <summary>
            Клиент, для которого сохранён контекст.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisDatabaseInfo">
            <summary>
            Информация о базе данных ИРБИС
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisDatabaseInfo.ItemDelimiter">
            <summary>
            Разделитель элементов
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDatabaseInfo.ParseServerResponse(System.String[])">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDatabaseInfo.ParseMenu(System.String[])">
            <summary>
            Разбор файла меню
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDatabaseInfo.Name">
            <summary>
            Имя базы данных.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDatabaseInfo.Description">
            <summary>
            Описание базы данных
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDatabaseInfo.MaxMfn">
            <summary>
            Максимальный MFN.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDatabaseInfo.LogicallyDeletedRecords">
            <summary>
            Список логически удаленных записей.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDatabaseInfo.PhysicallyDeletedRecords">
            <summary>
            Список физически удаленных записей.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDatabaseInfo.NonActualizedRecords">
            <summary>
            Список неактуализированных записей.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDatabaseInfo.LockedRecords">
            <summary>
            Список заблокированных записей.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDatabaseInfo.DatabaseLocked">
            <summary>
            Флаг монопольной блокировки базы данных.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDatabaseInfo.ReadOnly">
            <summary>
            База данных только для чтения.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisDate">
            <summary>
            Строка с ИРБИС-датой yyyyMMdd.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisDate.DefaultFormat">
            <summary>
            Формат конверсии по умолчанию.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisDate.ConversionFormat">
            <summary>
            Формат конверсии.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDate.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDate.#ctor(System.DateTime)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDate.ConvertDateToString(System.DateTime)">
            <summary>
            Преобразование даты в строку.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDate.ConvertStringToDate(System.String)">
            <summary>
            Преобразование строки в дату.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDate.op_Implicit(System.String)~ManagedClient.IrbisDate">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDate.op_Implicit(System.DateTime)~ManagedClient.IrbisDate">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDate.op_Implicit(ManagedClient.IrbisDate)~System.String">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisDate.op_Implicit(ManagedClient.IrbisDate)~System.DateTime">
            <summary>
            Неявное преобразование
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDate.Text">
            <summary>
            В виде текста.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisDate.Date">
            <summary>
            В виде даты.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisException">
            <summary>
            Исключения, специфичные для библиотеки
            ManagedClient
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisException.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisException.#ctor(System.Int32)">
            <summary>
            Конструктор с кодом ошибки.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisException.#ctor(System.String)">
            <summary>
            Конструктор с готовым сообщением
            об ошибке.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор для десериализации.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisException.GetErrorDescription(ManagedClient.IrbisException)">
            <summary>
            Текстовое описание ошибки.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisException.GetErrorDescription(ManagedClient.IrbisReturnCode)">
            <summary>
            Текстовое описание ошибки.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisException.GetErrorDescription(System.Int32)">
            <summary>
            Текстовое описание ошибки.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisException.ErrorCode">
            <summary>
            Код возврата (код ошибки)
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisExecutive">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisFst">
            <summary>
            Файл FST.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisFst.Entry">
            <summary>
            Элемент (строка) FST.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisIniFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.AutoinFile">
            <summary>
            Имя файла пакетного задания для АВТОВВОДА.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.AutoLand">
            <summary>
            Определяет характер выполнения режима ВЫДАЧА БЕЗ ЗАКАЗА в АРМе 
            Книговыдача – в случае когда в поле КЛЮЧ вводят данные, 
            однозначно определяющие экземпляр (например, штрих-код), 
            и далее ENTER. Принимает два значения: 1 – автоматически 
            выполняется выдача; 0 – не выполняется.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.AutoMerge">
            <summary>
            Разрешает (значение 1) или запрещает (значение 0) 
            автоматическое слияние двух версий записи при корректировке 
            (при получении сообщения о несовпадении версий – в ситуации, 
            когда одну запись пытаются одновременно откорректировать 
            два и более пользователей) Автоматическое слияние проводится 
            по формальному алгоритму: неповторяющиеся поля заменяются, 
            а оригинальные значения повторяющихся полей суммируются
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.BriefPft">
            <summary>
            Имя краткого (однострокового) формата показа.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.ClientTimeLive">
            <summary>
            Интервал в мин., по истечении которого клиент посылает 
            на сервер уведомление о том, что он «жив».
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.CopyMnu">
            <summary>
            Имя файла-справочника со списком ТВП переформатирования 
            для копирования.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.DbnFlc">
            <summary>
            Имя формата для ФЛК документа в целом.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.DbnNameCat">
            <summary>
            Имя файла-справочника со списком доступных баз данных.
            В списках БД доступных АРМам Каталогизатор и Читатель 
            именам конкретных БД может предшествовать символ “-“ (минус), 
            что означает: - для АРМа Каталогизатор – что соответствующая 
            БД не доступна для ввода; - для АРМа Читатель – что 
            соответствующая БД не доступна для заказа.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.DbnPrefShifr">
            <summary>
            Префикс инверсии для шифра документа в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.DbnTagEkz">
            <summary>
            Метка поля «экземпляры» в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.DbnTagShifr">
            <summary>
            Метка поля «шифр документа» в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.DbnTagSpros">
            <summary>
            Метка поля «количество выдач» в БД ЭК.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.DefaultDB">
            <summary>
            Имя БД по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.EmptyDbn">
            <summary>
            Имя шаблона для создания новой БД.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.EtalonDbn">
            <summary>
            Имя эталонной БД Электронного каталога.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.ExportMnu">
            <summary>
            Имя файла-справочника со списком ТВП переформатирования 
            для экспорта.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.FmtMnu">
            <summary>
            Имя файла-справочника со списком доступных РЛ.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.FontCharset">
            <summary>
            Номер основного кодового набора.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.FontName">
            <summary>
            Имя шрифта для компонентов интерфейса.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.FontSize">
            <summary>
            Размер шрифта на пользовательском интерфейсе. 
            Возможные значения: 0,1,2,3,4.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.HelpDbn">
            <summary>
            Имя БД, содержащей тематический рубрикатор ГРНТИ.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.ImportMnu">
            <summary>
            Имя файла-справочника со списком ТВП переформатирования 
            для импорта.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.IriMnu">
            <summary>
            Имя файла-справочника со списком постоянных запросов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.Landable">
            <summary>
            Доступность режима ЧИТАТЕЛИ-ВЫДАЧА БЕЗ ЗАКАЗА в АРМе 
            «Книговыдача» (1 – доступен, 0 – недоступен).
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.LandFormat">
            <summary>
            Имя формата для показа документа ЭК при выдаче 
            без заказа в АРМе «Книговыдача».
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MailFrom">
            <summary>
            Название отправителя почты для режимов печати в АРМах 
            «Читатель» и «Книговыдача».
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MailHost">
            <summary>
            Адрес почтового сервера (отправителя) для режимов печати 
            в АРМах «Читатель» и «Книговыдача».
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MaskBar">
            <summary>
            Маска штрих-кода для очереди заказов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MaskDbn">
            <summary>
            Маска имени БД ЭК для очереди заказов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MaskInv">
            <summary>
            Маска инв.номера для очереди заказов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MaskReader">
            <summary>
            Маска идентификатора читателя для очереди заказов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MaskShifr">
            <summary>
            Маска шифра документа для очереди заказов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MaskStore">
            <summary>
            Маска места хранения для очереди заказов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MaxBooks">
            <summary>
            Макс. кол-во изданий на руках читателя.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MaxDolgBooks">
            <summary>
            Макс. кол-во задолженных изданий на руках у читателя.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.MultiVisit">
            <summary>
            Определяет возможность фиксирования множественного 
            (больше одного) посещения одного читателя в течение 
            одного дня (не связанное с выдачей/возвратом). 
            Принимает два значения: 0  - нельзя; 1 – можно.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.PftMnu">
            <summary>
            Имя файла-справочника со списком доступных форматов 
            показа документов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.PftOpt">
            <summary>
            Имя оптимизационного файла, который определяет принцип 
            формата ОПТИМИЗИРОВАННЫЙ (в АРМах Читатель и Каталогизатор).
            Для БД электронного каталога (IBIS) значение PFTW.OPT 
            определяет в качестве оптимизированных  RTF-форматы, 
            а значение PFTW_H.OPT – HTML-форматы
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.PrefInv">
            <summary>
            Префикс инверсии для поиска записи в каталоге по инвентарному 
            номеру/штрих-коду при переносе в ЭК. 
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.PrMhrKv">
            <summary>
            Включение (значение 1) или выключение (значение 0) контроля 
            соответствия места выдачи и места хранения экземпляра 
            в АРМе «Книговыдача».
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.RdrBriefFormat">
            <summary>
            Имя формата краткого описания в БД читателей.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.RdrDbn">
            <summary>
            Имя БД читателей.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.RdrPftMnu">
            <summary>
            Имя файла-справочника со списком форматов для должников.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.SearchIni">
            <summary>
            Имя дополнительного INI-файла со сценарием поиска для БД. 
            Если соответствующий файл отсутствует, используется сценарий 
            из dbn.ini. Указывается только имя INI-файла. Сам файл должен 
            находиться в директории БД.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.WebIrbisMnu">
            <summary>
            Имя справочника со списком Web-ресурсов для режима 
            ИМПОРТ ИЗ WEB-ИРБИС АРМа Каталогизатор.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.WebTransferMnu">
            <summary>
            Имя справочника со списком ресурсов Web-ИРБИС для передачи данных.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.WorkDir">
            <summary>
            Директория для сохранения временных (выходных) данных.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.WriteLog">
            <summary>
            Признак, разрешающий формирование протокола пакетных режимов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisIniFile.WsOpt">
            <summary>
            Имя файла оптимизации РЛ ввода.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisInputMode">
            <summary>
            Режимы ввода
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Default">
            <summary>
            Ввод без дополнительной обработки.
            Простая строка ввода
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Menu">
            <summary>
            Ввод через простое (не иерархическое)
            меню (справочник).
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Dictionary">
            <summary>
            Ввод через поисковый словарь.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Rubricator">
            <summary>
            Ввод через рубрикатор ГРНТИ.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Multiline">
            <summary>
            Ввод через оконный редактор
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.SubSheet">
            <summary>
            Ввод через вложенный рабочий лист.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Tree">
            <summary>
            Ввод через иерархический справочник
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Switch">
            <summary>
            Ввод с использованием переключателей.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.ExternalProgram">
            <summary>
            Ввод с использованием внешней программы.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Template">
            <summary>
            Ввод на основе маски (шаблона).
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.AuthorityFile">
            <summary>
            Ввод через авторитетный файл.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Thesaurus">
            <summary>
            Ввод через тезаурус.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.ExternalFile">
            <summary>
            Ввод через обращение к внешнему файлу.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.Navigator">
            <summary>
            Ввод на основе ИРБИС-Навигатора.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisInputMode.ExternalDll">
            <summary>
            Ввод с помощью режима (функции) пользователя.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisIOUtils">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisLine">
            <summary>
            One line in worksheet
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisLine.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedClient.IrbisLine"/> class.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisLine.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedClient.IrbisLine"/> class.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:ManagedClient.IrbisLine.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.IrbisLine"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="title">The title.</param>
        </member>
        <member name="M:ManagedClient.IrbisLine.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.IrbisLine"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="title">The title.</param>
            <param name="repeatable">if set to <c>true</c> [repeatable].</param>
        </member>
        <member name="M:ManagedClient.IrbisLine.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.IrbisLine.Tag">
            <summary>
            Числовая метка поля.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisLine.Title">
            <summary>
            Наименование поля.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisLine.Repeatable">
            <summary>
            Повторяемость поля.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisLine.Help">
            <summary>
            Индекс контекстной помощи.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisLine.InputMode">
            <summary>
            Режим ввода.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisLine.InputInfo">
            <summary>
            Дополнительная информация для расширенных
            средств ввода.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisLine.FormalVerification">
            <summary>
            ФЛК.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisLine.Hint">
            <summary>
            Подсказка - текст помощи (инструкции),
            сопровождающий ввод в поле.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisLine.DefaultValue">
            <summary>
            Знчение по умолчанию при создании 
            новой записи.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisLine.Reserved">
            <summary>
            Используется при определенных режимах ввода.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisMenu">
            <summary>
            Содержимое файла MNU.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisMenu.Stop">
            <summary>
            Признак конца меню.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisMenu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.IrbisMenu.Name">
            <summary>
            Имя файла (чисто для идентификации).
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisMenu.Entry">
            <summary>
            Запись в меню. Соответствует паре строк.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisMenu.Entry.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> 
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> 
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedClient.IrbisOpt">
            <summary>
            Файл OPT.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisPath">
            <summary>
            Задает путь к файлам Ирбис
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisPath.System">
            <summary>
            Общесистемный путь
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisPath.Data">
            <summary>
            путь размещения сведений о базах данных сервера ИРБИС64
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisPath.MasterFile">
            <summary>
            путь на мастер-файл базы данных
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisPath.InvertedFile">
            <summary>
            путь на словарь базы данных
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisPath.ParameterFile">
            <summary>
            путь на параметрию базы данных
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisPath.FullText">
            <summary>
            Полный текст
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisPath.InternalResource">
            <summary>
            Внутренний ресурс
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisPft">
            <summary>
            Файл PFT.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisPft.Name">
            <summary>
            Имя (чисто для идентификации).
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisPft.Entry">
            <summary>
            Элемент (строка) PFT.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisProcessInfo">
            <summary>
            Информация о запущенном на сервере процессе.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisProcessInfo.Parse(System.String[])">
            <summary>
            Разбор ответа сервера.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisProcessInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> 
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> 
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.Number">
            <summary>
            Просто порядковый номер процесса.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.IPAddress">
            <summary>
            С каким клиентом взаимодействует.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.Name">
            <summary>
            Логин оператора.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.ID">
            <summary>
            Идентификатор клиента.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.Workstation">
            <summary>
            Тип АРМ.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.Started">
            <summary>
            Время запуска.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.LastCommand">
            <summary>
            Последняя выполненная (или выполняемая) команда.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.CommandNumber">
            <summary>
            Порядковый номер последней команды.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.ProcID">
            <summary>
            Идентификатор процесса.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisProcessInfo.State">
            <summary>
            Состояние.
            </summary>
        </member>
        <member name="T:ManagedClient.Magazines.MagazineCumulation">
            <summary>
            Данные о кумуляции номеров. Поле 909.
            </summary>
        </member>
        <member name="F:ManagedClient.Magazines.MagazineCumulation.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineCumulation.Parse(ManagedClient.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineCumulation.Parse(ManagedClient.IrbisRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineCumulation.Parse(ManagedClient.IrbisRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineCumulation.Year">
            <summary>
            Год. Подполе Q.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineCumulation.Volume">
            <summary>
            Том. Подполе F.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineCumulation.Place">
            <summary>
            Место хранения. Подполе D.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineCumulation.Numbers">
            <summary>
            Кумулированные номера. Подполе H.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineCumulation.Complect">
            <summary>
            Номер комплекта. Подполе K.
            </summary>
        </member>
        <member name="T:ManagedClient.Output.ConsoleOutput">
            <summary>
            Консольный вывод.
            </summary>
        </member>
        <member name="T:ManagedClient.Output.DummyOutput">
            <summary>
            Выходной поток, который не даёт закрыться
            другому потоку.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.DummyOutput.#ctor(ManagedClient.Output.AbstractOutput)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="P:ManagedClient.Output.DummyOutput.Inner">
            <summary>
            Внутренний поток.
            </summary>
        </member>
        <member name="T:ManagedClient.Output.FileOutput">
            <summary>
            Файловый вывод.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.FileOutput.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.FileOutput.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.FileOutput.Close">
            <summary>
            Закрытие файла.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.FileOutput.Open(System.String,System.Boolean)">
            <summary>
            Открытие файла.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.FileOutput.Open(System.String)">
            <summary>
            Открытие файла.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.FileOutput.Open(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Открытие файла.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.FileOutput.Open(System.String,System.Text.Encoding)">
            <summary>
            Открытие файла.
            </summary>
        </member>
        <member name="P:ManagedClient.Output.FileOutput.FileName">
            <summary>
            Имя файла.
            </summary>
        </member>
        <member name="T:ManagedClient.Output.NullOutput">
            <summary>
            Пустой объект вывода.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.NullOutput.Clear">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.NullOutput.Configure(System.String)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.NullOutput.Write(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Output.NullOutput.WriteError(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.Output.NullOutput.HaveError">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.Output.TeeOutput">
            <summary>
            Расщепление (повтор) потока вывода.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.TeeOutput.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.TeeOutput.#ctor(ManagedClient.Output.AbstractOutput[])">
            <summary>
            Создание объекта с заранее установленным
            списком.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.TeeOutput.Clear">
            <summary>
            Очистка.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.TeeOutput.Configure(System.String)">
            <summary>
            Конфигурация.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.TeeOutput.Write(System.String)">
            <summary>
            Вывод.
            </summary>
        </member>
        <member name="M:ManagedClient.Output.TeeOutput.WriteError(System.String)">
            <summary>
            Вывод.
            </summary>
        </member>
        <member name="P:ManagedClient.Output.TeeOutput.Output">
            <summary>
            Подчинённые потоки
            </summary>
        </member>
        <member name="P:ManagedClient.Output.TeeOutput.HaveError">
            <summary>
            Есть ошибка?
            </summary>
        </member>
        <member name="T:ManagedClient.ParallelFormatter">
            <summary>
            Форматирование записей в несколько потоков.
            </summary>
        </member>
        <member name="M:ManagedClient.ParallelFormatter.#ctor(System.Int32,System.String,System.Int32[],System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.ParallelFormatter.FormatAll">
            <summary>
            Форматирование всех записей.
            </summary>
        </member>
        <member name="P:ManagedClient.ParallelFormatter.Parallelism">
            <summary>
            Степень параллелизма.
            </summary>
        </member>
        <member name="P:ManagedClient.ParallelFormatter.ConnectionString">
            <summary>
            Строка подключения.
            </summary>
        </member>
        <member name="P:ManagedClient.ParallelFormatter.Stop">
            <summary>
            Признак окончания.
            </summary>
        </member>
        <member name="P:ManagedClient.ParallelFormatter.Format">
            <summary>
            Используемый формат.
            </summary>
        </member>
        <member name="T:ManagedClient.ParallelRecordReader">
            <summary>
            Считывание записей с сервера в
            несколько потоков.
            </summary>
        </member>
        <member name="M:ManagedClient.ParallelRecordReader.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.ParallelRecordReader.#ctor(System.Int32)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.ParallelRecordReader.#ctor(System.Int32,System.String)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.ParallelRecordReader.#ctor(System.Int32,System.String,System.Int32[])">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:ManagedClient.ParallelRecordReader.WaitAll">
            <summary>
            Ожидание окончания.
            </summary>
        </member>
        <member name="M:ManagedClient.ParallelRecordReader.ReadAll">
            <summary>
            Считываем все записи.
            </summary>
        </member>
        <member name="P:ManagedClient.ParallelRecordReader.Parallelism">
            <summary>
            Степень параллелизма.
            </summary>
        </member>
        <member name="P:ManagedClient.ParallelRecordReader.ConnectionString">
            <summary>
            Строка подключения.
            </summary>
        </member>
        <member name="P:ManagedClient.ParallelRecordReader.Stop">
            <summary>
            Признак окончания.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftCommandC">
            <summary>
            Команда горизонтального позиционирования.
            Перемещает виртуальный курсор в n-ю позицию строки
            (табуляция в указанную позицию строки).
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftAst">
            <summary>
            Абстрактный элемент синтаксического дерева.
            </summary>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.Execute(ManagedClient.Pft.PftContext)">
            <summary>
            Собственно форматирование.
            Включает в себя результат
            форматирования всеми потомками.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.GetAffectedFields">
            <summary>
            Список полей, задействованных в форматировании
            данным элементом и всеми его потомками, включая
            косвенных.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.GetDescendants``1">
            <summary>
            Получение списка потомков (как прямых,
            так и косвенных) определенного типа.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.GetLeafs">
            <summary>
            Построение массива потомков-листьев 
            (т. е. не имеющих собственных потомков).
            </summary>
            <remarks>Если у узла нет потомков,
            он возвращает массив из одного элемента:
            самого себя.</remarks>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.Optimize">
            <summary>
            Оптимизация дерева потомков.
            На данный момент не реализована.
            </summary>
            <remarks>Если возвращает <c>null</c>,
            это означает, что данный узел и всех
            его потомков можно безболезненно удалить.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.PrintDebug(System.IO.TextWriter,System.Int32)">
            <summary>
            Отладочный вывод "ступеньками" или "деревом".
            </summary>
            <param name="writer"></param>
            <param name="level"></param>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.SupportsMultithreading">
            <summary>
            Поддерживает ли многопоточность,
            т. е. может ли быть запущен одновременно
            с соседними элементами.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.Validate(System.Boolean)">
            <summary>
            Семантическая валидация поддерева.
            На данный момент не реализована
            </summary>
            <param name="throwOnError"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.Write(System.IO.StreamWriter)">
            <summary>
            Формирование исходного текста по AST.
            Применяется, например, для красивой 
            распечатки программы на языке PFT.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ManagedClient.Pft.PftAst.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="E:ManagedClient.Pft.PftAst.BeforeExecution">
            <summary>
            Вызывается непосредственно перед выполнением.
            </summary>
        </member>
        <member name="E:ManagedClient.Pft.PftAst.AfterExecution">
            <summary>
            Вызывается непосредственно после выполнения.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftAst.Children">
            <summary>
            Список потомков. Может быть пустым.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftAst.LineNumber">
            <summary>
            Номер строки, на которой в скрипте расположена
            соответствующая конструкция языка.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.Ast.PftCommandC.NewPosition">
            <summary>
            Новая позиция курсора.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftCommandX">
            <summary>
            Команда горизонтального позиционирования.
            Вставляет n пробелов.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.Ast.PftCommandX.Shift">
            <summary>
            Количество добавляемых пробелов.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftCompositeElement">
            <summary>
            Составной элемент.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftCondition">
            <summary>
            Условие в условном операторе.
            Абстрактный класс, реальные условия
            см. в потомках.
            </summary>
        </member>
        <member name="M:ManagedClient.Pft.Ast.PftCondition.Evaluate(ManagedClient.Pft.PftContext)">
            <summary>
            Вычисление истинности условия.
            Реализации см. в потомках.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftConditionalLiteral">
            <summary>
            Условный литерал.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftDebugBreak">
            <summary>
            Программная точка останова.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftDebugStatement">
            <summary>
            Отладочная печать (видна в VS).
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftEatFunction">
            <summary>
            Съедает весь переданный ей текст.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftErrorStatement">
            <summary>
            Сообщение об ошибке.
            Выводится в специальный поток
            контекста форматирования.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftEscapedLiteral">
            <summary>
            Безусловный литерал, ограниченный обратными кавычками.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftFatalStatement">
            <summary>
            Фатальная ошибка.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftFieldReference">
            <summary>
            Ссылка на поле записи.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftGroupMember">
            <summary>
            Элемент формата, который может выдавать значения полей/подполей
            в повторяющейся группе.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftGlobalReference">
            <summary>
            Ссылка на глобальную переменную.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftGroupStatement">
            <summary>
            Простая группа элементов формата (в круглых скобках).
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftHashOperator">
            <summary>
            Команда вертикального позиционирования.
            Безусловный переход на новую строку.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftIffFunction">
            <summary>
            Функция, возвращающая значение,
            в зависимости от условия.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftModeSwitch">
            <summary>
            Переключение режима вывода полей с подполями.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftNlOperator">
            <summary>
            Перевод строки, специфичный для платформы.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftPercentOperator">
            <summary>
            Удаляет ранее созданные пустые строки, если они есть.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftSimpleFormat">
            <summary>
            Простой формат, т. е. состоящий из примитивных элементов.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftSlashOperator">
            <summary>
            Команда вертикального позиционирования.
            Переход на новую строку, если текущая строка не была пустой.
            приводит к размещению последующих данных с начала следующей строки.
            Однако подряд расположенные команды /, хотя и являются синтаксически 
            правильными, но имеют тот же смысл, что и одна команда /, 
            т.е. команда / никогда не создает пустых строк.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftUnused">
            <summary>
            Пропускаемые элементы формата, например,
            лишние условные или повторяющиеся литералы.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftRepeatableLiteral">
            <summary>
            Повторяющийся литерал
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Debugging.PftBreakpoint">
            <summary>
            Точка останова (прерывания) PFT-скрипта.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.Debugging.PftBreakpoint.ConditionalExpression">
            <summary>
            Условие, при котором срабатывает точка останова.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.Debugging.PftBreakpoint.TraceExpression">
            <summary>
            Выводится в консоль отладчика каждый раз при прохождении точки.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Debugging.PftDebugger">
            <summary>
            Отладчик PFT-скриптов.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:ManagedClient.Pft.IPftListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.IPftListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:ManagedClient.Pft.PftParser"/>.
            </summary>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCallStatement(ManagedClient.Pft.PftParser.CallStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.callStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCallStatement(ManagedClient.Pft.PftParser.CallStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.callStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterDeletedFunction(ManagedClient.Pft.PftParser.DeletedFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deletedFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitDeletedFunction(ManagedClient.Pft.PftParser.DeletedFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deletedFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPftInfoBlock(ManagedClient.Pft.PftParser.PftInfoBlockContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pftInfoBlock"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPftInfoBlock(ManagedClient.Pft.PftParser.PftInfoBlockContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pftInfoBlock"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterIffFunction(ManagedClient.Pft.PftParser.IffFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.iffFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitIffFunction(ManagedClient.Pft.PftParser.IffFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.iffFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFileSizeFunction(ManagedClient.Pft.PftParser.FileSizeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fileSizeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFileSizeFunction(ManagedClient.Pft.PftParser.FileSizeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fileSizeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterNewrecFunction(ManagedClient.Pft.PftParser.NewrecFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.newrecFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitNewrecFunction(ManagedClient.Pft.PftParser.NewrecFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.newrecFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterReplaceFunction(ManagedClient.Pft.PftParser.ReplaceFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.replaceFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitReplaceFunction(ManagedClient.Pft.PftParser.ReplaceFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.replaceFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPortFunction(ManagedClient.Pft.PftParser.PortFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.portFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPortFunction(ManagedClient.Pft.PftParser.PortFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.portFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterExtractNameFunction(ManagedClient.Pft.PftParser.ExtractNameFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractNameFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitExtractNameFunction(ManagedClient.Pft.PftParser.ExtractNameFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractNameFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTolowerFunction(ManagedClient.Pft.PftParser.TolowerFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.tolowerFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTolowerFunction(ManagedClient.Pft.PftParser.TolowerFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.tolowerFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCurdirFunction(ManagedClient.Pft.PftParser.CurdirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.curdirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCurdirFunction(ManagedClient.Pft.PftParser.CurdirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.curdirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterInteractiveFunction(ManagedClient.Pft.PftParser.InteractiveFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.interactiveFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitInteractiveFunction(ManagedClient.Pft.PftParser.InteractiveFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.interactiveFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTotalMemoryFunction(ManagedClient.Pft.PftParser.TotalMemoryFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.totalMemoryFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTotalMemoryFunction(ManagedClient.Pft.PftParser.TotalMemoryFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.totalMemoryFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMidFunction(ManagedClient.Pft.PftParser.MidFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.midFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMidFunction(ManagedClient.Pft.PftParser.MidFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.midFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterAppDirFunction(ManagedClient.Pft.PftParser.AppDirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appDirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitAppDirFunction(ManagedClient.Pft.PftParser.AppDirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appDirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPadLeftFunction(ManagedClient.Pft.PftParser.PadLeftFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padLeftFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPadLeftFunction(ManagedClient.Pft.PftParser.PadLeftFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padLeftFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterIniFunction(ManagedClient.Pft.PftParser.IniFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.iniFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitIniFunction(ManagedClient.Pft.PftParser.IniFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.iniFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterEditTextFunction(ManagedClient.Pft.PftParser.EditTextFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.editTextFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitEditTextFunction(ManagedClient.Pft.PftParser.EditTextFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.editTextFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterConditionBoolean(ManagedClient.Pft.PftParser.ConditionBooleanContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionBoolean"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitConditionBoolean(ManagedClient.Pft.PftParser.ConditionBooleanContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionBoolean"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterLocalIPFunction(ManagedClient.Pft.PftParser.LocalIPFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.localIPFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitLocalIPFunction(ManagedClient.Pft.PftParser.LocalIPFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.localIPFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterProcedureArguments(ManagedClient.Pft.PftParser.ProcedureArgumentsContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureArguments"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitProcedureArguments(ManagedClient.Pft.PftParser.ProcedureArgumentsContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureArguments"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterSFunction(ManagedClient.Pft.PftParser.SFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitSFunction(ManagedClient.Pft.PftParser.SFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterSizeFunction(ManagedClient.Pft.PftParser.SizeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sizeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitSizeFunction(ManagedClient.Pft.PftParser.SizeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sizeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterModeSwitch(ManagedClient.Pft.PftParser.ModeSwitchContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.modeSwitch"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitModeSwitch(ManagedClient.Pft.PftParser.ModeSwitchContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.modeSwitch"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterGetenvFunction(ManagedClient.Pft.PftParser.GetenvFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.getenvFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitGetenvFunction(ManagedClient.Pft.PftParser.GetenvFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.getenvFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterOrdFunction(ManagedClient.Pft.PftParser.OrdFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ordFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitOrdFunction(ManagedClient.Pft.PftParser.OrdFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ordFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterBeepOperator(ManagedClient.Pft.PftParser.BeepOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.beepOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitBeepOperator(ManagedClient.Pft.PftParser.BeepOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.beepOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterStartsWithFunction(ManagedClient.Pft.PftParser.StartsWithFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.startsWithFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitStartsWithFunction(ManagedClient.Pft.PftParser.StartsWithFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.startsWithFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterNowFunction(ManagedClient.Pft.PftParser.NowFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.nowFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitNowFunction(ManagedClient.Pft.PftParser.NowFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.nowFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFreeMemoryFunction(ManagedClient.Pft.PftParser.FreeMemoryFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.freeMemoryFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFreeMemoryFunction(ManagedClient.Pft.PftParser.FreeMemoryFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.freeMemoryFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterLineBreak(ManagedClient.Pft.PftParser.LineBreakContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.lineBreak"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitLineBreak(ManagedClient.Pft.PftParser.LineBreakContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.lineBreak"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterNlOperator(ManagedClient.Pft.PftParser.NlOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.nlOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitNlOperator(ManagedClient.Pft.PftParser.NlOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.nlOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterIncludeStatement(ManagedClient.Pft.PftParser.IncludeStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.includeStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitIncludeStatement(ManagedClient.Pft.PftParser.IncludeStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.includeStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterUnconditionalLiteral(ManagedClient.Pft.PftParser.UnconditionalLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.unconditionalLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitUnconditionalLiteral(ManagedClient.Pft.PftParser.UnconditionalLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.unconditionalLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterSlashOperator(ManagedClient.Pft.PftParser.SlashOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.slashOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitSlashOperator(ManagedClient.Pft.PftParser.SlashOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.slashOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterWarningStatement(ManagedClient.Pft.PftParser.WarningStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.warningStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitWarningStatement(ManagedClient.Pft.PftParser.WarningStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.warningStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPageBreak(ManagedClient.Pft.PftParser.PageBreakContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pageBreak"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPageBreak(ManagedClient.Pft.PftParser.PageBreakContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pageBreak"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterDateFunction(ManagedClient.Pft.PftParser.DateFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.dateFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitDateFunction(ManagedClient.Pft.PftParser.DateFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.dateFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTrimFunction(ManagedClient.Pft.PftParser.TrimFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTrimFunction(ManagedClient.Pft.PftParser.TrimFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMachineNameFunction(ManagedClient.Pft.PftParser.MachineNameFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.machineNameFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMachineNameFunction(ManagedClient.Pft.PftParser.MachineNameFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.machineNameFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterAssignment(ManagedClient.Pft.PftParser.AssignmentContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.assignment"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitAssignment(ManagedClient.Pft.PftParser.AssignmentContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.assignment"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPercentOperator(ManagedClient.Pft.PftParser.PercentOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.percentOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPercentOperator(ManagedClient.Pft.PftParser.PercentOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.percentOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterExpandEnvFunction(ManagedClient.Pft.PftParser.ExpandEnvFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.expandEnvFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitExpandEnvFunction(ManagedClient.Pft.PftParser.ExpandEnvFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.expandEnvFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRmaxFunction(ManagedClient.Pft.PftParser.RmaxFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rmaxFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRmaxFunction(ManagedClient.Pft.PftParser.RmaxFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rmaxFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterItalicFunction(ManagedClient.Pft.PftParser.ItalicFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.italicFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitItalicFunction(ManagedClient.Pft.PftParser.ItalicFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.italicFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterWhileLoop(ManagedClient.Pft.PftParser.WhileLoopContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.whileLoop"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitWhileLoop(ManagedClient.Pft.PftParser.WhileLoopContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.whileLoop"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterArithExpr(ManagedClient.Pft.PftParser.ArithExprContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithExpr"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitArithExpr(ManagedClient.Pft.PftParser.ArithExprContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithExpr"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterVariableReference(ManagedClient.Pft.PftParser.VariableReferenceContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.variableReference"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitVariableReference(ManagedClient.Pft.PftParser.VariableReferenceContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.variableReference"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterLicenseUsedFunction(ManagedClient.Pft.PftParser.LicenseUsedFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseUsedFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitLicenseUsedFunction(ManagedClient.Pft.PftParser.LicenseUsedFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseUsedFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterConditionParen(ManagedClient.Pft.PftParser.ConditionParenContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionParen"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitConditionParen(ManagedClient.Pft.PftParser.ConditionParenContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionParen"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRevertFunction(ManagedClient.Pft.PftParser.RevertFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.revertFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRevertFunction(ManagedClient.Pft.PftParser.RevertFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.revertFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterServerVersionFunction(ManagedClient.Pft.PftParser.ServerVersionFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.serverVersionFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitServerVersionFunction(ManagedClient.Pft.PftParser.ServerVersionFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.serverVersionFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterDeleteFileFunction(ManagedClient.Pft.PftParser.DeleteFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deleteFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitDeleteFileFunction(ManagedClient.Pft.PftParser.DeleteFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deleteFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterChooseFunction(ManagedClient.Pft.PftParser.ChooseFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.chooseFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitChooseFunction(ManagedClient.Pft.PftParser.ChooseFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.chooseFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterAppendFileFunction(ManagedClient.Pft.PftParser.AppendFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appendFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitAppendFileFunction(ManagedClient.Pft.PftParser.AppendFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appendFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTypeFunction(ManagedClient.Pft.PftParser.TypeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.typeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTypeFunction(ManagedClient.Pft.PftParser.TypeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.typeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterOrganizationFunction(ManagedClient.Pft.PftParser.OrganizationFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.organizationFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitOrganizationFunction(ManagedClient.Pft.PftParser.OrganizationFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.organizationFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterLeftFunction(ManagedClient.Pft.PftParser.LeftFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.leftFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitLeftFunction(ManagedClient.Pft.PftParser.LeftFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.leftFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterProcFunction(ManagedClient.Pft.PftParser.ProcFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitProcFunction(ManagedClient.Pft.PftParser.ProcFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterErrorStatement(ManagedClient.Pft.PftParser.ErrorStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.errorStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitErrorStatement(ManagedClient.Pft.PftParser.ErrorStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.errorStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRefFunction(ManagedClient.Pft.PftParser.RefFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.refFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRefFunction(ManagedClient.Pft.PftParser.RefFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.refFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterColorFunction(ManagedClient.Pft.PftParser.ColorFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.colorFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitColorFunction(ManagedClient.Pft.PftParser.ColorFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.colorFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRavrFunction(ManagedClient.Pft.PftParser.RavrFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ravrFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRavrFunction(ManagedClient.Pft.PftParser.RavrFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ravrFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCompositeElement(ManagedClient.Pft.PftParser.CompositeElementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compositeElement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCompositeElement(ManagedClient.Pft.PftParser.CompositeElementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compositeElement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRightHand(ManagedClient.Pft.PftParser.RightHandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rightHand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRightHand(ManagedClient.Pft.PftParser.RightHandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rightHand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterUndelRecFunction(ManagedClient.Pft.PftParser.UndelRecFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.undelRecFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitUndelRecFunction(ManagedClient.Pft.PftParser.UndelRecFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.undelRecFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterLeftHand(ManagedClient.Pft.PftParser.LeftHandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.leftHand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitLeftHand(ManagedClient.Pft.PftParser.LeftHandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.leftHand"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCondition(ManagedClient.Pft.PftParser.ConditionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCondition(ManagedClient.Pft.PftParser.ConditionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPutenvFunction(ManagedClient.Pft.PftParser.PutenvFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.putenvFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPutenvFunction(ManagedClient.Pft.PftParser.PutenvFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.putenvFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCoutFunction(ManagedClient.Pft.PftParser.CoutFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.coutFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCoutFunction(ManagedClient.Pft.PftParser.CoutFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.coutFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterEscapedLiteral(ManagedClient.Pft.PftParser.EscapedLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.escapedLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitEscapedLiteral(ManagedClient.Pft.PftParser.EscapedLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.escapedLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterParaOperator(ManagedClient.Pft.PftParser.ParaOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.paraOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitParaOperator(ManagedClient.Pft.PftParser.ParaOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.paraOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterSystemFunction(ManagedClient.Pft.PftParser.SystemFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.systemFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitSystemFunction(ManagedClient.Pft.PftParser.SystemFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.systemFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFieldReference(ManagedClient.Pft.PftParser.FieldReferenceContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldReference"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFieldReference(ManagedClient.Pft.PftParser.FieldReferenceContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldReference"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMfnOperator(ManagedClient.Pft.PftParser.MfnOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mfnOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMfnOperator(ManagedClient.Pft.PftParser.MfnOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mfnOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterWriteFileFunction(ManagedClient.Pft.PftParser.WriteFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.writeFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitWriteFileFunction(ManagedClient.Pft.PftParser.WriteFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.writeFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterConditionArith(ManagedClient.Pft.PftParser.ConditionArithContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionArith"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitConditionArith(ManagedClient.Pft.PftParser.ConditionArithContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionArith"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterSysdirFunction(ManagedClient.Pft.PftParser.SysdirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sysdirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitSysdirFunction(ManagedClient.Pft.PftParser.SysdirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sysdirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTrimRightFunction(ManagedClient.Pft.PftParser.TrimRightFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimRightFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTrimRightFunction(ManagedClient.Pft.PftParser.TrimRightFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimRightFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPushModeOperator(ManagedClient.Pft.PftParser.PushModeOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pushModeOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPushModeOperator(ManagedClient.Pft.PftParser.PushModeOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pushModeOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterClientVersionFunction(ManagedClient.Pft.PftParser.ClientVersionFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.clientVersionFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitClientVersionFunction(ManagedClient.Pft.PftParser.ClientVersionFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.clientVersionFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMinusValue(ManagedClient.Pft.PftParser.MinusValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.minusValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMinusValue(ManagedClient.Pft.PftParser.MinusValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.minusValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterConditionalLiteral(ManagedClient.Pft.PftParser.ConditionalLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionalLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitConditionalLiteral(ManagedClient.Pft.PftParser.ConditionalLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionalLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPadFunction(ManagedClient.Pft.PftParser.PadFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPadFunction(ManagedClient.Pft.PftParser.PadFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterLFunction(ManagedClient.Pft.PftParser.LFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.lFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitLFunction(ManagedClient.Pft.PftParser.LFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.lFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterValFunction(ManagedClient.Pft.PftParser.ValFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.valFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitValFunction(ManagedClient.Pft.PftParser.ValFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.valFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTraceStatement(ManagedClient.Pft.PftParser.TraceStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.traceStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTraceStatement(ManagedClient.Pft.PftParser.TraceStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.traceStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterHashOperator(ManagedClient.Pft.PftParser.HashOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.hashOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitHashOperator(ManagedClient.Pft.PftParser.HashOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.hashOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTimeFunction(ManagedClient.Pft.PftParser.TimeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.timeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTimeFunction(ManagedClient.Pft.PftParser.TimeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.timeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFieldList(ManagedClient.Pft.PftParser.FieldListContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldList"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFieldList(ManagedClient.Pft.PftParser.FieldListContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldList"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterExtendedGroupStatement(ManagedClient.Pft.PftParser.ExtendedGroupStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extendedGroupStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitExtendedGroupStatement(ManagedClient.Pft.PftParser.ExtendedGroupStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extendedGroupStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterStringAssignment(ManagedClient.Pft.PftParser.StringAssignmentContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.stringAssignment"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitStringAssignment(ManagedClient.Pft.PftParser.StringAssignmentContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.stringAssignment"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTrimLeftFunction(ManagedClient.Pft.PftParser.TrimLeftFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimLeftFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTrimLeftFunction(ManagedClient.Pft.PftParser.TrimLeftFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimLeftFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterAuthorInfo(ManagedClient.Pft.PftParser.AuthorInfoContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.authorInfo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitAuthorInfo(ManagedClient.Pft.PftParser.AuthorInfoContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.authorInfo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFontNameFunction(ManagedClient.Pft.PftParser.FontNameFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fontNameFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFontNameFunction(ManagedClient.Pft.PftParser.FontNameFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fontNameFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRepeatableLiteral(ManagedClient.Pft.PftParser.RepeatableLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.repeatableLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRepeatableLiteral(ManagedClient.Pft.PftParser.RepeatableLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.repeatableLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterIncrementFunction(ManagedClient.Pft.PftParser.IncrementFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.incrementFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitIncrementFunction(ManagedClient.Pft.PftParser.IncrementFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.incrementFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterDelRecFunction(ManagedClient.Pft.PftParser.DelRecFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.delRecFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitDelRecFunction(ManagedClient.Pft.PftParser.DelRecFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.delRecFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMaxMfnFunction(ManagedClient.Pft.PftParser.MaxMfnFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.maxMfnFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMaxMfnFunction(ManagedClient.Pft.PftParser.MaxMfnFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.maxMfnFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterParenValue(ManagedClient.Pft.PftParser.ParenValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.parenValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitParenValue(ManagedClient.Pft.PftParser.ParenValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.parenValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCatFunction(ManagedClient.Pft.PftParser.CatFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.catFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCatFunction(ManagedClient.Pft.PftParser.CatFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.catFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFileExistFunction(ManagedClient.Pft.PftParser.FileExistFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fileExistFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFileExistFunction(ManagedClient.Pft.PftParser.FileExistFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fileExistFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterReadLineFunction(ManagedClient.Pft.PftParser.ReadLineFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.readLineFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitReadLineFunction(ManagedClient.Pft.PftParser.ReadLineFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.readLineFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterF2Function(ManagedClient.Pft.PftParser.F2FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.f2Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitF2Function(ManagedClient.Pft.PftParser.F2FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.f2Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterDatabaseFunction(ManagedClient.Pft.PftParser.DatabaseFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.databaseFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitDatabaseFunction(ManagedClient.Pft.PftParser.DatabaseFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.databaseFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterX64Function(ManagedClient.Pft.PftParser.X64FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.x64Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitX64Function(ManagedClient.Pft.PftParser.X64FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.x64Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRminFunction(ManagedClient.Pft.PftParser.RminFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rminFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRminFunction(ManagedClient.Pft.PftParser.RminFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rminFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterExtractDriveFunction(ManagedClient.Pft.PftParser.ExtractDriveFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractDriveFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitExtractDriveFunction(ManagedClient.Pft.PftParser.ExtractDriveFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractDriveFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTitleInfo(ManagedClient.Pft.PftParser.TitleInfoContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.titleInfo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTitleInfo(ManagedClient.Pft.PftParser.TitleInfoContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.titleInfo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterVersioInfo(ManagedClient.Pft.PftParser.VersioInfoContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.versioInfo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitVersioInfo(ManagedClient.Pft.PftParser.VersioInfoContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.versioInfo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFFunction(ManagedClient.Pft.PftParser.FFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFFunction(ManagedClient.Pft.PftParser.FFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCenter(ManagedClient.Pft.PftParser.CenterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.center"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCenter(ManagedClient.Pft.PftParser.CenterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.center"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterArithFunction(ManagedClient.Pft.PftParser.ArithFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitArithFunction(ManagedClient.Pft.PftParser.ArithFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterUnused(ManagedClient.Pft.PftParser.UnusedContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.unused"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitUnused(ManagedClient.Pft.PftParser.UnusedContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.unused"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCommandC(ManagedClient.Pft.PftParser.CommandCContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commandC"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCommandC(ManagedClient.Pft.PftParser.CommandCContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commandC"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRuntimeFunction(ManagedClient.Pft.PftParser.RuntimeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.runtimeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRuntimeFunction(ManagedClient.Pft.PftParser.RuntimeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.runtimeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterForLoop(ManagedClient.Pft.PftParser.ForLoopContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.forLoop"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitForLoop(ManagedClient.Pft.PftParser.ForLoopContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.forLoop"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFormatInfo(ManagedClient.Pft.PftParser.FormatInfoContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.formatInfo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFormatInfo(ManagedClient.Pft.PftParser.FormatInfoContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.formatInfo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterHeader3Function(ManagedClient.Pft.PftParser.Header3FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header3Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitHeader3Function(ManagedClient.Pft.PftParser.Header3FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header3Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterNoccFunction(ManagedClient.Pft.PftParser.NoccFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.noccFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitNoccFunction(ManagedClient.Pft.PftParser.NoccFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.noccFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterEatFunction(ManagedClient.Pft.PftParser.EatFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.eatFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitEatFunction(ManagedClient.Pft.PftParser.EatFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.eatFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRequireServerFunction(ManagedClient.Pft.PftParser.RequireServerFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.requireServerFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRequireServerFunction(ManagedClient.Pft.PftParser.RequireServerFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.requireServerFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterNoccOperator(ManagedClient.Pft.PftParser.NoccOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.noccOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitNoccOperator(ManagedClient.Pft.PftParser.NoccOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.noccOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCmdlineFunction(ManagedClient.Pft.PftParser.CmdlineFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.cmdlineFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCmdlineFunction(ManagedClient.Pft.PftParser.CmdlineFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.cmdlineFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCommandX(ManagedClient.Pft.PftParser.CommandXContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commandX"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCommandX(ManagedClient.Pft.PftParser.CommandXContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commandX"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterSimpleFormat(ManagedClient.Pft.PftParser.SimpleFormatContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.simpleFormat"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitSimpleFormat(ManagedClient.Pft.PftParser.SimpleFormatContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.simpleFormat"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterUserFunction(ManagedClient.Pft.PftParser.UserFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.userFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitUserFunction(ManagedClient.Pft.PftParser.UserFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.userFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFormatExitStatement(ManagedClient.Pft.PftParser.FormatExitStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.formatExitStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFormatExitStatement(ManagedClient.Pft.PftParser.FormatExitStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.formatExitStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTouchFileFunction(ManagedClient.Pft.PftParser.TouchFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.touchFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTouchFileFunction(ManagedClient.Pft.PftParser.TouchFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.touchFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCreateDbFunction(ManagedClient.Pft.PftParser.CreateDbFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.createDbFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCreateDbFunction(ManagedClient.Pft.PftParser.CreateDbFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.createDbFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterArithAssignment(ManagedClient.Pft.PftParser.ArithAssignmentContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithAssignment"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitArithAssignment(ManagedClient.Pft.PftParser.ArithAssignmentContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithAssignment"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMessageFunction(ManagedClient.Pft.PftParser.MessageFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.messageFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMessageFunction(ManagedClient.Pft.PftParser.MessageFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.messageFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterNpostFunction(ManagedClient.Pft.PftParser.NpostFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.npostFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitNpostFunction(ManagedClient.Pft.PftParser.NpostFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.npostFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterProcedureStatement(ManagedClient.Pft.PftParser.ProcedureStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitProcedureStatement(ManagedClient.Pft.PftParser.ProcedureStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterAskFunction(ManagedClient.Pft.PftParser.AskFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.askFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitAskFunction(ManagedClient.Pft.PftParser.AskFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.askFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterDebugBreak(ManagedClient.Pft.PftParser.DebugBreakContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.debugBreak"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitDebugBreak(ManagedClient.Pft.PftParser.DebugBreakContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.debugBreak"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFatalStatement(ManagedClient.Pft.PftParser.FatalStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fatalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFatalStatement(ManagedClient.Pft.PftParser.FatalStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fatalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterChangeDbFunction(ManagedClient.Pft.PftParser.ChangeDbFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.changeDbFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitChangeDbFunction(ManagedClient.Pft.PftParser.ChangeDbFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.changeDbFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCpuFunction(ManagedClient.Pft.PftParser.CpuFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.cpuFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCpuFunction(ManagedClient.Pft.PftParser.CpuFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.cpuFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRequireClientFunction(ManagedClient.Pft.PftParser.RequireClientFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.requireClientFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRequireClientFunction(ManagedClient.Pft.PftParser.RequireClientFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.requireClientFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTempdirFunction(ManagedClient.Pft.PftParser.TempdirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.tempdirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTempdirFunction(ManagedClient.Pft.PftParser.TempdirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.tempdirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterLongLiteral(ManagedClient.Pft.PftParser.LongLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.longLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitLongLiteral(ManagedClient.Pft.PftParser.LongLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.longLiteral"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPopModeOperator(ManagedClient.Pft.PftParser.PopModeOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.popModeOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPopModeOperator(ManagedClient.Pft.PftParser.PopModeOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.popModeOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterGlobalReference(ManagedClient.Pft.PftParser.GlobalReferenceContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.globalReference"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitGlobalReference(ManagedClient.Pft.PftParser.GlobalReferenceContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.globalReference"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMstnameFunction(ManagedClient.Pft.PftParser.MstnameFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mstnameFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMstnameFunction(ManagedClient.Pft.PftParser.MstnameFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mstnameFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterEndsWithFunction(ManagedClient.Pft.PftParser.EndsWithFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.endsWithFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitEndsWithFunction(ManagedClient.Pft.PftParser.EndsWithFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.endsWithFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterUnderlineFunction(ManagedClient.Pft.PftParser.UnderlineFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.underlineFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitUnderlineFunction(ManagedClient.Pft.PftParser.UnderlineFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.underlineFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCombineFunction(ManagedClient.Pft.PftParser.CombineFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.combineFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCombineFunction(ManagedClient.Pft.PftParser.CombineFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.combineFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPadRightFunction(ManagedClient.Pft.PftParser.PadRightFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padRightFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPadRightFunction(ManagedClient.Pft.PftParser.PadRightFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padRightFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterWriteFunction(ManagedClient.Pft.PftParser.WriteFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.writeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitWriteFunction(ManagedClient.Pft.PftParser.WriteFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.writeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterSelectStatement(ManagedClient.Pft.PftParser.SelectStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.selectStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitSelectStatement(ManagedClient.Pft.PftParser.SelectStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.selectStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMsgFunction(ManagedClient.Pft.PftParser.MsgFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.msgFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMsgFunction(ManagedClient.Pft.PftParser.MsgFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.msgFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterExistFunction(ManagedClient.Pft.PftParser.ExistFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.existFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitExistFunction(ManagedClient.Pft.PftParser.ExistFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.existFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFloatValue(ManagedClient.Pft.PftParser.FloatValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.floatValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFloatValue(ManagedClient.Pft.PftParser.FloatValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.floatValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFontSizeFunction(ManagedClient.Pft.PftParser.FontSizeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fontSizeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFontSizeFunction(ManagedClient.Pft.PftParser.FontSizeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fontSizeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterLicenseCountFunction(ManagedClient.Pft.PftParser.LicenseCountFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseCountFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitLicenseCountFunction(ManagedClient.Pft.PftParser.LicenseCountFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseCountFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterExtractDirFunction(ManagedClient.Pft.PftParser.ExtractDirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractDirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitExtractDirFunction(ManagedClient.Pft.PftParser.ExtractDirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractDirFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPrimaryElement(ManagedClient.Pft.PftParser.PrimaryElementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.primaryElement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPrimaryElement(ManagedClient.Pft.PftParser.PrimaryElementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.primaryElement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterReadFileFunction(ManagedClient.Pft.PftParser.ReadFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.readFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitReadFileFunction(ManagedClient.Pft.PftParser.ReadFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.readFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterDebugStatement(ManagedClient.Pft.PftParser.DebugStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.debugStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitDebugStatement(ManagedClient.Pft.PftParser.DebugStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.debugStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterOsFunction(ManagedClient.Pft.PftParser.OsFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.osFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitOsFunction(ManagedClient.Pft.PftParser.OsFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.osFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCompositeList(ManagedClient.Pft.PftParser.CompositeListContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compositeList"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCompositeList(ManagedClient.Pft.PftParser.CompositeListContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compositeList"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterBoldFunction(ManagedClient.Pft.PftParser.BoldFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.boldFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitBoldFunction(ManagedClient.Pft.PftParser.BoldFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.boldFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterConditionString(ManagedClient.Pft.PftParser.ConditionStringContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionString"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitConditionString(ManagedClient.Pft.PftParser.ConditionStringContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionString"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterConditionNot(ManagedClient.Pft.PftParser.ConditionNotContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionNot"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitConditionNot(ManagedClient.Pft.PftParser.ConditionNotContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionNot"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterFieldPresense(ManagedClient.Pft.PftParser.FieldPresenseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldPresense"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitFieldPresense(ManagedClient.Pft.PftParser.FieldPresenseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldPresense"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterProcedureBody(ManagedClient.Pft.PftParser.ProcedureBodyContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureBody"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitProcedureBody(ManagedClient.Pft.PftParser.ProcedureBodyContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureBody"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCompareFunction(ManagedClient.Pft.PftParser.CompareFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compareFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCompareFunction(ManagedClient.Pft.PftParser.CompareFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compareFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterConditionalStatement(ManagedClient.Pft.PftParser.ConditionalStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitConditionalStatement(ManagedClient.Pft.PftParser.ConditionalStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionalStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRightFunction(ManagedClient.Pft.PftParser.RightFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rightFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRightFunction(ManagedClient.Pft.PftParser.RightFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rightFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterProgram(ManagedClient.Pft.PftParser.ProgramContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitProgram(ManagedClient.Pft.PftParser.ProgramContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterDeleteDbFunction(ManagedClient.Pft.PftParser.DeleteDbFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deleteDbFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitDeleteDbFunction(ManagedClient.Pft.PftParser.DeleteDbFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deleteDbFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterVal2Function(ManagedClient.Pft.PftParser.Val2FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.val2Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitVal2Function(ManagedClient.Pft.PftParser.Val2FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.val2Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMapFunction(ManagedClient.Pft.PftParser.MapFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mapFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMapFunction(ManagedClient.Pft.PftParser.MapFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mapFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterAppSettingFunction(ManagedClient.Pft.PftParser.AppSettingFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appSettingFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitAppSettingFunction(ManagedClient.Pft.PftParser.AppSettingFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appSettingFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterConnectedFunction(ManagedClient.Pft.PftParser.ConnectedFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.connectedFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitConnectedFunction(ManagedClient.Pft.PftParser.ConnectedFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.connectedFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterRsumFunction(ManagedClient.Pft.PftParser.RsumFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rsumFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitRsumFunction(ManagedClient.Pft.PftParser.RsumFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rsumFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterHeader1Function(ManagedClient.Pft.PftParser.Header1FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header1Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitHeader1Function(ManagedClient.Pft.PftParser.Header1FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header1Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterNumericValue(ManagedClient.Pft.PftParser.NumericValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.numericValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitNumericValue(ManagedClient.Pft.PftParser.NumericValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.numericValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterPlatformFunction(ManagedClient.Pft.PftParser.PlatformFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.platformFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitPlatformFunction(ManagedClient.Pft.PftParser.PlatformFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.platformFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterBreakOperator(ManagedClient.Pft.PftParser.BreakOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.breakOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitBreakOperator(ManagedClient.Pft.PftParser.BreakOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.breakOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterLicenseLeftFunction(ManagedClient.Pft.PftParser.LicenseLeftFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseLeftFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitLicenseLeftFunction(ManagedClient.Pft.PftParser.LicenseLeftFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseLeftFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterHeader2Function(ManagedClient.Pft.PftParser.Header2FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header2Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitHeader2Function(ManagedClient.Pft.PftParser.Header2FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header2Function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterIncludeFunction(ManagedClient.Pft.PftParser.IncludeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.includeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitIncludeFunction(ManagedClient.Pft.PftParser.IncludeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.includeFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterWorkingSetFunction(ManagedClient.Pft.PftParser.WorkingSetFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.workingSetFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitWorkingSetFunction(ManagedClient.Pft.PftParser.WorkingSetFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.workingSetFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterMfnValue(ManagedClient.Pft.PftParser.MfnValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mfnValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitMfnValue(ManagedClient.Pft.PftParser.MfnValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mfnValue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterToupperFunction(ManagedClient.Pft.PftParser.ToupperFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.toupperFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitToupperFunction(ManagedClient.Pft.PftParser.ToupperFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.toupperFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterHaveFunction(ManagedClient.Pft.PftParser.HaveFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.haveFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitHaveFunction(ManagedClient.Pft.PftParser.HaveFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.haveFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterHostFunction(ManagedClient.Pft.PftParser.HostFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.hostFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitHostFunction(ManagedClient.Pft.PftParser.HostFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.hostFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterGroupStatement(ManagedClient.Pft.PftParser.GroupStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.groupStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitGroupStatement(ManagedClient.Pft.PftParser.GroupStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.groupStatement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterExtractExtFunction(ManagedClient.Pft.PftParser.ExtractExtFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractExtFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitExtractExtFunction(ManagedClient.Pft.PftParser.ExtractExtFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractExtFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterTruncateFileFunction(ManagedClient.Pft.PftParser.TruncateFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.truncateFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitTruncateFileFunction(ManagedClient.Pft.PftParser.TruncateFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.truncateFileFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterCommaOperator(ManagedClient.Pft.PftParser.CommaOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commaOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitCommaOperator(ManagedClient.Pft.PftParser.CommaOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commaOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterIoccOperator(ManagedClient.Pft.PftParser.IoccOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ioccOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitIoccOperator(ManagedClient.Pft.PftParser.IoccOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ioccOperator"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.EnterChrFunction(ManagedClient.Pft.PftParser.ChrFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.chrFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.IPftListener.ExitChrFunction(ManagedClient.Pft.PftParser.ChrFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.chrFunction"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCallStatement(ManagedClient.Pft.PftParser.CallStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.callStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCallStatement(ManagedClient.Pft.PftParser.CallStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.callStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterDeletedFunction(ManagedClient.Pft.PftParser.DeletedFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deletedFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitDeletedFunction(ManagedClient.Pft.PftParser.DeletedFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deletedFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPftInfoBlock(ManagedClient.Pft.PftParser.PftInfoBlockContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pftInfoBlock"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPftInfoBlock(ManagedClient.Pft.PftParser.PftInfoBlockContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pftInfoBlock"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterIffFunction(ManagedClient.Pft.PftParser.IffFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.iffFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitIffFunction(ManagedClient.Pft.PftParser.IffFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.iffFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFileSizeFunction(ManagedClient.Pft.PftParser.FileSizeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fileSizeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFileSizeFunction(ManagedClient.Pft.PftParser.FileSizeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fileSizeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterNewrecFunction(ManagedClient.Pft.PftParser.NewrecFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.newrecFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitNewrecFunction(ManagedClient.Pft.PftParser.NewrecFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.newrecFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterReplaceFunction(ManagedClient.Pft.PftParser.ReplaceFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.replaceFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitReplaceFunction(ManagedClient.Pft.PftParser.ReplaceFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.replaceFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPortFunction(ManagedClient.Pft.PftParser.PortFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.portFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPortFunction(ManagedClient.Pft.PftParser.PortFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.portFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterExtractNameFunction(ManagedClient.Pft.PftParser.ExtractNameFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractNameFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitExtractNameFunction(ManagedClient.Pft.PftParser.ExtractNameFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractNameFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTolowerFunction(ManagedClient.Pft.PftParser.TolowerFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.tolowerFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTolowerFunction(ManagedClient.Pft.PftParser.TolowerFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.tolowerFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCurdirFunction(ManagedClient.Pft.PftParser.CurdirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.curdirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCurdirFunction(ManagedClient.Pft.PftParser.CurdirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.curdirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterInteractiveFunction(ManagedClient.Pft.PftParser.InteractiveFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.interactiveFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitInteractiveFunction(ManagedClient.Pft.PftParser.InteractiveFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.interactiveFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTotalMemoryFunction(ManagedClient.Pft.PftParser.TotalMemoryFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.totalMemoryFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTotalMemoryFunction(ManagedClient.Pft.PftParser.TotalMemoryFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.totalMemoryFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMidFunction(ManagedClient.Pft.PftParser.MidFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.midFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMidFunction(ManagedClient.Pft.PftParser.MidFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.midFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterAppDirFunction(ManagedClient.Pft.PftParser.AppDirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appDirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitAppDirFunction(ManagedClient.Pft.PftParser.AppDirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appDirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPadLeftFunction(ManagedClient.Pft.PftParser.PadLeftFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padLeftFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPadLeftFunction(ManagedClient.Pft.PftParser.PadLeftFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padLeftFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterIniFunction(ManagedClient.Pft.PftParser.IniFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.iniFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitIniFunction(ManagedClient.Pft.PftParser.IniFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.iniFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterEditTextFunction(ManagedClient.Pft.PftParser.EditTextFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.editTextFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitEditTextFunction(ManagedClient.Pft.PftParser.EditTextFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.editTextFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterConditionBoolean(ManagedClient.Pft.PftParser.ConditionBooleanContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionBoolean"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitConditionBoolean(ManagedClient.Pft.PftParser.ConditionBooleanContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionBoolean"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterLocalIPFunction(ManagedClient.Pft.PftParser.LocalIPFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.localIPFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitLocalIPFunction(ManagedClient.Pft.PftParser.LocalIPFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.localIPFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterProcedureArguments(ManagedClient.Pft.PftParser.ProcedureArgumentsContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureArguments"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitProcedureArguments(ManagedClient.Pft.PftParser.ProcedureArgumentsContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureArguments"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterSFunction(ManagedClient.Pft.PftParser.SFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitSFunction(ManagedClient.Pft.PftParser.SFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterSizeFunction(ManagedClient.Pft.PftParser.SizeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sizeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitSizeFunction(ManagedClient.Pft.PftParser.SizeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sizeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterModeSwitch(ManagedClient.Pft.PftParser.ModeSwitchContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.modeSwitch"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitModeSwitch(ManagedClient.Pft.PftParser.ModeSwitchContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.modeSwitch"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterGetenvFunction(ManagedClient.Pft.PftParser.GetenvFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.getenvFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitGetenvFunction(ManagedClient.Pft.PftParser.GetenvFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.getenvFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterOrdFunction(ManagedClient.Pft.PftParser.OrdFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ordFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitOrdFunction(ManagedClient.Pft.PftParser.OrdFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ordFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterBeepOperator(ManagedClient.Pft.PftParser.BeepOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.beepOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitBeepOperator(ManagedClient.Pft.PftParser.BeepOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.beepOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterStartsWithFunction(ManagedClient.Pft.PftParser.StartsWithFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.startsWithFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitStartsWithFunction(ManagedClient.Pft.PftParser.StartsWithFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.startsWithFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterNowFunction(ManagedClient.Pft.PftParser.NowFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.nowFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitNowFunction(ManagedClient.Pft.PftParser.NowFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.nowFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFreeMemoryFunction(ManagedClient.Pft.PftParser.FreeMemoryFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.freeMemoryFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFreeMemoryFunction(ManagedClient.Pft.PftParser.FreeMemoryFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.freeMemoryFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterLineBreak(ManagedClient.Pft.PftParser.LineBreakContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.lineBreak"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitLineBreak(ManagedClient.Pft.PftParser.LineBreakContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.lineBreak"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterNlOperator(ManagedClient.Pft.PftParser.NlOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.nlOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitNlOperator(ManagedClient.Pft.PftParser.NlOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.nlOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterIncludeStatement(ManagedClient.Pft.PftParser.IncludeStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.includeStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitIncludeStatement(ManagedClient.Pft.PftParser.IncludeStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.includeStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterUnconditionalLiteral(ManagedClient.Pft.PftParser.UnconditionalLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.unconditionalLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitUnconditionalLiteral(ManagedClient.Pft.PftParser.UnconditionalLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.unconditionalLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterSlashOperator(ManagedClient.Pft.PftParser.SlashOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.slashOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitSlashOperator(ManagedClient.Pft.PftParser.SlashOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.slashOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterWarningStatement(ManagedClient.Pft.PftParser.WarningStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.warningStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitWarningStatement(ManagedClient.Pft.PftParser.WarningStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.warningStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPageBreak(ManagedClient.Pft.PftParser.PageBreakContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pageBreak"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPageBreak(ManagedClient.Pft.PftParser.PageBreakContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pageBreak"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterDateFunction(ManagedClient.Pft.PftParser.DateFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.dateFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitDateFunction(ManagedClient.Pft.PftParser.DateFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.dateFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTrimFunction(ManagedClient.Pft.PftParser.TrimFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTrimFunction(ManagedClient.Pft.PftParser.TrimFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMachineNameFunction(ManagedClient.Pft.PftParser.MachineNameFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.machineNameFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMachineNameFunction(ManagedClient.Pft.PftParser.MachineNameFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.machineNameFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterAssignment(ManagedClient.Pft.PftParser.AssignmentContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.assignment"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitAssignment(ManagedClient.Pft.PftParser.AssignmentContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.assignment"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPercentOperator(ManagedClient.Pft.PftParser.PercentOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.percentOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPercentOperator(ManagedClient.Pft.PftParser.PercentOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.percentOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterExpandEnvFunction(ManagedClient.Pft.PftParser.ExpandEnvFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.expandEnvFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitExpandEnvFunction(ManagedClient.Pft.PftParser.ExpandEnvFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.expandEnvFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRmaxFunction(ManagedClient.Pft.PftParser.RmaxFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rmaxFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRmaxFunction(ManagedClient.Pft.PftParser.RmaxFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rmaxFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterItalicFunction(ManagedClient.Pft.PftParser.ItalicFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.italicFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitItalicFunction(ManagedClient.Pft.PftParser.ItalicFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.italicFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterWhileLoop(ManagedClient.Pft.PftParser.WhileLoopContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.whileLoop"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitWhileLoop(ManagedClient.Pft.PftParser.WhileLoopContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.whileLoop"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterArithExpr(ManagedClient.Pft.PftParser.ArithExprContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithExpr"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitArithExpr(ManagedClient.Pft.PftParser.ArithExprContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithExpr"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterVariableReference(ManagedClient.Pft.PftParser.VariableReferenceContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.variableReference"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitVariableReference(ManagedClient.Pft.PftParser.VariableReferenceContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.variableReference"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterLicenseUsedFunction(ManagedClient.Pft.PftParser.LicenseUsedFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseUsedFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitLicenseUsedFunction(ManagedClient.Pft.PftParser.LicenseUsedFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseUsedFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterConditionParen(ManagedClient.Pft.PftParser.ConditionParenContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionParen"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitConditionParen(ManagedClient.Pft.PftParser.ConditionParenContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionParen"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRevertFunction(ManagedClient.Pft.PftParser.RevertFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.revertFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRevertFunction(ManagedClient.Pft.PftParser.RevertFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.revertFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterServerVersionFunction(ManagedClient.Pft.PftParser.ServerVersionFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.serverVersionFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitServerVersionFunction(ManagedClient.Pft.PftParser.ServerVersionFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.serverVersionFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterDeleteFileFunction(ManagedClient.Pft.PftParser.DeleteFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deleteFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitDeleteFileFunction(ManagedClient.Pft.PftParser.DeleteFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deleteFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterChooseFunction(ManagedClient.Pft.PftParser.ChooseFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.chooseFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitChooseFunction(ManagedClient.Pft.PftParser.ChooseFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.chooseFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterAppendFileFunction(ManagedClient.Pft.PftParser.AppendFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appendFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitAppendFileFunction(ManagedClient.Pft.PftParser.AppendFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appendFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTypeFunction(ManagedClient.Pft.PftParser.TypeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.typeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTypeFunction(ManagedClient.Pft.PftParser.TypeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.typeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterOrganizationFunction(ManagedClient.Pft.PftParser.OrganizationFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.organizationFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitOrganizationFunction(ManagedClient.Pft.PftParser.OrganizationFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.organizationFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterLeftFunction(ManagedClient.Pft.PftParser.LeftFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.leftFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitLeftFunction(ManagedClient.Pft.PftParser.LeftFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.leftFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterProcFunction(ManagedClient.Pft.PftParser.ProcFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitProcFunction(ManagedClient.Pft.PftParser.ProcFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterErrorStatement(ManagedClient.Pft.PftParser.ErrorStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.errorStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitErrorStatement(ManagedClient.Pft.PftParser.ErrorStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.errorStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRefFunction(ManagedClient.Pft.PftParser.RefFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.refFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRefFunction(ManagedClient.Pft.PftParser.RefFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.refFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterColorFunction(ManagedClient.Pft.PftParser.ColorFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.colorFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitColorFunction(ManagedClient.Pft.PftParser.ColorFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.colorFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRavrFunction(ManagedClient.Pft.PftParser.RavrFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ravrFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRavrFunction(ManagedClient.Pft.PftParser.RavrFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ravrFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCompositeElement(ManagedClient.Pft.PftParser.CompositeElementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compositeElement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCompositeElement(ManagedClient.Pft.PftParser.CompositeElementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compositeElement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRightHand(ManagedClient.Pft.PftParser.RightHandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rightHand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRightHand(ManagedClient.Pft.PftParser.RightHandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rightHand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterUndelRecFunction(ManagedClient.Pft.PftParser.UndelRecFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.undelRecFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitUndelRecFunction(ManagedClient.Pft.PftParser.UndelRecFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.undelRecFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterLeftHand(ManagedClient.Pft.PftParser.LeftHandContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.leftHand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitLeftHand(ManagedClient.Pft.PftParser.LeftHandContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.leftHand"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCondition(ManagedClient.Pft.PftParser.ConditionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.condition"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCondition(ManagedClient.Pft.PftParser.ConditionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.condition"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPutenvFunction(ManagedClient.Pft.PftParser.PutenvFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.putenvFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPutenvFunction(ManagedClient.Pft.PftParser.PutenvFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.putenvFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCoutFunction(ManagedClient.Pft.PftParser.CoutFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.coutFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCoutFunction(ManagedClient.Pft.PftParser.CoutFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.coutFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterEscapedLiteral(ManagedClient.Pft.PftParser.EscapedLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.escapedLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitEscapedLiteral(ManagedClient.Pft.PftParser.EscapedLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.escapedLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterParaOperator(ManagedClient.Pft.PftParser.ParaOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.paraOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitParaOperator(ManagedClient.Pft.PftParser.ParaOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.paraOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterSystemFunction(ManagedClient.Pft.PftParser.SystemFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.systemFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitSystemFunction(ManagedClient.Pft.PftParser.SystemFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.systemFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFieldReference(ManagedClient.Pft.PftParser.FieldReferenceContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldReference"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFieldReference(ManagedClient.Pft.PftParser.FieldReferenceContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldReference"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMfnOperator(ManagedClient.Pft.PftParser.MfnOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mfnOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMfnOperator(ManagedClient.Pft.PftParser.MfnOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mfnOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterWriteFileFunction(ManagedClient.Pft.PftParser.WriteFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.writeFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitWriteFileFunction(ManagedClient.Pft.PftParser.WriteFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.writeFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterConditionArith(ManagedClient.Pft.PftParser.ConditionArithContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionArith"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitConditionArith(ManagedClient.Pft.PftParser.ConditionArithContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionArith"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterSysdirFunction(ManagedClient.Pft.PftParser.SysdirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sysdirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitSysdirFunction(ManagedClient.Pft.PftParser.SysdirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.sysdirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTrimRightFunction(ManagedClient.Pft.PftParser.TrimRightFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimRightFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTrimRightFunction(ManagedClient.Pft.PftParser.TrimRightFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimRightFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPushModeOperator(ManagedClient.Pft.PftParser.PushModeOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pushModeOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPushModeOperator(ManagedClient.Pft.PftParser.PushModeOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.pushModeOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterClientVersionFunction(ManagedClient.Pft.PftParser.ClientVersionFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.clientVersionFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitClientVersionFunction(ManagedClient.Pft.PftParser.ClientVersionFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.clientVersionFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMinusValue(ManagedClient.Pft.PftParser.MinusValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.minusValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMinusValue(ManagedClient.Pft.PftParser.MinusValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.minusValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterConditionalLiteral(ManagedClient.Pft.PftParser.ConditionalLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionalLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitConditionalLiteral(ManagedClient.Pft.PftParser.ConditionalLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionalLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPadFunction(ManagedClient.Pft.PftParser.PadFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPadFunction(ManagedClient.Pft.PftParser.PadFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterLFunction(ManagedClient.Pft.PftParser.LFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.lFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitLFunction(ManagedClient.Pft.PftParser.LFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.lFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterValFunction(ManagedClient.Pft.PftParser.ValFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.valFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitValFunction(ManagedClient.Pft.PftParser.ValFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.valFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTraceStatement(ManagedClient.Pft.PftParser.TraceStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.traceStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTraceStatement(ManagedClient.Pft.PftParser.TraceStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.traceStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterHashOperator(ManagedClient.Pft.PftParser.HashOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.hashOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitHashOperator(ManagedClient.Pft.PftParser.HashOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.hashOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTimeFunction(ManagedClient.Pft.PftParser.TimeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.timeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTimeFunction(ManagedClient.Pft.PftParser.TimeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.timeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFieldList(ManagedClient.Pft.PftParser.FieldListContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldList"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFieldList(ManagedClient.Pft.PftParser.FieldListContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldList"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterExtendedGroupStatement(ManagedClient.Pft.PftParser.ExtendedGroupStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extendedGroupStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitExtendedGroupStatement(ManagedClient.Pft.PftParser.ExtendedGroupStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extendedGroupStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterStringAssignment(ManagedClient.Pft.PftParser.StringAssignmentContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.stringAssignment"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitStringAssignment(ManagedClient.Pft.PftParser.StringAssignmentContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.stringAssignment"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTrimLeftFunction(ManagedClient.Pft.PftParser.TrimLeftFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimLeftFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTrimLeftFunction(ManagedClient.Pft.PftParser.TrimLeftFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.trimLeftFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterAuthorInfo(ManagedClient.Pft.PftParser.AuthorInfoContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.authorInfo"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitAuthorInfo(ManagedClient.Pft.PftParser.AuthorInfoContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.authorInfo"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFontNameFunction(ManagedClient.Pft.PftParser.FontNameFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fontNameFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFontNameFunction(ManagedClient.Pft.PftParser.FontNameFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fontNameFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRepeatableLiteral(ManagedClient.Pft.PftParser.RepeatableLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.repeatableLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRepeatableLiteral(ManagedClient.Pft.PftParser.RepeatableLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.repeatableLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterIncrementFunction(ManagedClient.Pft.PftParser.IncrementFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.incrementFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitIncrementFunction(ManagedClient.Pft.PftParser.IncrementFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.incrementFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterDelRecFunction(ManagedClient.Pft.PftParser.DelRecFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.delRecFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitDelRecFunction(ManagedClient.Pft.PftParser.DelRecFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.delRecFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMaxMfnFunction(ManagedClient.Pft.PftParser.MaxMfnFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.maxMfnFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMaxMfnFunction(ManagedClient.Pft.PftParser.MaxMfnFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.maxMfnFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterParenValue(ManagedClient.Pft.PftParser.ParenValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.parenValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitParenValue(ManagedClient.Pft.PftParser.ParenValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.parenValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCatFunction(ManagedClient.Pft.PftParser.CatFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.catFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCatFunction(ManagedClient.Pft.PftParser.CatFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.catFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFileExistFunction(ManagedClient.Pft.PftParser.FileExistFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fileExistFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFileExistFunction(ManagedClient.Pft.PftParser.FileExistFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fileExistFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterReadLineFunction(ManagedClient.Pft.PftParser.ReadLineFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.readLineFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitReadLineFunction(ManagedClient.Pft.PftParser.ReadLineFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.readLineFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterF2Function(ManagedClient.Pft.PftParser.F2FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.f2Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitF2Function(ManagedClient.Pft.PftParser.F2FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.f2Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterDatabaseFunction(ManagedClient.Pft.PftParser.DatabaseFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.databaseFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitDatabaseFunction(ManagedClient.Pft.PftParser.DatabaseFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.databaseFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterX64Function(ManagedClient.Pft.PftParser.X64FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.x64Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitX64Function(ManagedClient.Pft.PftParser.X64FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.x64Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRminFunction(ManagedClient.Pft.PftParser.RminFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rminFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRminFunction(ManagedClient.Pft.PftParser.RminFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rminFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterExtractDriveFunction(ManagedClient.Pft.PftParser.ExtractDriveFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractDriveFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitExtractDriveFunction(ManagedClient.Pft.PftParser.ExtractDriveFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractDriveFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTitleInfo(ManagedClient.Pft.PftParser.TitleInfoContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.titleInfo"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTitleInfo(ManagedClient.Pft.PftParser.TitleInfoContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.titleInfo"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterVersioInfo(ManagedClient.Pft.PftParser.VersioInfoContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.versioInfo"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitVersioInfo(ManagedClient.Pft.PftParser.VersioInfoContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.versioInfo"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFFunction(ManagedClient.Pft.PftParser.FFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFFunction(ManagedClient.Pft.PftParser.FFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCenter(ManagedClient.Pft.PftParser.CenterContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.center"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCenter(ManagedClient.Pft.PftParser.CenterContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.center"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterArithFunction(ManagedClient.Pft.PftParser.ArithFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitArithFunction(ManagedClient.Pft.PftParser.ArithFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterUnused(ManagedClient.Pft.PftParser.UnusedContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.unused"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitUnused(ManagedClient.Pft.PftParser.UnusedContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.unused"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCommandC(ManagedClient.Pft.PftParser.CommandCContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commandC"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCommandC(ManagedClient.Pft.PftParser.CommandCContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commandC"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRuntimeFunction(ManagedClient.Pft.PftParser.RuntimeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.runtimeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRuntimeFunction(ManagedClient.Pft.PftParser.RuntimeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.runtimeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterForLoop(ManagedClient.Pft.PftParser.ForLoopContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.forLoop"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitForLoop(ManagedClient.Pft.PftParser.ForLoopContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.forLoop"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFormatInfo(ManagedClient.Pft.PftParser.FormatInfoContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.formatInfo"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFormatInfo(ManagedClient.Pft.PftParser.FormatInfoContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.formatInfo"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterHeader3Function(ManagedClient.Pft.PftParser.Header3FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header3Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitHeader3Function(ManagedClient.Pft.PftParser.Header3FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header3Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterNoccFunction(ManagedClient.Pft.PftParser.NoccFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.noccFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitNoccFunction(ManagedClient.Pft.PftParser.NoccFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.noccFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterEatFunction(ManagedClient.Pft.PftParser.EatFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.eatFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitEatFunction(ManagedClient.Pft.PftParser.EatFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.eatFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRequireServerFunction(ManagedClient.Pft.PftParser.RequireServerFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.requireServerFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRequireServerFunction(ManagedClient.Pft.PftParser.RequireServerFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.requireServerFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterNoccOperator(ManagedClient.Pft.PftParser.NoccOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.noccOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitNoccOperator(ManagedClient.Pft.PftParser.NoccOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.noccOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCmdlineFunction(ManagedClient.Pft.PftParser.CmdlineFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.cmdlineFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCmdlineFunction(ManagedClient.Pft.PftParser.CmdlineFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.cmdlineFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCommandX(ManagedClient.Pft.PftParser.CommandXContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commandX"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCommandX(ManagedClient.Pft.PftParser.CommandXContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commandX"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterSimpleFormat(ManagedClient.Pft.PftParser.SimpleFormatContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.simpleFormat"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitSimpleFormat(ManagedClient.Pft.PftParser.SimpleFormatContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.simpleFormat"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterUserFunction(ManagedClient.Pft.PftParser.UserFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.userFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitUserFunction(ManagedClient.Pft.PftParser.UserFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.userFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFormatExitStatement(ManagedClient.Pft.PftParser.FormatExitStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.formatExitStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFormatExitStatement(ManagedClient.Pft.PftParser.FormatExitStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.formatExitStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTouchFileFunction(ManagedClient.Pft.PftParser.TouchFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.touchFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTouchFileFunction(ManagedClient.Pft.PftParser.TouchFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.touchFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCreateDbFunction(ManagedClient.Pft.PftParser.CreateDbFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.createDbFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCreateDbFunction(ManagedClient.Pft.PftParser.CreateDbFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.createDbFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterArithAssignment(ManagedClient.Pft.PftParser.ArithAssignmentContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithAssignment"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitArithAssignment(ManagedClient.Pft.PftParser.ArithAssignmentContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.arithAssignment"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMessageFunction(ManagedClient.Pft.PftParser.MessageFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.messageFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMessageFunction(ManagedClient.Pft.PftParser.MessageFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.messageFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterNpostFunction(ManagedClient.Pft.PftParser.NpostFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.npostFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitNpostFunction(ManagedClient.Pft.PftParser.NpostFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.npostFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterProcedureStatement(ManagedClient.Pft.PftParser.ProcedureStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitProcedureStatement(ManagedClient.Pft.PftParser.ProcedureStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterAskFunction(ManagedClient.Pft.PftParser.AskFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.askFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitAskFunction(ManagedClient.Pft.PftParser.AskFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.askFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterDebugBreak(ManagedClient.Pft.PftParser.DebugBreakContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.debugBreak"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitDebugBreak(ManagedClient.Pft.PftParser.DebugBreakContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.debugBreak"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFatalStatement(ManagedClient.Pft.PftParser.FatalStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fatalStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFatalStatement(ManagedClient.Pft.PftParser.FatalStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fatalStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterChangeDbFunction(ManagedClient.Pft.PftParser.ChangeDbFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.changeDbFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitChangeDbFunction(ManagedClient.Pft.PftParser.ChangeDbFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.changeDbFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCpuFunction(ManagedClient.Pft.PftParser.CpuFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.cpuFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCpuFunction(ManagedClient.Pft.PftParser.CpuFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.cpuFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRequireClientFunction(ManagedClient.Pft.PftParser.RequireClientFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.requireClientFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRequireClientFunction(ManagedClient.Pft.PftParser.RequireClientFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.requireClientFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTempdirFunction(ManagedClient.Pft.PftParser.TempdirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.tempdirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTempdirFunction(ManagedClient.Pft.PftParser.TempdirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.tempdirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterLongLiteral(ManagedClient.Pft.PftParser.LongLiteralContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.longLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitLongLiteral(ManagedClient.Pft.PftParser.LongLiteralContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.longLiteral"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPopModeOperator(ManagedClient.Pft.PftParser.PopModeOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.popModeOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPopModeOperator(ManagedClient.Pft.PftParser.PopModeOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.popModeOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterGlobalReference(ManagedClient.Pft.PftParser.GlobalReferenceContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.globalReference"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitGlobalReference(ManagedClient.Pft.PftParser.GlobalReferenceContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.globalReference"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMstnameFunction(ManagedClient.Pft.PftParser.MstnameFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mstnameFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMstnameFunction(ManagedClient.Pft.PftParser.MstnameFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mstnameFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterEndsWithFunction(ManagedClient.Pft.PftParser.EndsWithFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.endsWithFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitEndsWithFunction(ManagedClient.Pft.PftParser.EndsWithFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.endsWithFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterUnderlineFunction(ManagedClient.Pft.PftParser.UnderlineFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.underlineFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitUnderlineFunction(ManagedClient.Pft.PftParser.UnderlineFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.underlineFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCombineFunction(ManagedClient.Pft.PftParser.CombineFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.combineFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCombineFunction(ManagedClient.Pft.PftParser.CombineFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.combineFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPadRightFunction(ManagedClient.Pft.PftParser.PadRightFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padRightFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPadRightFunction(ManagedClient.Pft.PftParser.PadRightFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.padRightFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterWriteFunction(ManagedClient.Pft.PftParser.WriteFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.writeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitWriteFunction(ManagedClient.Pft.PftParser.WriteFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.writeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterSelectStatement(ManagedClient.Pft.PftParser.SelectStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.selectStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitSelectStatement(ManagedClient.Pft.PftParser.SelectStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.selectStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMsgFunction(ManagedClient.Pft.PftParser.MsgFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.msgFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMsgFunction(ManagedClient.Pft.PftParser.MsgFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.msgFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterExistFunction(ManagedClient.Pft.PftParser.ExistFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.existFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitExistFunction(ManagedClient.Pft.PftParser.ExistFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.existFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFloatValue(ManagedClient.Pft.PftParser.FloatValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.floatValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFloatValue(ManagedClient.Pft.PftParser.FloatValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.floatValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFontSizeFunction(ManagedClient.Pft.PftParser.FontSizeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fontSizeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFontSizeFunction(ManagedClient.Pft.PftParser.FontSizeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fontSizeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterLicenseCountFunction(ManagedClient.Pft.PftParser.LicenseCountFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseCountFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitLicenseCountFunction(ManagedClient.Pft.PftParser.LicenseCountFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseCountFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterExtractDirFunction(ManagedClient.Pft.PftParser.ExtractDirFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractDirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitExtractDirFunction(ManagedClient.Pft.PftParser.ExtractDirFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractDirFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPrimaryElement(ManagedClient.Pft.PftParser.PrimaryElementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.primaryElement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPrimaryElement(ManagedClient.Pft.PftParser.PrimaryElementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.primaryElement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterReadFileFunction(ManagedClient.Pft.PftParser.ReadFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.readFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitReadFileFunction(ManagedClient.Pft.PftParser.ReadFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.readFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterDebugStatement(ManagedClient.Pft.PftParser.DebugStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.debugStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitDebugStatement(ManagedClient.Pft.PftParser.DebugStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.debugStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterOsFunction(ManagedClient.Pft.PftParser.OsFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.osFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitOsFunction(ManagedClient.Pft.PftParser.OsFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.osFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCompositeList(ManagedClient.Pft.PftParser.CompositeListContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compositeList"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCompositeList(ManagedClient.Pft.PftParser.CompositeListContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compositeList"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterBoldFunction(ManagedClient.Pft.PftParser.BoldFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.boldFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitBoldFunction(ManagedClient.Pft.PftParser.BoldFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.boldFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterConditionString(ManagedClient.Pft.PftParser.ConditionStringContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionString"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitConditionString(ManagedClient.Pft.PftParser.ConditionStringContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionString"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterConditionNot(ManagedClient.Pft.PftParser.ConditionNotContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionNot"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitConditionNot(ManagedClient.Pft.PftParser.ConditionNotContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionNot"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterFieldPresense(ManagedClient.Pft.PftParser.FieldPresenseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldPresense"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitFieldPresense(ManagedClient.Pft.PftParser.FieldPresenseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.fieldPresense"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterProcedureBody(ManagedClient.Pft.PftParser.ProcedureBodyContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureBody"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitProcedureBody(ManagedClient.Pft.PftParser.ProcedureBodyContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.procedureBody"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCompareFunction(ManagedClient.Pft.PftParser.CompareFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compareFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCompareFunction(ManagedClient.Pft.PftParser.CompareFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.compareFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterConditionalStatement(ManagedClient.Pft.PftParser.ConditionalStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionalStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitConditionalStatement(ManagedClient.Pft.PftParser.ConditionalStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.conditionalStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRightFunction(ManagedClient.Pft.PftParser.RightFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rightFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRightFunction(ManagedClient.Pft.PftParser.RightFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rightFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterProgram(ManagedClient.Pft.PftParser.ProgramContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.program"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitProgram(ManagedClient.Pft.PftParser.ProgramContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.program"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterDeleteDbFunction(ManagedClient.Pft.PftParser.DeleteDbFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deleteDbFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitDeleteDbFunction(ManagedClient.Pft.PftParser.DeleteDbFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.deleteDbFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterVal2Function(ManagedClient.Pft.PftParser.Val2FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.val2Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitVal2Function(ManagedClient.Pft.PftParser.Val2FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.val2Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMapFunction(ManagedClient.Pft.PftParser.MapFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mapFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMapFunction(ManagedClient.Pft.PftParser.MapFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mapFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterAppSettingFunction(ManagedClient.Pft.PftParser.AppSettingFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appSettingFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitAppSettingFunction(ManagedClient.Pft.PftParser.AppSettingFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.appSettingFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterConnectedFunction(ManagedClient.Pft.PftParser.ConnectedFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.connectedFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitConnectedFunction(ManagedClient.Pft.PftParser.ConnectedFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.connectedFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterRsumFunction(ManagedClient.Pft.PftParser.RsumFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rsumFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitRsumFunction(ManagedClient.Pft.PftParser.RsumFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.rsumFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterHeader1Function(ManagedClient.Pft.PftParser.Header1FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header1Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitHeader1Function(ManagedClient.Pft.PftParser.Header1FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header1Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterNumericValue(ManagedClient.Pft.PftParser.NumericValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.numericValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitNumericValue(ManagedClient.Pft.PftParser.NumericValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.numericValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterPlatformFunction(ManagedClient.Pft.PftParser.PlatformFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.platformFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitPlatformFunction(ManagedClient.Pft.PftParser.PlatformFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.platformFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterBreakOperator(ManagedClient.Pft.PftParser.BreakOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.breakOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitBreakOperator(ManagedClient.Pft.PftParser.BreakOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.breakOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterLicenseLeftFunction(ManagedClient.Pft.PftParser.LicenseLeftFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseLeftFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitLicenseLeftFunction(ManagedClient.Pft.PftParser.LicenseLeftFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.licenseLeftFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterHeader2Function(ManagedClient.Pft.PftParser.Header2FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header2Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitHeader2Function(ManagedClient.Pft.PftParser.Header2FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.header2Function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterIncludeFunction(ManagedClient.Pft.PftParser.IncludeFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.includeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitIncludeFunction(ManagedClient.Pft.PftParser.IncludeFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.includeFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterWorkingSetFunction(ManagedClient.Pft.PftParser.WorkingSetFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.workingSetFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitWorkingSetFunction(ManagedClient.Pft.PftParser.WorkingSetFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.workingSetFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterMfnValue(ManagedClient.Pft.PftParser.MfnValueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mfnValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitMfnValue(ManagedClient.Pft.PftParser.MfnValueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.mfnValue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterToupperFunction(ManagedClient.Pft.PftParser.ToupperFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.toupperFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitToupperFunction(ManagedClient.Pft.PftParser.ToupperFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.toupperFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterHaveFunction(ManagedClient.Pft.PftParser.HaveFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.haveFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitHaveFunction(ManagedClient.Pft.PftParser.HaveFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.haveFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterHostFunction(ManagedClient.Pft.PftParser.HostFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.hostFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitHostFunction(ManagedClient.Pft.PftParser.HostFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.hostFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterGroupStatement(ManagedClient.Pft.PftParser.GroupStatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.groupStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitGroupStatement(ManagedClient.Pft.PftParser.GroupStatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.groupStatement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterExtractExtFunction(ManagedClient.Pft.PftParser.ExtractExtFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractExtFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitExtractExtFunction(ManagedClient.Pft.PftParser.ExtractExtFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.extractExtFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterTruncateFileFunction(ManagedClient.Pft.PftParser.TruncateFileFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.truncateFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitTruncateFileFunction(ManagedClient.Pft.PftParser.TruncateFileFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.truncateFileFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterCommaOperator(ManagedClient.Pft.PftParser.CommaOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commaOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitCommaOperator(ManagedClient.Pft.PftParser.CommaOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.commaOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterIoccOperator(ManagedClient.Pft.PftParser.IoccOperatorContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ioccOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitIoccOperator(ManagedClient.Pft.PftParser.IoccOperatorContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.ioccOperator"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterChrFunction(ManagedClient.Pft.PftParser.ChrFunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.chrFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitChrFunction(ManagedClient.Pft.PftParser.ChrFunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Pft.PftParser.chrFunction"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:ManagedClient.Pft.PftBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftCommaOperator">
            <summary>
            Запятая.
            Пустой оператор. 
            Может быть безболезненно удалён в большинстве случаев.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftConditionalStatement">
            <summary>
            Условный оператор: if then else fi.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftConditionalStatement.Condition">
            <summary>
            Собственно условие.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftConditionalStatement.ThenBranch">
            <summary>
            Ветка ТОГДА.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftConditionalStatement.ElseBranch">
            <summary>
            Ветка ИНАЧЕ.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftContext">
            <summary>
            Контекст форматирования
            </summary>
        </member>
        <member name="M:ManagedClient.Pft.PftContext.ClearAll">
            <summary>
            Полная очистка всех потоков: и основного,
            и предупреждений, и ошибок.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftContext.ClearText">
            <summary>
            Очистка основного выходного потока.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftContext.Push">
            <summary>
            Временное переключение контекста (например,
            при вычислении строковых функций).
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftContext.Evaluate(ManagedClient.Pft.PftAst)">
            <summary>
            Вычисление выражения во временной копии контекста.
            </summary>
            <param name="ast"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftContext.Evaluate(System.Collections.Generic.IEnumerable{ManagedClient.Pft.PftAst})">
            <summary>
            Вычисление выражения во временной копии контекста.
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftContext.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> 
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.Formatter">
            <summary>
            Форматтер
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.Parent">
            <summary>
            Родительский контекст.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.Client">
            <summary>
            Клиент для связи с сервером.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.Record">
            <summary>
            Текущая форматируемая запись.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.Output">
            <summary>
            Выходной буфер, в котором накапливается результат
            форматирования, а также ошибки и предупреждения.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.Text">
            <summary>
            Накопленный текст в основном потоке выходного буфера,
            т. е. собственно результат расформатирования записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.FieldOutputMode">
            <summary>
            Режим вывода полей.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.UpperMode">
            <summary>
            Режим перевода текста в верхний регистр при выводе полей.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.Globals">
            <summary>
            Глобальные переменные.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.Variables">
            <summary>
            Нормальные переменные.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftContext.Procedures">
            <summary>
            Процедуры.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftException">
            <summary>
            Базовый класс для исключений, происходящих при
            разборе и исполнении PFT-скриптов.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftFatalException">
            <summary>
            Выбрасывается функцией <code>fatal ('text')</code>.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftFieldOutputMode">
            <summary>
            Режим вывода полей
            </summary>
        </member>
        <member name="F:ManagedClient.Pft.PftFieldOutputMode.ModeP">
            <summary>
            Режим проверки.
            </summary>
        </member>
        <member name="F:ManagedClient.Pft.PftFieldOutputMode.ModeH">
            <summary>
            Режим заголовка.
            </summary>
        </member>
        <member name="F:ManagedClient.Pft.PftFieldOutputMode.ModeD">
            <summary>
            Режим данных
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftFormatExitManager">
            <summary>
            Менеджер форматных выходов. Позволяет
            зарегистрировать свои собственные форматные выходы.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftFormatter">
            <summary>
            Локальный форматтер: интерпретатор PFT-скриптов.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftFormatter.AbstractionLayer">
            <summary>
            Уровень абстракции от платформы.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftFormatter.Context">
            <summary>
            Контекст форматирования. Во время парсинга не нужен.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftFormatter.Program">
            <summary>
            Корневой элемент синтаксического дерева - собственно программа.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftFormatter.Output">
            <summary>
            Нормальный результат расформатирования.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftFormatter.Error">
            <summary>
            Поток ошибок.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftFormatter.Warning">
            <summary>
            Поток предупреждений.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftFormatter.FormatExits">
            <summary>
            Форматные выходы.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftGlobalManager">
            <summary>
            Менеджер глобальных переменных для контекста форматирования.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftGlobalManager.Dictionary">
            <summary>
            Словарь, в котором хранятся глобальные переменные.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftGlobalManager.Item(System.Int32)">
            <summary>
            Получение значения глобальной переменной по её индексу
            в строковом представлении. Если такой переменной нет,
            возвращается пустая строка.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:ManagedClient.Pft.PftGlobalVariable">
            <summary>
            Глобальная переменная в языке форматирования ИРБИС.
            Может содержать произвольное количество повторений поля.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftGlobalVariable.Number">
            <summary>
            Номер глобальной переменной.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftGlobalVariable.Fields">
            <summary>
            Поля.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftNotConnectedException">
            <summary>
            Возникает, когда необходимо обращение к серверу,
            а подключение отсутствует.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftOutputBuffer">
            <summary>
            Выходные потоки форматтера.
            </summary>
        </member>
        <member name="M:ManagedClient.Pft.PftOutputBuffer.ClearText">
            <summary>
            Очистка основного потока.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftOutputBuffer.ClearWarning">
            <summary>
            Очистака потока предупреждений.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftOutputBuffer.ClearError">
            <summary>
            Очистка потока ошибок.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftOutputBuffer.Push">
            <summary>
            Временный переход к новому буферу.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftOutputBuffer.Pop">
            <summary>
            Возврат к старому буферу с дописыванием
            в конец текста, накопленного в новом
            веременном буфере.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftOutputBuffer.GetCaretPosition">
            <summary>
            Получить (воображаемую) позицию курсора по горизонтали.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftOutputBuffer.RemoveEmptyLine">
            <summary>
            Удалить последнюю строку в буфере, если она пустая.
            </summary>
        </member>
        <member name="M:ManagedClient.Pft.PftOutputBuffer.HaveEmptyLine">
            <summary>
            Пустая ли последняя строка в основном буфере?
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftOutputBuffer.ToString">
            <summary>
            Returns a <see cref="T:System.String"/>
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/>
            that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.Parent">
            <summary>
            Родительский буфер. Может быть <c>null</c>.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.Normal">
            <summary>
            Основной (обычный) поток.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.Warning">
            <summary>
            Поток предупреждений.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.Error">
            <summary>
            Поток ошибок.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.Text">
            <summary>
            Накопленный текст основного потока.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.WarningText">
            <summary>
            Накопленный текст потока предупреждений.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.ErrorText">
            <summary>
            Накопленный текст потока ошибок.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.HaveText">
            <summary>
            Накоплен ли текст в основном потоке?
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.HaveWarning">
            <summary>
            Были ли предупреждения?
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftOutputBuffer.HaveError">
            <summary>
            Были ли ошибки?
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftOutputFormat">
            <summary>
            Поддерживаемые выходные форматы.
            </summary>
        </member>
        <member name="F:ManagedClient.Pft.PftOutputFormat.Plain">
            <summary>
            Простой текст.
            </summary>
        </member>
        <member name="F:ManagedClient.Pft.PftOutputFormat.Html">
            <summary>
            HTML.
            </summary>
        </member>
        <member name="F:ManagedClient.Pft.PftOutputFormat.Rtf">
            <summary>
            RTF.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftProgram">
            <summary>
            Верхний элемент дерева разбора – собственно программа.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PftSyntaxException">
            <summary>
            Исключение, возникающее при разборе PFT-скрипта.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.Ast.PftUnconditionalLiteral">
            <summary>
            Безусловный литерал (ограниченный одинарными кавычками).
            </summary>
        </member>
        <member name="M:ManagedClient.Pft.PftUtility.FormatSource(ManagedClient.ManagedClient64,System.String,ManagedClient.IrbisRecord)">
            <summary>
            Расформатирует текст скрипта локально.
            </summary>
            <param name="client"></param>
            <param name="formatSource"></param>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftUtility.FormatLocalFile(ManagedClient.ManagedClient64,System.String,ManagedClient.IrbisRecord)">
            <summary>
            Расформатирует скрипт из файла локально.
            </summary>
            <param name="client"></param>
            <param name="formatName"></param>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftUtility.FormatRemoteFile(ManagedClient.ManagedClient64,System.String,ManagedClient.IrbisRecord)">
            <summary>
            Расформатирует скрипт, скачанный с сервера.
            </summary>
            <param name="client"></param>
            <param name="formatName"></param>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Pft.PftUtility.PrepareLiteral(System.String)">
            <summary>
            Убирает из литерала переводы строки
            и отрезает символы-ограничители.
            </summary>
            <param name="rawText"></param>
            <returns></returns>
        </member>
        <member name="T:ManagedClient.Pft.PftVariable">
            <summary>
            
            </summary>
        </member>
        <member name="E:ManagedClient.Pft.PftVariable.BeforeReading">
            <summary>
            Вызывается непосредственно перед считыванием значения.
            </summary>
        </member>
        <member name="E:ManagedClient.Pft.PftVariable.AfterModification">
            <summary>
            Вызывается непосредственно после модификации.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftVariable.IsNumeric">
            <summary>
            Признак числовой переменной.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftVariable.NumericValue">
            <summary>
            Числовое значение.
            </summary>
        </member>
        <member name="P:ManagedClient.Pft.PftVariable.StringValue">
            <summary>
            Строковое значение.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PrettyPrinting.PftDefaultStyle">
            <summary>
            Стиль красивой распечатки PFT-скриптов по умолчанию.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PrettyPrinting.PftStyle">
            <summary>
            Абстрактный стиль красивой распечатки PFT-скриптов.
            </summary>
        </member>
        <member name="T:ManagedClient.Pft.PrettyPrinting.PftPrettyPrinter">
            <summary>
            Красивое переформатирование PFT-скриптов.
            </summary>
        </member>
        <member name="T:ManagedClient.Pooling.IrbisConnectionPool">
            <summary>
            Пул соединений с сервером.
            </summary>
        </member>
        <member name="M:ManagedClient.Pooling.IrbisConnectionPool.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.Pooling.IrbisConnectionPool.#ctor(System.String)">
            <summary>
            Конструктор с конкретной строкой соединения.
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="T:ManagedClient.Pooling.PoolUtilities">
            <summary>
            Утилиты для работы пулом соединений.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.CheckBadCharacters">
            <summary>
            Проверка на плохие символы.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.IrbisRule">
            <summary>
            Абстрактный базовый класс для правил.
            </summary>
        </member>
        <member name="M:ManagedClient.Quality.IrbisRule.CheckRecord(ManagedClient.Quality.RuleContext)">
            <summary>
            Проверка записи.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.Quality.IrbisRule.FieldSpec">
            <summary>
            Затрагиваемые поля.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.IrbisRule.Client">
            <summary>
            Клиент.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.IrbisRule.Context">
            <summary>
            Текущий контекст.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.IrbisRule.Record">
            <summary>
            Текущая проверяемая запись.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.IrbisRule.Report">
            <summary>
            Накопленный отчёт.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.IrbisRule.Worksheet">
            <summary>
            Рабочий лист.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.FieldDefect">
            <summary>
            Дефект в поле/подполе.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.FieldDefect.Field">
            <summary>
            Поле.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.FieldDefect.FieldRepeat">
            <summary>
            Повторение поля.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.FieldDefect.Subfield">
            <summary>
            Подполе (если есть).
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.FieldDefect.Value">
            <summary>
            Значение поля/подполя.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.FieldDefect.Message">
            <summary>
            Сообщение об ошибке.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.FieldDefect.Damage">
            <summary>
            Урон от дефекта.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.RecordReport">
            <summary>
            Отчёт о проверке записи.
            </summary>
        </member>
        <member name="M:ManagedClient.Quality.RecordReport.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RecordReport.Mfn">
            <summary>
            MFN записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RecordReport.Index">
            <summary>
            Шифр записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RecordReport.Description">
            <summary>
            Краткое БО.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RecordReport.Defects">
            <summary>
            Дефекты.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RecordReport.Gold">
            <summary>
            Формальная оценка качества.
            </summary>
        </member>
        <member name="M:ManagedClient.Quality.RuleContext.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RuleContext.Client">
            <summary>
            Клиент.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RuleContext.Record">
            <summary>
            Обрабатываемая запись.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RuleContext.BriefFormat">
            <summary>
            Формат для краткого библиографического описания.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.RuleReport">
            <summary>
            Отчёт о работе правила.
            </summary>
        </member>
        <member name="M:ManagedClient.Quality.RuleReport.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RuleReport.Defects">
            <summary>
            Дефекты, обнаруженные правилом.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RuleReport.Damage">
            <summary>
            Общий урон.
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RuleReport.Bonus">
            <summary>
            Начисленный бонус.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.RuleSet">
            <summary>
            Набор правил.
            </summary>
        </member>
        <member name="M:ManagedClient.Quality.RuleSet.CheckRecord(ManagedClient.Quality.RuleContext)">
            <summary>
            Проверка одной записи
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Quality.RuleSet.GetRule(System.String)">
            <summary>
            Получаем правило по его имени.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Quality.RuleSet.LoadJson(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Quality.RuleSet.RegisterAssembly(System.Reflection.Assembly)">
            <summary>
            Регистрируем все правила из указанной сборки.
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="M:ManagedClient.Quality.RuleSet.RegisterBuiltinRules">
            <summary>
            Регистрация встроенных правил.
            </summary>
        </member>
        <member name="M:ManagedClient.Quality.RuleSet.UnregisterRule(System.String)">
            <summary>
            Отменяем регистрацию правила с указанным именем.
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ManagedClient.Quality.RuleSet.Rules">
            <summary>
            Правила, входящие в набор.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.Check10">
            <summary>
            ISBN и цена.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.Check610">
            <summary>
            Ключевые слова.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.Check908">
            <summary>
            Авторский знак
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.CheckEmptySubfields">
            <summary>
            Обнаружение пустых подполей
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.CheckWhitespace">
            <summary>
            Проверка употребления пробелов в полях/подполях
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.Require210">
            <summary>
            Выходные данные
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.Require215">
            <summary>
            Количественные характеристики.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.Require910">
            <summary>
            Сведения об экземплярах.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.Require101">
            <summary>
            Язык основного текста.
            </summary>
        </member>
        <member name="M:ManagedClient.Quality.Rules.Require101.CheckRecord(ManagedClient.Quality.RuleContext)">
            <summary>
            Проверка записи.
            </summary>
            <param name="context">The context.</param>
            <returns>RuleReport.</returns>
        </member>
        <member name="P:ManagedClient.Quality.Rules.Require101.FieldSpec">
            <summary>
            Затрагиваемые поля.
            </summary>
            <value>The field spec.</value>
        </member>
        <member name="T:ManagedClient.Quality.Rules.Require102">
            <summary>
            Страна.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.Rules.Require700">
            <summary>
            Индивидуальные авторы.
            </summary>
        </member>
        <member name="T:ManagedClient.Quality.RuleUtility">
            <summary>
            Утилиты для правил.
            </summary>
        </member>
        <member name="M:ManagedClient.Quality.RuleUtility.IsBadCharacter(System.Char)">
            <summary>
            Плохой символ?
            </summary>
        </member>
        <member name="M:ManagedClient.Quality.RuleUtility.BadCharacterPosition(System.String)">
            <summary>
            Индекс первого найденного плохого символа в строке
            </summary>
        </member>
        <member name="P:ManagedClient.Quality.RuleUtility.BadCharacters">
            <summary>
            Плохие символы, которые не должны встречаться в записях.
            </summary>
        </member>
        <member name="T:ManagedClient.Query.QueryManager">
            <summary>
            Сервисы переписывания и верификации запросов.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisRecord">
            <summary>
            MARC-запись.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisRecord.FM(System.String)">
            <summary>
            Получить текст поля до разделителей подполей
            первого повторения поля с указанной меткой.
            </summary>
            <param name="tag">Метка поля.</param>
            <returns>Текст поля или <c>null</c>.</returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.EncodeRecord(ManagedClient.IrbisRecord,System.Int32,System.Int32,System.Int32)">
            <summary>
            Кодирование записи в клиентское представление.
            </summary>
            <param name="record">Запись для кодирования.</param>
            <param name="mfn">MFN записи (м. б. несуществующий).</param>
            <param name="status">The status.</param>
            <param name="version">Версия записи (чаще всего 1).</param>
            <returns>
            Закодированная запись.
            </returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.Parse(System.String[],System.Int32)">
            <summary>
            Разбор текстового представления записи.
            </summary>
            <param name="text"></param>
            <param name="skipLines"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.AddField(System.String,System.String)">
            <summary>
            Добавление поля (в конец списка полей) 
            с указанными меткой и текстом.
            </summary>
            <param name="tag">Метка поля.</param>
            <param name="text">Текст поля до разделителей.</param>
            <returns>this</returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.AddField(System.String,System.Char,System.String,System.Object[])">
            <summary>
            Добавление поля (в конец списка полей)
            с указанными меткой и подполями.
            </summary>
            <param name="tag">Метка поля.</param>
            <param name="code">Код первого подполя.</param>
            <param name="text">Текст первого подполя.</param>
            <param name="others">Коды и тексты последующих
            подполей.</param>
            <returns>this</returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.SetField(System.String,System.String)">
            <summary>
            Sets the field.
            </summary>
            <param name="tag">The tag.</param>
            <param name="text">The newText.</param>
            <returns></returns>
            <remarks>Устанавливает значение только для
            первого повторения поля (если в записи их несколько)!
            </remarks>
        </member>
        <member name="M:ManagedClient.IrbisRecord.RemoveField(System.String)">
            <summary>
            Removes the field.
            </summary>
            <param name="tag">The tag.</param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.ToPlainText">
            <summary>
            Формирует плоское текстовое представление записи.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.ToIsisText">
            <summary>
            Формирует текстовое представление записи,
            характерное для ISIS.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisRecord.ParseIsisRecord(System.String)">
            <summary>
            Разбор ISIS-представления записи.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisRecord.ToIrbisJson">
            <summary>
            Строит представление записи в виде JSON,
            характерном для ИРБИС.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisRecord.ParseIrbisText(System.String)">
            <summary>
            Метод предназачен для парсинга текста, передаваемого АРМ ИРБИС плагинам.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.EncodeIrbisText(ManagedClient.IrbisRecord)">
            <summary>
            Метод предназначен для возврата значения из ИРБИС-плагинов.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.IrbisRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:ManagedClient.IrbisRecord.Database">
            <summary>
            Gets or sets the database.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="P:ManagedClient.IrbisRecord.Mfn">
            <summary>
            MFN записи
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisRecord.Status">
            <summary>
            Статус записи: удалена, блокирована и т.д.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisRecord.Version">
            <summary>
            Версия записи. Нумеруется с нуля.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisRecord.PreviousOffset">
            <summary>
            Смещение предыдущей версии записи.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisRecord.Fields">
            <summary>
            Поля записи.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisRecord.Deleted">
            <summary>
            Признак удалённой записи.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisRecord.Description">
            <summary>
            Библиографическое описание.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisRecord.SortKey">
            <summary>
            Используется при сортировке записей.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisRecord.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisReturnCode">
            <summary>
            Коды возвратов из Irbis64.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.NoError">
            <summary>
            Успешное завершение, нет ошибки.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.Zero">
            <summary>
            Успешное завершение, нет ошибки.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.UserError">
            <summary>
            Прервано пользователем или общая ошибка.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.Busy">
            <summary>
            Не завершена обработка предыдущего запроса.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.Unknown">
            <summary>
            Неизвестная ошибка.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.BadBufferSize">
            <summary>
            Выходной буфер мал.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.WrongMfn">
            <summary>
            Заданный MFN вне пределов БД.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.TermNotExist">
            <summary>
            Нет запрошенного значения в поисковом индексе.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.LastTermInList">
            <summary>
            Была считана последняя запись в поисковом индексе.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.FirstTermInList">
            <summary>
            Возвращена первая подходящая запись в поисковом
            индексе вместо запрошенного значения.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.DatabaseLocked">
            <summary>
            Монопольная блокировка БД.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.RecordLocked">
            <summary>
            Запись заблокирована на ввод.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.RecordDeleted">
            <summary>
            Запись логически удалена.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.PhysicallyDeleted">
            <summary>
            Запись физически удалена.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.VersionError">
            <summary>
            При записи обнаружено несоответствие версий.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.ClientFormatError">
            <summary>
            Ошибка в клиентском файле формата.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.ServerExecutionError">
            <summary>
            Ошибка выполнения на сервере.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.AnswerLengthError">
            <summary>
            Несоответствие полученной и реальной длины.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.WrongProtocol">
            <summary>
            Неверный протокол.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.ClientNotInList">
            <summary>
            Незарегистрированный клиент.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.ClientNotInUse">
            <summary>
            Клиент не выполнил регистрацию.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.WrongClientIdentifier">
            <summary>
            Неправльный идентификатор клиента.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.ClientListOverload">
            <summary>
            Зарегистрировано максимально допустимое 
            количество клиентов.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.ClientAlreadyExist">
            <summary>
            Клиент уже зарегистрирован.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.ClientNotAllowed">
            <summary>
            Нет доступа к командам АРМ.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.WrongPassword">
            <summary>
            Неверный пароль.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.FileNotExist">
            <summary>
            Файл не существует.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.ServerOverload">
            <summary>
            Сервер перегружен: достигнуто максимальное число
            потоков обработки.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.ProcessError">
            <summary>
            Не удалось запустить или прервать поток или процесс.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisReturnCode.GlobalError">
            <summary>
            Обрушение при выполнении глобальной корректировки.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisServerSettings">
            <summary>
            Серверные настройки (живущие в irbis_server.ini).
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ACTabPath">
            <summary>
            Путь на таблицу isisacw.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.AutoInFile">
            <summary>
            Файл автоввода.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.BriefPft">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.CheckRedirect">
            <summary>
            Проверять протокол на перенаправление запроса с другого сервера.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ClientList">
            <summary>
            Имя файла со списком клиентов с паролями для доступа к серверу.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ClientTimeLive">
            <summary>
            Время жизни клиента без подтверждения (в мин.) 
            По умочанию 0 – режим отключен.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.DataPath">
            <summary>
            Путь к системным меню и параметрическим файлам БД.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.DbNameCat">
            <summary>
            Файл со списком баз данных для администратора.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.DbNameCatR">
            <summary>
            Файл со списком баз данных для читателя.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.DbnFlc">
            <summary>
            Файл проверки на дублетность.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.DeflexKW">
            <summary>
            Применять отсечку при актуализации?
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.DuplicateSockets">
            <summary>
            Включение многопроцессорного режима 
            (когда процесс обработки выполняет сетевое чтение-запись).
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.DupMappingWorkFiles">
            <summary>
            Обмен между процессами обработки и ядром сервера - через 
            системную память (1) или через временные файлы в рабочей 
            директории workdir (0).
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.DupMappingFileSize">
            <summary>
            Размер системной памяти, выделяемой процессу, Kb.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.DupProcessCountPull">
            <summary>
            Число процессов обработки, стартуемых сервером при запуске.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.EmptyDbn">
            <summary>
            Эталонная (пустая) база данных.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.EncryptPasswords">
            <summary>
            Шифровать профили клиентов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.FormatCacheable">
            <summary>
            Кеширование форматов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.IPAddress">
            <summary>
            IP адрес сервера используется только для показа в таблице описателей.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.IPPort">
            <summary>
            IP порт сервера.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.IPPortLocal">
            <summary>
            Cигнал окончания процесса обработки посылается через 
            TCP на порт 7778, а не как сообщение windows. 
            В этом случае RegisterWindowMessage игнорируется.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.KeepProcessAlive">
            <summary>
            Разрешает серверу использовать процесс обработки многократно.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ListenResponse">
            <summary>
            Cигнал окончания процесса обработки посылается через TCP 
            на порт 7778, а не как сообщение windows. 
            В этом случае RegisterWindowMessage игнорируется.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.MappingFileSize">
            <summary>
            Размер системной памяти, выделяемой клиенту, Мб.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.MappingWorkFiles">
            <summary>
            Обмен между процессами обработки и ядром сервера - через 
            системную память (1)  или через временные файлы (0) 
            в рабочей директории workdir. Если системной памяти не хватает, 
            происходит обмен через файл. При включении этого режима, 
            необходимо также включить проверку клиентов на подтверждение 
            - CLIENT_TIME_LIVE, чтобы за ними не оставалась выделенная 
            память.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.MaxLogFileSize">
            <summary>
            Размер лог-файла, байты.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.MaxProcessCount">
            <summary>
            Максимально возможное число процессов обработки, 
            если превышено - возвращается ошибка SERVER_OVERLOAD. 
            По умолчанию = 20.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.MaxProcessRequests">
            <summary>
            Максимально возможное число запросов к долгоживущему 
            процессу обработки, после чего процесс автоматически 
            прерывается. По умолчанию = 100.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.MaxResponseLength">
            <summary>
            Максимальный размер буфера ответа в байтах  - если превышен 
            ответ разбивается на 2-ве части.
            Если 0 разбивки нет
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.MaxServers">
            <summary>
            Максимальное число процессов обработки, которые сервер использует 
            многократно (только если KEEP_PROCESS_ALIVE = 1).
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.MaxThreadCount">
            <summary>
            Максимально возможное количество потоков.
            Если превышено – сервер переходит в режим последовательного
            чтения-записи.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.MinThreadCount">
            <summary>
            Минимальное количество потоков в очереди.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.PftOpt">
            <summary>
            Файл оптимизации форматов.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ProcessPriority">
            <summary>
            Повысить приоритет процесса до HIGH_PRIORITY_CLASS.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ProcessThreadsMonitor">
            <summary>
            Время мониторинга в сек. процессов и потоков на соответствие друг другу. 
            Если 0 – режим отключен. 10 сек по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ProcessTimeLive">
            <summary>
            Максимальное время обработки запроса (в мин.) 
            По умочанию 0 – режим отключен.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.RecognizeClientAddress">
            <summary>
            Разрешать (определять) адрес машины клиента при регистрации.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.RegisterWindowMessage">
            <summary>
            Сигнал обмена сообщениями между сервером и процессами обработки 
            регистрируется в системе WINDOWS и получает уникальный идентификатор.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.RelayRecTime">
            <summary>
            Ожидание эксклюзивного доступа на запись.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.RequestFilePrefix">
            <summary>
            Префикс файла обмена - запрос.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ResponseFilePrefix">
            <summary>
            Префикс файла обмена - ответ.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ServerExecutable">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.StatisticsMenu">
            <summary>
            Меню статистики.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.SuppressExceptions">
            <summary>
            Не выводить windows-сообщения о непредвиденных 
            ошибках в процессах обработки server_64.exe. 
            Этот параметр рекомендуется использовать, 
            если во время эксплуатации сервера выводятся сообщения 
            об ошибках в server_64.exe.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.SystemPath">
            <summary>
            Путь к системным (INI) файлам.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ThreadsAvailable">
            <summary>
            Включение режима параллельной обработки чтения-записи
            запросов клиентов в многопотоковом режиме.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.ThreadsLocking">
            <summary>
            Блокировка всех параллельных потоков, кроме текущего, 
            на время чтения-записи.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.TimeSleepOnClose">
            <summary>
            Этот параметр эффективен для терминальной работы клиентов.
            Время ожидания завершения передачи по сети в ms.
            Если 0 - нет ожидания. По умолчанию=1.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.UCTabPath">
            <summary>
            Путь на таблицу isisucw.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.UseMultiProcessor">
            <summary>
            Распараллеливать процессы на несколько процессоров.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.Utf8Representation">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisServerSettings.WorkingDirectory">
            <summary>
            Директория для сохранения временных файлов, 
            используемых для межпроцессорного взаимодействия сервера 
            и процессов обработки.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisServerStat">
            <summary>
            Статистика работы Ирбис-сервера
            </summary>
        </member>
        <member name="T:ManagedClient.Query.IIrbisQueryListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:ManagedClient.Query.IrbisQueryParser"/>.
            </summary>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterStarOperator2(ManagedClient.Query.IrbisQueryParser.StarOperator2Context)">
            <summary>
            Enter a parse tree produced by the <c>starOperator2</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelTwo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitStarOperator2(ManagedClient.Query.IrbisQueryParser.StarOperator2Context)">
            <summary>
            Exit a parse tree produced by the <c>starOperator2</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelTwo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterStarOperator3(ManagedClient.Query.IrbisQueryParser.StarOperator3Context)">
            <summary>
            Enter a parse tree produced by the <c>starOperator3</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelThree"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitStarOperator3(ManagedClient.Query.IrbisQueryParser.StarOperator3Context)">
            <summary>
            Exit a parse tree produced by the <c>starOperator3</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelThree"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterStarOperator1(ManagedClient.Query.IrbisQueryParser.StarOperator1Context)">
            <summary>
            Enter a parse tree produced by the <c>starOperator1</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitStarOperator1(ManagedClient.Query.IrbisQueryParser.StarOperator1Context)">
            <summary>
            Exit a parse tree produced by the <c>starOperator1</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterPlusOperator3(ManagedClient.Query.IrbisQueryParser.PlusOperator3Context)">
            <summary>
            Enter a parse tree produced by the <c>plusOperator3</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelThree"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitPlusOperator3(ManagedClient.Query.IrbisQueryParser.PlusOperator3Context)">
            <summary>
            Exit a parse tree produced by the <c>plusOperator3</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelThree"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterPlusOperator2(ManagedClient.Query.IrbisQueryParser.PlusOperator2Context)">
            <summary>
            Enter a parse tree produced by the <c>plusOperator2</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelTwo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitPlusOperator2(ManagedClient.Query.IrbisQueryParser.PlusOperator2Context)">
            <summary>
            Exit a parse tree produced by the <c>plusOperator2</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelTwo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterFOperator(ManagedClient.Query.IrbisQueryParser.FOperatorContext)">
            <summary>
            Enter a parse tree produced by the <c>fOperator</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitFOperator(ManagedClient.Query.IrbisQueryParser.FOperatorContext)">
            <summary>
            Exit a parse tree produced by the <c>fOperator</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterParenOuter(ManagedClient.Query.IrbisQueryParser.ParenOuterContext)">
            <summary>
            Enter a parse tree produced by the <c>parenOuter</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelTwo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitParenOuter(ManagedClient.Query.IrbisQueryParser.ParenOuterContext)">
            <summary>
            Exit a parse tree produced by the <c>parenOuter</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelTwo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterGOperator(ManagedClient.Query.IrbisQueryParser.GOperatorContext)">
            <summary>
            Enter a parse tree produced by the <c>gOperator</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitGOperator(ManagedClient.Query.IrbisQueryParser.GOperatorContext)">
            <summary>
            Exit a parse tree produced by the <c>gOperator</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterPlusOperator1(ManagedClient.Query.IrbisQueryParser.PlusOperator1Context)">
            <summary>
            Enter a parse tree produced by the <c>plusOperator1</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitPlusOperator1(ManagedClient.Query.IrbisQueryParser.PlusOperator1Context)">
            <summary>
            Exit a parse tree produced by the <c>plusOperator1</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterReference(ManagedClient.Query.IrbisQueryParser.ReferenceContext)">
            <summary>
            Enter a parse tree produced by the <c>reference</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelThree"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitReference(ManagedClient.Query.IrbisQueryParser.ReferenceContext)">
            <summary>
            Exit a parse tree produced by the <c>reference</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelThree"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterProgram(ManagedClient.Query.IrbisQueryParser.ProgramContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Query.IrbisQueryParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitProgram(ManagedClient.Query.IrbisQueryParser.ProgramContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Query.IrbisQueryParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterEntry(ManagedClient.Query.IrbisQueryParser.EntryContext)">
            <summary>
            Enter a parse tree produced by the <c>entry</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitEntry(ManagedClient.Query.IrbisQueryParser.EntryContext)">
            <summary>
            Exit a parse tree produced by the <c>entry</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterLevelTwoOuter(ManagedClient.Query.IrbisQueryParser.LevelTwoOuterContext)">
            <summary>
            Enter a parse tree produced by the <c>levelTwoOuter</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelThree"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitLevelTwoOuter(ManagedClient.Query.IrbisQueryParser.LevelTwoOuterContext)">
            <summary>
            Exit a parse tree produced by the <c>levelTwoOuter</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelThree"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterDotOperator(ManagedClient.Query.IrbisQueryParser.DotOperatorContext)">
            <summary>
            Enter a parse tree produced by the <c>dotOperator</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitDotOperator(ManagedClient.Query.IrbisQueryParser.DotOperatorContext)">
            <summary>
            Exit a parse tree produced by the <c>dotOperator</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelOne"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.EnterLevelOneOuter(ManagedClient.Query.IrbisQueryParser.LevelOneOuterContext)">
            <summary>
            Enter a parse tree produced by the <c>levelOneOuter</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelTwo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Query.IIrbisQueryListener.ExitLevelOneOuter(ManagedClient.Query.IrbisQueryParser.LevelOneOuterContext)">
            <summary>
            Exit a parse tree produced by the <c>levelOneOuter</c>
            labeled alternative in <see cref="M:ManagedClient.Query.IrbisQueryParser.levelTwo"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:ManagedClient.Ranges.NumberRange">
            <summary>
            Диапазон чисел, содержащих нечисловые фрагменты.
            </summary>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRange.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRange.#ctor(ManagedClient.NumberText)">
            <summary>
            Конструктор для диапазона, состоящего
            из одного числа.
            </summary>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRange.#ctor(ManagedClient.NumberText,ManagedClient.NumberText)">
            <summary>
            Конструктор для произвольного диапазона.
            </summary>
            <param name="start"></param>
            <param name="stop"></param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRange.Contains(ManagedClient.NumberText)">
            <summary>
            Проверка, содержит ли диапазон указанное значение.
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRange.Parse(System.String)">
            <summary>
            Разбор текстового представления диапазона.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRange.For(System.Action{ManagedClient.NumberText})">
            <summary>
            Выполнение указанного действия на всём диапазоне.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRange.Intersect(ManagedClient.Ranges.NumberRange)">
            <summary>
            Пересечение двух диапазонов.
            </summary>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRange.IsEmpty">
            <summary>
            Проверка, не пустой ли диапазон.
            </summary>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRange.Union(ManagedClient.Ranges.NumberRange)">
            <summary>
            Объединение двух диапазонов.
            </summary>
        </member>
        <member name="P:ManagedClient.Ranges.NumberRange.Start">
            <summary>
            Стартовое значение.
            </summary>
        </member>
        <member name="P:ManagedClient.Ranges.NumberRange.Stop">
            <summary>
            Стоповое значение.
            </summary>
        </member>
        <member name="T:ManagedClient.Ranges.NumberRangeCollection">
            <summary>
            Набор диапазонов чисел.
            </summary>
        </member>
        <member name="F:ManagedClient.Ranges.NumberRangeCollection.DefaultDelimiter">
            <summary>
            Разделитель по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangeCollection.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangeCollection.Add(ManagedClient.Ranges.NumberRange)">
            <summary>
            Добавление диапазона в набор.
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangeCollection.Add(System.String,System.String)">
            <summary>
            Добавление диапазона в набор.
            </summary>
            <param name="start"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangeCollection.Add(System.String)">
            <summary>
            Добавление диапазона в набор.
            </summary>
            <param name="startAndStop"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangeCollection.Contains(ManagedClient.NumberText)">
            <summary>
            Проверка, содержит ли набор указанное число.
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangeCollection.Parse(System.String)">
            <summary>
            Разбор текстового представления.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangeCollection.Cumulate(System.Collections.Generic.List{ManagedClient.NumberText})">
            <summary>
            Кумуляция (сжатие).
            </summary>
            <param name="numbers"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangeCollection.Cumulate(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Кумуляция (сжатие).
            </summary>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangeCollection.For(System.Action{ManagedClient.NumberText})">
            <summary>
            Выполнение указанного действия
            на всех диапазонах набора.
            </summary>
            <param name="action"></param>
        </member>
        <member name="P:ManagedClient.Ranges.NumberRangeCollection.Delimiter">
            <summary>
            Разделитель диапазонов.
            </summary>
        </member>
        <member name="T:ManagedClient.Ranges.NumberRangesBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:ManagedClient.Ranges.INumberRangesListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="T:ManagedClient.Ranges.INumberRangesListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:ManagedClient.Ranges.NumberRangesParser"/>.
            </summary>
        </member>
        <member name="M:ManagedClient.Ranges.INumberRangesListener.EnterRange(ManagedClient.Ranges.NumberRangesParser.RangeContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.range"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.INumberRangesListener.ExitRange(ManagedClient.Ranges.NumberRangesParser.RangeContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.range"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.INumberRangesListener.EnterProgram(ManagedClient.Ranges.NumberRangesParser.ProgramContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.INumberRangesListener.ExitProgram(ManagedClient.Ranges.NumberRangesParser.ProgramContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.program"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.INumberRangesListener.EnterOne(ManagedClient.Ranges.NumberRangesParser.OneContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.one"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.INumberRangesListener.ExitOne(ManagedClient.Ranges.NumberRangesParser.OneContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.one"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.INumberRangesListener.EnterItem(ManagedClient.Ranges.NumberRangesParser.ItemContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.item"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.INumberRangesListener.ExitItem(ManagedClient.Ranges.NumberRangesParser.ItemContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.item"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.EnterRange(ManagedClient.Ranges.NumberRangesParser.RangeContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.range"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.ExitRange(ManagedClient.Ranges.NumberRangesParser.RangeContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.range"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.EnterProgram(ManagedClient.Ranges.NumberRangesParser.ProgramContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.program"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.ExitProgram(ManagedClient.Ranges.NumberRangesParser.ProgramContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.program"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.EnterOne(ManagedClient.Ranges.NumberRangesParser.OneContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.one"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.ExitOne(ManagedClient.Ranges.NumberRangesParser.OneContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.one"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.EnterItem(ManagedClient.Ranges.NumberRangesParser.ItemContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.item"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.ExitItem(ManagedClient.Ranges.NumberRangesParser.ItemContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:ManagedClient.Ranges.NumberRangesParser.item"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:ManagedClient.Ranges.NumberRangesBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:ManagedClient.Readers.ChairInfo">
            <summary>
            Информация о кафедре обслуживания.
            </summary>
        </member>
        <member name="F:ManagedClient.Readers.ChairInfo.ChairMenu">
            <summary>
            Имя меню с кафедрами по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ChairInfo.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ChairInfo.#ctor(System.String,System.String)">
            <summary>
            Конструктор.
            </summary>
            <param name="code">Код.</param>
            <param name="title">Название.</param>
        </member>
        <member name="M:ManagedClient.Readers.ChairInfo.Parse(System.String)">
            <summary>
            Разбор текста меню-файла.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Readers.ChairInfo.Read(ManagedClient.ManagedClient64,System.String)">
            <summary>
            Загрузка с сервера.
            </summary>
            <param name="client"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Readers.ChairInfo.Read(ManagedClient.ManagedClient64)">
            <summary>
            Загрузка с сервера.
            </summary>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.Readers.ChairInfo.Code">
            <summary>
            Код.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ChairInfo.Title">
            <summary>
            Название.
            </summary>
        </member>
        <member name="T:ManagedClient.Readers.IriProfile">
            <summary>
            Профиль ИРИ
            </summary>
        </member>
        <member name="F:ManagedClient.Readers.IriProfile.IriTag">
            <summary>
            Тег поля ИРИ.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.IriProfile.ParseField(ManagedClient.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.IriProfile.ParseRecord(ManagedClient.IrbisRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.IriProfile.Active">
            <summary>
            Подполе A
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.IriProfile.ID">
            <summary>
            Подполе B
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.IriProfile.Title">
            <summary>
            Подполе C
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.IriProfile.Query">
            <summary>
            Подполе D
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.IriProfile.Periodicity">
            <summary>
            Подполе E
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.IriProfile.LastServed">
            <summary>
            Подполе F
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.IriProfile.Database">
            <summary>
            Подполе I
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.IriProfile.Reader">
            <summary>
            Ссылка на читателя.
            </summary>
        </member>
        <member name="T:ManagedClient.Readers.ReaderRegistration">
            <summary>
            Информация о регистрации/перерегистрации читателя.
            </summary>
        </member>
        <member name="F:ManagedClient.Readers.ReaderRegistration.RegistrationTag">
            <summary>
            Поле регистрация.
            </summary>
        </member>
        <member name="F:ManagedClient.Readers.ReaderRegistration.ReregistrationTag">
            <summary>
            Поле "перерегистрация".
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderRegistration.Parse(ManagedClient.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderRegistration.Parse(ManagedClient.IrbisRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderRegistration.ToField">
            <summary>
            Преобразование в поле.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.Readers.ReaderRegistration.DateString">
            <summary>
            Дата. Подполе *.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderRegistration.Date">
            <summary>
            Дата.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderRegistration.Chair">
            <summary>
            Место (кафедра обслуживания).
            Подполе c.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderRegistration.OrderNumber">
            <summary>
            Номер приказа. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderRegistration.Reason">
            <summary>
            Причина. Подполе b.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderRegistration.Reader">
            <summary>
            Ссылка на зарегистрированного читателя.
            </summary>
        </member>
        <member name="T:ManagedClient.Readers.ReaderUtility">
            <summary>
            Методы для работы с БД читателей.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.LoadReaders(ManagedClient.ManagedClient64,System.Collections.Generic.List{ManagedClient.Readers.ReaderInfo},System.String)">
            <summary>
            Загрузка читателей из базы.
            </summary>
            <param name="client"></param>
            <param name="readers"></param>
            <param name="dbName"></param>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.MergeReaders(System.Collections.Generic.List{ManagedClient.Readers.ReaderInfo})">
            <summary>
            Слияние записей о читателях из разных баз.
            </summary>
            <remarks>
            Слияние происходит на основе читательского билета.
            </remarks>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.LoadReaders(ManagedClient.ManagedClient64,System.String[])">
            <summary>
            Загрузка сведений о читателях из нескольких баз.
            </summary>
            <remarks>
            Выполняется слияние сведений на основе
            номера читательского билета.
            </remarks>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.CountEvents(System.Collections.Generic.List{ManagedClient.Readers.ReaderInfo},System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Подсчёт количества событий.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.CountEvents(System.Collections.Generic.List{ManagedClient.Readers.ReaderInfo},System.DateTime,System.DateTime,System.String,System.Boolean)">
            <summary>
            Подсчёт количества событий
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.GetEvents(System.Collections.Generic.List{ManagedClient.Readers.ReaderInfo})">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.GetEvents(ManagedClient.Readers.VisitInfo[],System.String)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.GetEvents(ManagedClient.Readers.VisitInfo[],System.Boolean)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.GetEvents(ManagedClient.Readers.VisitInfo[],System.DateTime)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderUtility.GetEvents(ManagedClient.Readers.VisitInfo[],System.DateTime,System.DateTime)">
            <summary>
            Отбор событий.
            </summary>
        </member>
        <member name="T:ManagedClient.RecordFieldCollection">
            <summary>
            Коллекция полей записи.
            Отличается тем, что принципиально
            не принимает значения <c>null</c>.
            </summary>
        </member>
        <member name="T:ManagedClient.Schema.FieldSchema">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.Schema.RecordSchema">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.Schema.SchemaValidator`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:ManagedClient.Schema.SubFieldSchema">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.Scripting.ScriptUtility">
            <summary>
            Полезные методы расширения для скриптов.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.ScriptUtility.GetProperty(MoonSharp.Interpreter.DynValue,System.Object[])">
            <summary>
            Получение значения из таблицы.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.ScriptUtility.GetProperty(MoonSharp.Interpreter.Table,System.Object[])">
            <summary>
            Получение значения из таблицы.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.ScriptUtility.RegisterFunction``1(MoonSharp.Interpreter.Script,System.String,System.Func{``0})">
            <summary>
            Регистрация функции.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.ScriptUtility.RegisterFunction``2(MoonSharp.Interpreter.Script,System.String,System.Func{``0,``1})">
            <summary>
            Регистрация функции.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.ScriptUtility.RegisterFunction``3(MoonSharp.Interpreter.Script,System.String,System.Func{``0,``1,``2})">
            <summary>
            Регистрация функции.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.ScriptUtility.RegisterFunction``4(MoonSharp.Interpreter.Script,System.String,System.Func{``0,``1,``2,``3})">
            <summary>
            Регистрация функции.
            </summary>
        </member>
        <member name="T:ManagedClient.Scripting.IrbisScript">
            <summary>
            Интерпретатор Lua-скриптов с учётом ИРБИС-специфики.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.IrbisScript.#ctor">
            <summary>
            Конструктор по умолчанию
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.IrbisScript.#ctor(ManagedClient.ManagedClient64)">
            <summary>
            Конструктор с заранее созданным клиентом.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:ManagedClient.Scripting.IrbisScript._Initialize">
            <summary>
            Внутренняя инициализация.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.IrbisScript.CallFunction(System.String,System.Object[])">
            <summary>
            Вызов Lua-функции и получение результата.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.IrbisScript.DoFile(System.String)">
            <summary>
            Исполнение Lua-скрипта из файла
            и получение результата.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.IrbisScript.DoString(System.String)">
            <summary>
            Исполнение Lua-кода и получение результата.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.IrbisScript.RegisterIrbisTypes">
            <summary>
            Регистрация типов, помеченных в данной сборке атрибутом
            <see cref="T:MoonSharp.Interpreter.MoonSharpUserDataAttribute"/>
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.IrbisScript.SetGlobal(System.String,System.Object)">
            <summary>
            Установка глобального значения.
            </summary>
        </member>
        <member name="M:ManagedClient.Scripting.IrbisScript.SetRecord(ManagedClient.IrbisRecord)">
            <summary>
            Установка новой текущей записи.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.Scripting.IrbisScript.Client">
            <summary>
            Клиент для доступа к серверу
            </summary>
        </member>
        <member name="P:ManagedClient.Scripting.IrbisScript.Engine">
            <summary>
            Скриптовый движок.
            </summary>
        </member>
        <member name="P:ManagedClient.Scripting.IrbisScript.Record">
            <summary>
            Текущая запись
            </summary>
        </member>
        <member name="T:ManagedClient.Sockets.IrbisAsyncSocket">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.Sockets.IrbisSocket">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedClient.Sockets.IrbisSocket.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:ManagedClient.Sockets.IrbisAsyncSocket.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="T:ManagedClient.IrbisStandardDatabases">
            <summary>
            Стандартные базы данных, входящие в дистрибутив ИРБИС64.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisStandardDatabases.ElectronicCatalog">
            <summary>
            Электронный каталог.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisStandardDatabases.Acquisition">
            <summary>
            Комплектование.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisStandardDatabases.Readers">
            <summary>
            Читатели.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisStandardDatabases.Requests">
            <summary>
            Заказы на литературу.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisStopWords">
            <summary>
            Wrapper for STW file
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisStopWords.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedClient.IrbisStopWords"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="T:ManagedClient.IrbisPage">
            <summary>
            Worksheet for RecordField editing
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedClient.IrbisPage"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:ManagedClient.IrbisPage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> 
            that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> 
            that represents this instance.</returns>
        </member>
        <member name="T:ManagedClient.IrbisTags">
            <summary>
            Стандартные теги ИРБИС.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisTags.MainTitle">
            <summary>
            Основное заглавие.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisTags.DocumentCode">
            <summary>
            Шифр документа в базе.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisTags.MagazineCode">
            <summary>
            Шифр журнала.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisTags.MagazineYear">
            <summary>
            Год выпуска журнала.
            </summary>
        </member>
        <member name="T:ManagedClient.SubBasing.RecordExtractor">
            <summary>
            Извлечение списка записей из ИРБИС.
            </summary>
        </member>
        <member name="M:ManagedClient.SubBasing.RecordExtractor.#ctor(ManagedClient.ManagedClient64)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.SubBasing.RecordExtractor.#ctor(ManagedClient.ManagedClient64,ManagedClient.Output.AbstractOutput)">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:ManagedClient.SubBasing.RecordExtractor.SearchRecords(ManagedClient.SubBasing.SelectionQuery)">
            <summary>
            Поиск записей согласно спецификации.
            </summary>
        </member>
        <member name="M:ManagedClient.SubBasing.RecordExtractor.SearchExemplars(ManagedClient.SubBasing.SelectionQuery)">
            <summary>
            Отбор экземпляров.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.RecordExtractor.Client">
            <summary>
            Клиент для подключения к ИРБИС64.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.RecordExtractor.Output">
            <summary>
            Отладочная печать.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.RecordExtractor.ReadRecords">
            <summary>
            Надо ли считывать записи.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.RecordExtractor.AllowDeleted">
            <summary>
            Можно ли считывать удаленные записи.
            </summary>
        </member>
        <member name="T:ManagedClient.SubBasing.SelectionQuery">
            <summary>
            Запрос на отбор записей.
            </summary>
        </member>
        <member name="M:ManagedClient.SubBasing.SelectionQuery.IsValid">
            <summary>
            Корректно заполнено?
            </summary>
        </member>
        <member name="M:ManagedClient.SubBasing.SelectionQuery.ToText">
            <summary>
            Получение текстового описания.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.SubBasing.SelectionQuery.Description">
            <summary>
            Описание в произвольной форме.
            Например, "Отбор по MFN".
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.SelectionQuery.Database">
            <summary>
            Имя базы данных.
            Если не задано,
            используется текущая база данных.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.SelectionQuery.SelectionType">
            <summary>
            Тип отбора записей.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.SelectionQuery.Prefix">
            <summary>
            Префикс.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.SelectionQuery.Statement">
            <summary>
            Формулировка запроса.
            Например, "1-100,150-160"
            </summary>
        </member>
        <member name="T:ManagedClient.SubBasing.SelectionType">
            <summary>
            Тип отбора записей
            </summary>
        </member>
        <member name="F:ManagedClient.SubBasing.SelectionType.Mfn">
            <summary>
            По MFN
            </summary>
        </member>
        <member name="F:ManagedClient.SubBasing.SelectionType.Sequential">
            <summary>
            По возрастающим числам
            (например, инвентарным номерам).
            </summary>
        </member>
        <member name="F:ManagedClient.SubBasing.SelectionType.Dictionary">
            <summary>
            Элементы словаря.
            </summary>
        </member>
        <member name="F:ManagedClient.SubBasing.SelectionType.Search">
            <summary>
            Согласно поисковому выражению.
            </summary>
        </member>
        <member name="F:ManagedClient.SubBasing.SelectionType.Deep">
            <summary>
            Глубокий последовательный поиск.
            </summary>
        </member>
        <member name="F:ManagedClient.SubBasing.SelectionType.Script">
            <summary>
            Отбор скриптом
            </summary>
        </member>
        <member name="T:ManagedClient.SubBasing.SubBasingSettings">
            <summary>
            Варианты для отбора записей.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.SubBasingSettings.Databases">
            <summary>
            Перечень баз данных.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.SubBasingSettings.DatabaseIndex">
            <summary>
            База данных по умолчанию.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.SubBasingSettings.Criteria">
            <summary>
            Критерии отбора.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.SubBasingSettings.CriteriaIndex">
            <summary>
            Предлагаемый критерий отбора.
            </summary>
        </member>
        <member name="P:ManagedClient.SubBasing.SubBasingSettings.Statement">
            <summary>
            Предлагаемое выражение для отбора.
            </summary>
        </member>
        <member name="T:ManagedClient.SubFieldCollection">
            <summary>
            Коллекция подполей.
            Отличается тем, что принципиально не принимает
            значения <c>null</c>.
            </summary>
        </member>
        <member name="M:ManagedClient.SubFieldCollection.AddRange(System.Collections.Generic.IEnumerable{ManagedClient.SubField})">
            <summary>
            Добавление в коллекцию нескольких подполей сразу
            </summary>
        </member>
        <member name="M:ManagedClient.SubFieldCollection.Find(System.Predicate{ManagedClient.SubField})">
            <summary>
            Поиск с помощью предиката.
            </summary>
        </member>
        <member name="M:ManagedClient.SubFieldCollection.FindAll(System.Predicate{ManagedClient.SubField})">
            <summary>
            Отбор с помощью предиката.
            </summary>
        </member>
        <member name="T:ManagedClient.TextWithEncoding">
            <summary>
            Текст с заданной кодировкой.
            </summary>
        </member>
        <member name="M:ManagedClient.TextWithEncoding.#ctor">
            <summary>
            Конструктор по умолчанию.
            Не заданы ни текст, ни кодировка.
            </summary>
        </member>
        <member name="M:ManagedClient.TextWithEncoding.#ctor(System.String)">
            <summary>
            Текст с кодировкой UTF8.
            </summary>
        </member>
        <member name="M:ManagedClient.TextWithEncoding.#ctor(System.String,System.Boolean)">
            <summary>
            Текст с кодировкой ANSI либо UTF8.
            </summary>
            <param name="text"></param>
            <param name="ansi"></param>
        </member>
        <member name="M:ManagedClient.TextWithEncoding.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Текст с явно заданной кодировкой.
            </summary>
            <param name="text"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:ManagedClient.TextWithEncoding.ToBytes">
            <summary>
            Конверсия в байтовое представление.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.TextWithEncoding.op_Implicit(System.String)~ManagedClient.TextWithEncoding">
            <summary>
            Неявное преобразование текста
            в текст с кодировкой.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.TextWithEncoding.op_Equality(ManagedClient.TextWithEncoding,ManagedClient.TextWithEncoding)">
            <summary>
            Оператор сравнения двух текстов.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.TextWithEncoding.op_Inequality(ManagedClient.TextWithEncoding,ManagedClient.TextWithEncoding)">
            <summary>
            Оператор сравнения двух текстов.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.TextWithEncoding.Text">
            <summary>
            Собственно текст.
            </summary>
        </member>
        <member name="P:ManagedClient.TextWithEncoding.Encoding">
            <summary>
            Кодировка.
            </summary>
        </member>
        <member name="T:ManagedClient.Transactions.IrbisTransactionAction">
            <summary>
            Отслеживаемое действие при транзакции.
            </summary>
        </member>
        <member name="T:ManagedClient.Transactions.IrbisTransactionItem">
            <summary>
            Данные об элементе транзакции.
            </summary>
        </member>
        <member name="P:ManagedClient.Transactions.IrbisTransactionItem.Moment">
            <summary>
            Момент времени.
            </summary>
        </member>
        <member name="P:ManagedClient.Transactions.IrbisTransactionItem.Action">
            <summary>
            Произведенное действие: создание записи,
            модификация, удаление.
            </summary>
        </member>
        <member name="P:ManagedClient.Transactions.IrbisTransactionItem.Database">
            <summary>
            Имя базы данных, в которой происходило действие.
            </summary>
        </member>
        <member name="P:ManagedClient.Transactions.IrbisTransactionItem.Mfn">
            <summary>
            MFN записи, с которой происходило действие.
            </summary>
        </member>
        <member name="T:ManagedClient.Transactions.IrbisTransactionManager">
            <summary>
            Менеджер транзакций
            </summary>
        </member>
        <member name="M:ManagedClient.Transactions.IrbisTransactionManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, 
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisTree">
            <summary>
            Дерево (иерархический справочник).
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisTree.Name">
            <summary>
            Имя (чисто для идентификации).
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisUserInfo">
            <summary>
            Информация о зарегистрированном пользователе системы
            (по данным client_m.mnu).
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisUserInfo.Parse(System.String[])">
            <summary>
            Разбор ответа сервера.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.IrbisUserInfo.Number">
            <summary>
            Номер по порядку.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisUserInfo.Name">
            <summary>
            Логин.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisUserInfo.Password">
            <summary>
            Пароль.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisUserInfo.Cataloger">
            <summary>
            Доступность АРМ Каталогизатор.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisUserInfo.Reader">
            <summary>
            АРМ Читатель.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisUserInfo.Circulation">
            <summary>
            АРМ Книговыдача.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisUserInfo.Acquisitions">
            <summary>
            АРМ Комплектатор.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisUserInfo.Provision">
            <summary>
            АРМ Книгообеспеченность.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisUserInfo.Administrator">
            <summary>
            АРМ Администратор.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisUtilities.StandardConnectionStrings">
            <summary>
            Стандартные наименования для ключа строки подключения
            к серверу ИРБИС64.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.IrbisUtilities.GetConnectionString">
            <summary>
            Получаем строку подключения в app.settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.IrbisUtilities.GetClient">
            <summary>
            Получаем уже подключенного клиента.
            </summary>
            <returns></returns>
            <exception cref="T:System.ApplicationException">
            Если строка подключения в app.settings не найдена.
            </exception>
        </member>
        <member name="T:ManagedClient.IrbisVersion">
            <summary>
            Информация о версии ИРБИС-сервера.
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisVersion.Parse(System.Collections.Generic.List{System.String})">
            <summary>
            Разбор ответа сервера.
            </summary>
            <param name="lines"></param>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.IrbisVersion.Organization">
            <summary>
            На кого приобретен.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisVersion.Version">
            <summary>
            Собственно версия.
            </summary>
            <remarks>Например, 64.2008.1</remarks>
        </member>
        <member name="P:ManagedClient.IrbisVersion.MaxClients">
            <summary>
            Максимальное количество подключений.
            </summary>
        </member>
        <member name="P:ManagedClient.IrbisVersion.ConnectedClients">
            <summary>
            Текущее количество подключений.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisWorkSheet">
            <summary>
            Wrapper for WS file
            </summary>
        </member>
        <member name="M:ManagedClient.IrbisWorkSheet.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ManagedClient.IrbisWorkSheet"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:ManagedClient.IrbisWorkSheet.ParseLines(System.String[])">
            <summary>
            Парсинг строк.
            </summary>
            <param name="lines"></param>
        </member>
        <member name="M:ManagedClient.IrbisWorkSheet.ParseText(System.String)">
            <summary>
            Парсинг текста.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:ManagedClient.IrbisWorkSheet.ParseFile(System.String)">
            <summary>
            Парсинг локального файла.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:ManagedClient.IrbisWorkSheet.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.IrbisWorkSheet.Name">
            <summary>
            Имя рабочего листа, например, PAZK.
            </summary>
            <value></value>
        </member>
        <member name="P:ManagedClient.IrbisWorkSheet.Pages">
            <summary>
            Страницы рабочего листа.
            </summary>
            <value></value>
        </member>
        <member name="T:ManagedClient.IrbisWorkstation">
            <summary>
            Коды АРМов ИРБИС.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisXml">
            <summary>
            MarcXml import/export
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisWorkSheets">
            <summary>
            Некоторые хорошо известные рабочие листы.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisWorkSheets.MagazineIssue">
            <summary>
            Выпуск (номер) журнала.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisWorkSheets.Magazine">
            <summary>
            Сводное описание журнала.
            </summary>
        </member>
        <member name="F:ManagedClient.IrbisWorkSheets.MagazineArticle">
            <summary>
            Статья из журнала.
            </summary>
        </member>
        <member name="T:ManagedClient.ManagedClient64">
            <summary>
            Клиент для общения с сервером
            </summary>
        </member>
        <member name="F:ManagedClient.ManagedClient64.QueryLineDelimiter">
            <summary>
            Разделитель строк в пакете запроса к серверу.
            </summary>
        </member>
        <member name="F:ManagedClient.ManagedClient64.ResponseLineDelimiter">
            <summary>
            Разделитель строк в пакете ответа сервера.
            </summary>
        </member>
        <member name="F:ManagedClient.ManagedClient64.MaxPostings">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedClient.ManagedClient64.DefaultHost">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedClient.ManagedClient64.DefaultDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedClient.ManagedClient64.DefaultWorkstation">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedClient.ManagedClient64.DefaultPort">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedClient.ManagedClient64.DefaultRetryCount">
            <summary>
            Количество попыток повторения команды по умолчанию.
            </summary>
        </member>
        <member name="F:ManagedClient.ManagedClient64.DefaultTimeout">
            <summary>
            Таймаут получения ответа от сервера по умолчанию.
            </summary>
        </member>
        <member name="M:ManagedClient.ManagedClient64.#ctor">
            <summary>
            Конструктор по умолчанию
            </summary>
            <remarks>
            Обратите внимание, деструктор не нужен!
            Он помешает сохранению состояния клиента
            при сериализации и последующему восстановлению,
            т. к. попытается закрыть уже установленное
            соединение. Восстановленная копия клиента
            ломанётся в закрытое соедиение, и выйдет облом.
            </remarks>
        </member>
        <member name="M:ManagedClient.ManagedClient64.ParseConnectionString(System.String)">
            <summary>
            Разбор строки подключения.
            </summary>
        </member>
        <member name="M:ManagedClient.ManagedClient64.PushDatabase(System.String)">
            <summary>
            Устанавливает подключение к новой базе.
            Запоминает, к какой базе был подключен
            клиент на момент смены.
            </summary>
            <param name="newDatabase">Новая база данных.</param>
            <returns>Предыдущая база данных.</returns>
        </member>
        <member name="M:ManagedClient.ManagedClient64.PopDatabase">
            <summary>
            Восстанавливает подключение к предыдущей
            базе данных.
            </summary>
            <returns>Имя базы данных, к которой
            был подключен клиент на момент восстановления
            состояния.</returns>
        </member>
        <member name="M:ManagedClient.ManagedClient64.Connect">
            <summary>
            Подключение к серверу.
            </summary>
        </member>
        <member name="M:ManagedClient.ManagedClient64.ReadRecord(System.Int32)">
            <summary>
            Чтение записи с последующим раскодированием по полям.
            </summary>
            <param name="mfn">MFN записи для чтения.</param>
            <returns>Раскодированная по полям запись.</returns>
        </member>
        <member name="M:ManagedClient.ManagedClient64.SearchDatabase(System.String,System.String,System.Object[])">
            <summary>
            Ищет по указанной базе данных.
            По окончанию поиска восстанавливает
            текущий контекст.
            </summary>
        </member>
        <member name="M:ManagedClient.ManagedClient64.FormatLocal(System.String,ManagedClient.IrbisRecord)">
            <summary>
            Расформатирование записи локально,
            по возможности без походов на сервер.
            </summary>
            <param name="format"></param>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.ManagedClient64.ActualizeRecord(System.Int32)">
            <summary>
            Актуализирует запись.
            </summary>
            <param name="mfn">MFN записи. 0 означает все 
            неактуализированные записи в базе.</param>
        </member>
        <member name="M:ManagedClient.ManagedClient64.TruncateDatabase">
            <summary>
            Truncates the database.
            </summary>
            <remarks><see cref="P:ManagedClient.ManagedClient64.Workstation"/> must be set to
            <see cref="F:ManagedClient.IrbisWorkstation.Administrator"/>.
            <see cref="P:ManagedClient.ManagedClient64.Workstation"/> can't be switched at the
            runtime!
            </remarks>
        </member>
        <member name="M:ManagedClient.ManagedClient64.GetDatabaseInfo">
            <summary>
            Получение информации о базе данных.
            </summary>
            <returns>список логически удаленных, физически удаленных, 
            неактуализированных и заблокированных записей.</returns>
        </member>
        <member name="M:ManagedClient.ManagedClient64.GetQueryCount">
            <summary>
            Общее число обращений к серверу, выполненных данным клиентом.
            </summary>
            <returns>Число обращений к серверу.</returns>
        </member>
        <member name="M:ManagedClient.ManagedClient64.GlobalAdjustment(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],System.Boolean,System.Boolean,System.Boolean,ManagedClient.Gbl.GblItem[])">
            <summary>
            Глобальная корректировка
            </summary>
            <param name="searchExpression">Поисковое выражение, предварительно
            отбирающее записи.</param>
            <param name="searchFrom">Первый MFN в БД для поиска.</param>
            <param name="searchTo">Последний MFN в БД для поиска.</param>
            <param name="firstMfn">Первый mfn в результате поиска 
            для корректировки.</param>
            <param name="lastMfn">Последний mfn в результате поиска для корректировки.</param>
            <param name="mfns">Прямое перечисление MFN.</param>
            <param name="autoin">Автоввод</param>
            <param name="adjustments">Выражения для GBL</param>
            <param name="updateIf">Актуализировать словарь</param>
            <param name="flc">Формально-логический контроль</param>
        </member>
        <member name="M:ManagedClient.ManagedClient64.RawSequentialSearch(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Последовательный поиск.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.ManagedClient64.Shutdown">
            <summary>
            Данный метод нужен, чтобы клиент 
            не пытался самостоятельно закрыть соединение с сервером.
            Этот метод может пригодиться при сохранении состояния
            клиента с последующим восстановлением.
            </summary>
        </member>
        <member name="M:ManagedClient.ManagedClient64.ReportSettingsToServer">
            <summary>
            Фиксирует в серверном INI-файле ФИО оператора и этап работы.
            Это нужно для работы &amp;unifor('IPRIVATE,FIO') 
            и &amp;unifor('IPRIVATE,ETR')
            </summary>
        </member>
        <member name="E:ManagedClient.ManagedClient64.ErrorHandler">
            <summary>
            Вызывается при возникновении ошибки.
            </summary>
        </member>
        <member name="E:ManagedClient.ManagedClient64.BusyChanged">
            <summary>
            Вызывается, когда меняется состояние Busy;
            </summary>
        </member>
        <member name="E:ManagedClient.ManagedClient64.Disposing">
            <summary>
            Вызывается перед уничтожением объекта.
            </summary>
        </member>
        <member name="E:ManagedClient.ManagedClient64.AuthenticationNeeded">
            <summary>
            Вызывается при отсутствии логина/пароля для входа на сервер.
            </summary>
        </member>
        <member name="E:ManagedClient.ManagedClient64.DatabaseChanged">
            <summary>
            Вызывается при смене базы данных.
            </summary>
        </member>
        <member name="E:ManagedClient.ManagedClient64.BeforeQuery">
            <summary>
            Трансформация запроса перед отсылкой на сервер.
            </summary>
        </member>
        <member name="E:ManagedClient.ManagedClient64.AfterQuery">
            <summary>
            Трансформация ответа после получения с сервера.
            </summary>
        </member>
        <member name="E:ManagedClient.ManagedClient64.Transaction">
            <summary>
            Отлавливание транзакции по созданию, модификации или удалению записей.
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Host">
            <summary>
            Адрес сервера.
            </summary>
            <value>Адрес сервера в цифровом виде.</value>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Port">
            <summary>
            Порт сервера.
            </summary>
            <value>Порт сервера (по умолчанию 6666).</value>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Username">
            <summary>
            Имя пользователя.
            </summary>
            <value>Имя пользователя.</value>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Password">
            <summary>
            Пароль пользователя.
            </summary>
            <value>Пароль пользователя.</value>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Database">
            <summary>
            Имя базы данных.
            </summary>
            <value>Служебное имя базы данных (например, "IBIS").</value>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Workstation">
            <summary>
            Тип АРМ.
            </summary>
            <value>По умолчанию <see cref="F:ManagedClient.IrbisWorkstation.Cataloger"/>.
            </value>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Configuration">
            <summary>
            Конфигурация клиента.
            </summary>
            <value>Высылается сервером при подключении.</value>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Connected">
            <summary>
            Статус подключения к серверу.
            </summary>
            <value>Устанавливается в true при успешном выполнении
            <see cref="M:ManagedClient.ManagedClient64.Connect"/>, сбрасывается при выполнении
            <see cref="M:ManagedClient.ManagedClient64.Disconnect"/> или <see cref="M:ManagedClient.ManagedClient64.Dispose"/>.</value>
        </member>
        <member name="P:ManagedClient.ManagedClient64.WaitHandle">
            <summary>
            Для ожидания окончания запроса.
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.DebugWriter">
            <summary>
            Поток для вывода отладочной информации.
            </summary>
            <remarks><para><c>null</c> означает, что вывод отладочной 
            информации не нужен.</para>
            <para>Обратите внимание, что <see cref="P:ManagedClient.ManagedClient64.DebugWriter"/>
            не сериализуется, т. к. большинство потоков не умеют
            сериализоваться. Так что при восстановлении клиента
            вам придётся восстанавливать <see cref="P:ManagedClient.ManagedClient64.DebugWriter"/>
            самостоятельно.</para>
            </remarks>
        </member>
        <member name="P:ManagedClient.ManagedClient64.AllowHexadecimalDump">
            <summary>
            Разрешение делать шестнадцатиричный дамп полученных от сервера пакетов.
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.RetryCount">
            <summary>
            Количество повторений команды при неудаче.
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Timeout">
            <summary>
            Таймаут получения ответа от сервера в миллисекундах
            (для продвинутых функций).
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.NeedParseRequest">
            <summary>
            Флаг, устанавливающий необходимость парсинга поискового запроса с выделением ключевых слов
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.MinCharsCountForSelect">
            <summary>
            Минимальное необходимое количество символов для выделения термина
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.PftOptFile">
            <summary>
            Имя файла оптимизации с расширением PFT
            </summary>        
        </member>
        <member name="P:ManagedClient.ManagedClient64.UserData">
            <summary>
            Произвольные пользовательские данные
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.StageOfWork">
            <summary>
            Этап работы.
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Socket">
            <summary>
            Работа с сокетами.
            </summary>
        </member>
        <member name="P:ManagedClient.ManagedClient64.Cache">
            <summary>
            Кэш форматов, меню и т. д.
            По умолчанию отсутствует.
            См. <see cref="M:ManagedClient.ManagedClient64.ReadTextFile(System.String)"/>.
            </summary>
        </member>
        <member name="T:ManagedClient.Mapping.SubFieldAttribute">
            <summary>
            Задаёт отображение подполя на свойство.
            </summary>
        </member>
        <member name="T:ManagedClient.MergeAction">
            <summary>
            Действия над полями при слиянии записей.
            </summary>
        </member>
        <member name="F:ManagedClient.MergeAction.NoAction">
            <summary>
            Не заменять, оставлять прежним.
            </summary>
        </member>
        <member name="F:ManagedClient.MergeAction.LeaveIntact">
            <summary>
            Не заменять, оставлять прежним.
            </summary>
        </member>
        <member name="F:ManagedClient.MergeAction.Replace">
            <summary>
            Полностью заменять.
            </summary>
        </member>
        <member name="F:ManagedClient.MergeAction.AppendAll">
            <summary>
            Добавлять все повторения.
            </summary>
        </member>
        <member name="F:ManagedClient.MergeAction.AppendNew">
            <summary>
            Добавлять только отсутствующие повторения.
            </summary>
        </member>
        <member name="F:ManagedClient.MergeAction.AppendIfEmpty">
            <summary>
            Добавлять, только если нет такого поля.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.MstControlRecord64">
            <summary>
            Первая запись в файле документов – управляющая 
            запись, которая формируется (в момент определения 
            базы данных или при ее инициализации) и поддерживается 
            автоматически.
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.MstControlRecord64.RecordSize">
            <summary>
            Размер управляющей записи.
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.MstControlRecord64.LockFlagPosition">
            <summary>
            Позиция индикатора блокировки базы данных
            в управляющей записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord64.Reserv1">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord64.NextMfn">
            <summary>
            Номер записи файла документов, назначаемый 
            для следующей записи, создаваемой в базе данных.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord64.NextPosition">
            <summary>
            Смещение свободного места в файле; (всегда указывает
            на конец файла MST).
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord64.Reserv2">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord64.Reserv3">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord64.Reserv4">
            <summary>
            Резерв.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstControlRecord64.Blocked">
            <summary>
            Индикатор блокировки базы данных.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.MstDictionaryEntry64">
            <summary>
            Элемент справочника MST-файла,
            описывающий поле переменной длины.
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.MstDictionaryEntry64.EntrySize">
            <summary>
            Длина элемента справочника MST-файла.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.MstFile64">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedClient.Direct.MstFile64.LockDatabase(System.Boolean)">
            <summary>
            Блокировка базы данных в целом.
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:ManagedClient.Direct.MstFile64.ReadDatabaseLockedFlag">
            <summary>
            Чтение флага блокировки базы данных в целом.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.MstRecordLeader64">
            <summary>
            
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.MstRecordLeader64.LeaderSize">
            <summary>
            Фиксированный размер лидера записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader64.Mfn">
            <summary>
            Номер записи в  файле документов.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader64.Length">
            <summary>
            Длина записи (всегда четное число).
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader64.Previous">
            <summary>
            Ссылка на предыдущую версию записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader64.Base">
            <summary>
            Смещение (базовый адрес) полей
            переменной длины (это общая часть
            лидера и справочника записи в байтах).
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader64.Nvf">
            <summary>
            Число полей в записи (т.е. число входов
            в справочнике).
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader64.Status">
            <summary>
            Индикатор записи (логически удаленная и т.п.).
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.MstRecordLeader64.Version">
            <summary>
            Номер версии записи.
            </summary>
        </member>
        <member name="T:ManagedClient.NodeItem">
            <summary>
            Справочник в N01/L01 является таблицей, определяющей
            поисковый термин. Каждый ключ переменной длины, который
            есть в записи, представлен в справочнике одним входом,
            формат которого описывает следующая структура
            </summary>
        </member>
        <member name="P:ManagedClient.NodeItem.Length">
            <summary>
            Длина ключа
            </summary>
        </member>
        <member name="P:ManagedClient.NodeItem.KeyOffset">
            <summary>
            Смещение ключа от начала записи
            </summary>
        </member>
        <member name="P:ManagedClient.NodeItem.LowOffset">
            <summary>
            Младшее слово смещения
            </summary>
        </member>
        <member name="P:ManagedClient.NodeItem.HighOffset">
            <summary>
            Старшее слово смещения
            </summary>
        </member>
        <member name="P:ManagedClient.NodeItem.Text">
            <summary>
            Текстовое значение ключа
            </summary>
        </member>
        <member name="T:ManagedClient.NodeLeader">
            <summary>
            Лидер записи в N01, L01
            </summary>
        </member>
        <member name="P:ManagedClient.NodeLeader.Number">
            <summary>
            Номер записи (начиная с 1; в N01 номер первой записи
            равен номеру корневой записи дерева
            </summary>
        </member>
        <member name="P:ManagedClient.NodeLeader.Previous">
            <summary>
            Номер предыдущей записи (-1, если нет)
            </summary>
        </member>
        <member name="P:ManagedClient.NodeLeader.Next">
            <summary>
            Номер следующей записи (-1, если нет)
            </summary>
        </member>
        <member name="P:ManagedClient.NodeLeader.TermCount">
            <summary>
            Число ключей в записи
            </summary>
        </member>
        <member name="P:ManagedClient.NodeLeader.FreeOffset">
            <summary>
            Смещение на свободную позицию в записи
            (от начала записи)
            </summary>
        </member>
        <member name="F:ManagedClient.NodeRecord.RecordSize">
            <summary>
            Длина записи в текущей реализации.
            </summary>
        </member>
        <member name="T:ManagedClient.Magazines.MagazineArticleInfo">
            <summary>
            Информация о статье.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineArticleInfo.Parse(ManagedClient.IrbisRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineArticleInfo.Parse(ManagedClient.RecordField)">
            <summary>
            Разбор поля (330 или 922).
            </summary>
        </member>
        <member name="T:ManagedClient.Magazines.MagazineInfo">
            <summary>
            Информация о журнале в целом.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineInfo.Parse(ManagedClient.IrbisRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.Index">
            <summary>
            Код документа в базе. Поле 903.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.Description">
            <summary>
            Библиографическое описание.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.Title">
            <summary>
            Заглавие. Поле 200^a
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.SubTitle">
            <summary>
            Подзаголовочные сведения.
            Поле 200^e.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.SeriesNumber">
            <summary>
            Обозначение и выпуск серии.
            Поле 923^1.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.SeriesTitle">
            <summary>
            Заголовок серии.
            Поле 923^i.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.ExtendedTitle">
            <summary>
            Расширенное заглавие. 
            Включает заголовок выпуск и заголовок серии.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.MagazineType">
            <summary>
            Тип издания. Поле 110^t
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.MagazineKind">
            <summary>
            Вид издания. Поле 110^b
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.Periodicity">
            <summary>
            Периодичность (число). Поле 110^x
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.Cumulation">
            <summary>
            Кумуляция. Поле 909
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.Mfn">
            <summary>
            MFN записи журнала.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineInfo.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedClient.Magazines.MagazineIssueInfo">
            <summary>
            Сведения о номере журнала
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineIssueInfo.Parse(ManagedClient.IrbisRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineIssueInfo.CompareNumbers(ManagedClient.Magazines.MagazineIssueInfo,ManagedClient.Magazines.MagazineIssueInfo)">
            <summary>
            Сравнение двух выпусков
            (с целью сортировки по возрастанию номеров).
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.Mfn">
            <summary>
            MFN записи.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.Description">
            <summary>
            Библиографическое описание.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.DocumentCode">
            <summary>
            Шифр документа в базе. Поле 903.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.MagazineCode">
            <summary>
            Шифр журнала. Поле 933.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.Year">
            <summary>
            Год. Поле 934.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.Volume">
            <summary>
            Том. Поле 935.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.Number">
            <summary>
            Номер, часть. Поле 936.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.Supplement">
            <summary>
            Дополнение к номеру. Поле 931^c.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.Worksheet">
            <summary>
            Рабочий лист. Поле 920.
            (чтобы отличать подшивки от выпусков журналов)
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.Articles">
            <summary>
            Расписанное оглавление. Поле 922.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.Exemplars">
            <summary>
            Экземпляры. Поле 910.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineIssueInfo.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedClient.Magazines.MagazineManager">
            <summary>
            Работа с периодикой.
            </summary>
        </member>
        <member name="F:ManagedClient.Magazines.MagazineManager.Newspaper">
            <summary>
            Вид документа – сводное описание газеты.
            </summary>
        </member>
        <member name="F:ManagedClient.Magazines.MagazineManager.Magazine">
            <summary>
            Вид документа – сводное описание журнала.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineManager.#ctor(ManagedClient.ManagedClient64)">
            <summary>
            Конструктор.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineManager.GetAllMagazines">
            <summary>
            Получение перечня всех журналов из базы.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineManager.GetMagazine(ManagedClient.Magazines.MagazineIssueInfo)">
            <summary>
            Получение журнала по его выпуску.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineManager.GetIssue(ManagedClient.Magazines.MagazineArticleInfo)">
            <summary>
            Получение выпуска журнала по статье из этого выпуска.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineManager.GetIssues(ManagedClient.Magazines.MagazineInfo)">
            <summary>
            Получение списка выпусков данного журнала.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineManager.GetArticles(ManagedClient.Magazines.MagazineIssueInfo)">
            <summary>
            Получение списка статей из выпуска.
            </summary>
        </member>
        <member name="M:ManagedClient.Magazines.MagazineManager.CreateMagazine(ManagedClient.Magazines.MagazineInfo)">
            <summary>
            Создание журнала в базе по описанию.
            </summary>
        </member>
        <member name="P:ManagedClient.Magazines.MagazineManager.Client">
            <summary>
            Клиент для связи с сервером.
            </summary>
        </member>
        <member name="T:ManagedClient.OrganizationInfo">
            <summary>
            Обёртка для ORG.MNU
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.CountryCode">
            <summary>
            Код страны.
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.Organization">
            <summary>
            Наименование организации.
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.CurrencySymbol">
            <summary>
            Обозначение валюты.
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.VolumeSymbol">
            <summary>
            Единица измерения объема издания.
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.PagesSymbol">
            <summary>
            Страницы для журналов/газет.
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.NationalLanguage">
            <summary>
            Национальный язык.
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.FundCheck">
            <summary>
            Проверка фонда.
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.Technology">
            <summary>
            Формировать словарь «Технология»?
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.AuthorSign">
            <summary>
            Автоматически формировать авторский знак?
            </summary>
        </member>
        <member name="P:ManagedClient.OrganizationInfo.Sigla">
            <summary>
            Сигла библиотеки.
            </summary>
        </member>
        <member name="T:ManagedClient.Parser.IrbisParser">
            <summary>
            Разбор PFT и FST.
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisSearchEngine">
            <summary>
            Параметры и операции, связанные с поисковыми сценариями
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisSearchEngine.SearchTerm">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.QueryHeader">
            <summary>
            Заголовок запроса, уходящего на сервер.
            </summary>
        </member>
        <member name="M:ManagedClient.QueryHeader.Encode">
            <summary>
            Кодирование заголовка запроса в формат, 
            пригодный для отправки на сервер.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.QueryHeader.Command">
            <summary>
            Код команды.
            </summary>
        </member>
        <member name="P:ManagedClient.QueryHeader.Subcommand">
            <summary>
            Код подкоманды.
            </summary>
        </member>
        <member name="P:ManagedClient.QueryHeader.Workstation">
            <summary>
            Код АРМа.
            </summary>
        </member>
        <member name="P:ManagedClient.QueryHeader.ClientID">
            <summary>
            Идентификатор программы-клиента.
            </summary>
        </member>
        <member name="P:ManagedClient.QueryHeader.QueryID">
            <summary>
            Идентификатор запроса (последовательно возрастающее целое).
            </summary>
        </member>
        <member name="P:ManagedClient.QueryHeader.Password">
            <summary>
            Пароль.
            </summary>
        </member>
        <member name="P:ManagedClient.QueryHeader.UserName">
            <summary>
            Логин.
            </summary>
        </member>
        <member name="T:ManagedClient.Readers.ReaderInfo">
            <summary>
            Информация о читателе.
            </summary>
        </member>
        <member name="F:ManagedClient.Readers.ReaderInfo.Enrolment">
            <summary>
            Запись/перерегистрация в библиотеку.
            Поле 51.
            </summary>
        </member>
        <member name="F:ManagedClient.Readers.ReaderInfo.Registrations">
            <summary>
            Дата перерегистрации. Поле 52.
            </summary>
        </member>
        <member name="F:ManagedClient.Readers.ReaderInfo.Visits">
            <summary>
            Информация о посещениях.
            </summary>
        </member>
        <member name="F:ManagedClient.Readers.ReaderInfo.Profiles">
            <summary>
            Профили обслуживания ИРИ.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderInfo.Parse(ManagedClient.IrbisRecord)">
            <summary>
            Parse the specified field.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Readers.ReaderInfo.ToRecord">
            <summary>
            Формирование записи по данным о читателе.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Readers.ReaderInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Fio">
            <summary>
            ФИО. Комбинируется из полей 10, 11 и 12.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.FamilyName">
            <summary>
            Фамилия. Поле 10.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.FirstName">
            <summary>
            Имя. Поле 11.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Patronym">
            <summary>
            Отчество. Поле 12.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Birthdate">
            <summary>
            Дата рождения. Поле 21.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Ticket">
            <summary>
            Номер читательского. Поле 30.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Gender">
            <summary>
            Пол. Поле 23.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Category">
            <summary>
            Категория. Поле 50.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Address">
            <summary>
            Домашний адрес. Поле 13.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Work">
            <summary>
            Место работы. Поле 15.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Education">
            <summary>
            Образование. Поле 20.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Email">
            <summary>
            Электронная почта. Поле 32.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.HomePhone">
            <summary>
            Домашний телефон. Поле 17.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.RegistrationDateString">
            <summary>
            Дата записи. Поле 51.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.RegistrationDate">
            <summary>
            Дата регистрации
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.LastRegistrationDate">
            <summary>
            Дата последней перерегистрации.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.LastRegistrationPlace">
            <summary>
            Последнее место регистрации.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.EnabledPlaces">
            <summary>
            Разрешенные места получения литературы. Поле 56.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.DisabledPlaces">
            <summary>
            Запрещенные места получения литературы. Поле 57.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Rights">
            <summary>
            Право пользования библиотекой. Поле 29.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Remarks">
            <summary>
            Примечания. Поле 33.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.PhotoFile">
            <summary>
            Фотография читателя. Поле 950.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Age">
            <summary>
            Возраст, годы
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.AgeCategory">
            <summary>
            Возрастная категория.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.UserData">
            <summary>
            Произвольные данные, ассоциированные с читателем.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.FirstVisitDate">
            <summary>
            Дата первого посещения
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.LastVisitDate">
            <summary>
            Дата последнего посещения.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.LastVisitPlace">
            <summary>
            Кафедра последнего посещения.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.LastVisitResponsible">
            <summary>
            Последний обслуживавший библиотекарь.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Description">
            <summary>
            Расформатированное описание.
            Не соответствует никакому полю.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.ReaderInfo.Mfn">
            <summary>
            MFN записи.
            </summary>
        </member>
        <member name="T:ManagedClient.Readers.ReaderManager">
            <summary>
            Основные операции с читателями.
            </summary>
        </member>
        <member name="F:ManagedClient.Readers.ReaderManager.ReaderIdentifier">
            <summary>
            Стандартный префикс идентификатора читателя.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.ReaderManager.#ctor(ManagedClient.ManagedClient64)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.Readers.ReaderManager"/> class.
            </summary>
            <param name="client">The client.</param>
            <exception cref="T:System.ArgumentNullException">client</exception>
        </member>
        <member name="M:ManagedClient.Readers.ReaderManager.GetAllReaders">
            <summary>
            Получение массива всех (не удалённых) читателей из базы данных.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Readers.ReaderManager.GetReader(System.String)">
            <summary>
            Получение записи читателя по его идентификатору.
            </summary>
            <param name="ticket"></param>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.Readers.ReaderManager.Client">
            <summary>
            Клиент, общающийся с сервером.
            </summary>
        </member>
        <member name="T:ManagedClient.RecordBuffer">
            <summary>
            Накапливает записи и отправляет их на сервер пакетами.
            </summary>
        </member>
        <member name="M:ManagedClient.RecordBuffer.#ctor(ManagedClient.ManagedClient64)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.RecordBuffer"/> class.
            </summary>
            <param name="client">The client.</param>
        </member>
        <member name="M:ManagedClient.RecordBuffer.Append(ManagedClient.IrbisRecord)">
            <summary>
            Appends the specified record.
            </summary>
            <param name="record">The record.</param>
            <exception cref="T:System.ArgumentNullException">record</exception>
        </member>
        <member name="M:ManagedClient.RecordBuffer.Flush">
            <summary>
            Flushes this instance.
            </summary>
        </member>
        <member name="M:ManagedClient.RecordBuffer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, 
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:ManagedClient.RecordBuffer.Capacity">
            <summary>
            Gets the capacity.
            </summary>
            <value>
            The capacity.
            </value>
        </member>
        <member name="P:ManagedClient.RecordBuffer.Database">
            <summary>
            Gets or sets the database.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="P:ManagedClient.RecordBuffer.Actualize">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ManagedClient.RecordBuffer"/> is actualize.
            </summary>
            <value>
              <c>true</c> if actualize; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ManagedClient.RecordBuffer.Client">
            <summary>
            Gets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="T:ManagedClient.RecordField">
            <summary>
            Поле библиографической записи.
            </summary>
        </member>
        <member name="F:ManagedClient.RecordField.Delimiter">
            <summary>
            Разделитель подполей.
            </summary>
        </member>
        <member name="F:ManagedClient.RecordField.BreakOnTextContainDelimiters">
            <summary>
            Флаг: выбрасывать исключение, если свойству Text
            присваивается значение, содержащее разделитель.
            </summary>
        </member>
        <member name="F:ManagedClient.RecordField.Repeat">
            <summary>
            Повторение поля.
            Настраивается перед передачей
            в скрипты.
            Не используется в большинстве сценариев.
            </summary>
        </member>
        <member name="F:ManagedClient.RecordField.Record">
            <summary>
            Ссылка на запись, владеющую
            данным полем. Настраивается
            перед передачей в скрипты.
            Всё остальное время неактуально.
            </summary>
        </member>
        <member name="M:ManagedClient.RecordField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.RecordField"/> class.
            </summary>
        </member>
        <member name="M:ManagedClient.RecordField.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.RecordField"/> class.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:ManagedClient.RecordField.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.RecordField"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:ManagedClient.RecordField.GetSubField(System.Char)">
            <summary>
            Перечень подполей с указанным кодом.
            </summary>
            <param name="code">Искомый код подполя.</param>
            <remarks>Сравнение кодов происходит без учета
            регистра символов.</remarks>
            <returns>Найденные подполя.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.GetSubField(System.Char,System.Int32)">
            <summary>
            Указанное повторение подполя с данным кодом.
            </summary>
            <param name="code">Искомый код подполя.</param>
            <param name="occurrence">Номер повторения.
            Нумерация начинается с нуля.
            Отрицательные индексы отсчитываются с конца массива.</param>
            <returns>Найденное подполе или <c>null</c>.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.GetFirstSubField(System.Char)">
            <summary>
            Gets the first subfield.
            </summary>
            <param name="code">The code.</param>
            <returns>SubField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.GetSubFieldText(System.Char,System.Int32)">
            <summary>
            Получение текста указанного подполя.
            </summary>
            <param name="code">Искомый код подполя.</param>
            <param name="occurrence">Номер повторения.
            Нумерация начинается с нуля.
            Отрицательные индексы отсчитываются с конца массива.</param>
            <returns>Текст найденного подполя или <c>null</c>.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.GetFirstSubFieldText(System.Char)">
            <summary>
            Gets first subfield text.
            </summary>
            <param name="code">The code.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.FilterSubFields(System.Collections.Generic.IEnumerable{ManagedClient.SubField},System.Func{ManagedClient.SubField,System.Boolean})">
            <summary>
            Filters the sub fields.
            </summary>
            <param name="subFields">The sub fields.</param>
            <param name="predicate">The predicate.</param>
            <returns>SubField[].</returns>
        </member>
        <member name="M:ManagedClient.RecordField.FilterSubFields(System.Func{ManagedClient.SubField,System.Boolean})">
            <summary>
            Filters the sub fields.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns>SubField[].</returns>
        </member>
        <member name="M:ManagedClient.RecordField.FilterSubFields(System.Collections.Generic.IEnumerable{ManagedClient.SubField},System.Char[],System.Func{ManagedClient.SubField,System.Boolean})">
            <summary>
            Filters the sub fields.
            </summary>
            <param name="subFields">The sub fields.</param>
            <param name="codes">The codes.</param>
            <param name="predicate">The predicate.</param>
            <returns>SubField[].</returns>
        </member>
        <member name="M:ManagedClient.RecordField.FilterSubFields(System.Char[],System.Func{ManagedClient.SubField,System.Boolean})">
            <summary>
            Filters the sub fields.
            </summary>
            <param name="codes">The codes.</param>
            <param name="predicate">The predicate.</param>
            <returns>SubField[].</returns>
        </member>
        <member name="M:ManagedClient.RecordField.FilterSubFields(System.Collections.Generic.IEnumerable{ManagedClient.SubField},System.Char[])">
            <summary>
            Отбор подполей с указанными кодами.
            </summary>
            <param name="subFields"></param>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.RecordField.FilterSubFields(System.Char[])">
            <summary>
            Отбор подполей с указанными кодами.
            </summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.RecordField.AddSubField(System.Char,System.String)">
            <summary>
            Adds the sub field.
            </summary>
            <param name="code">The code.</param>
            <param name="text">The text.</param>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.AddNonEmptySubField(System.Char,System.String)">
            <summary>
            Adds the non empty sub field.
            </summary>
            <param name="code">The code.</param>
            <param name="text">The text.</param>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.SetSubField(System.Char,System.String)">
            <summary>
            Sets the sub field.
            </summary>
            <param name="code">The code.</param>
            <param name="text">The text.</param>
            <returns></returns>
            <remarks>Устанавливает значение только первого
            подполя с указанным кодом (если в поле их несколько)!
            </remarks>
        </member>
        <member name="M:ManagedClient.RecordField.ReplaceSubField(System.Char,System.String,System.String)">
            <summary>
            Replaces the sub field.
            </summary>
            <param name="code">The code.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.RemoveSubField(System.Char)">
            <summary>
            Removes the sub field.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
            <remarks>Удаляет все повторения подполей
            с указанным кодом.
            </remarks>
        </member>
        <member name="M:ManagedClient.RecordField.ReplaceSubField(System.Char,System.String,System.Boolean)">
            <summary>
            Replaces the sub field.
            </summary>
            <param name="code">The code.</param>
            <param name="newValue">The new value.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:ManagedClient.RecordField.HaveSubField(System.Char[])">
            <summary>
            Haves the sub field.
            </summary>
            <param name="codes">The codes.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:ManagedClient.RecordField.HaveNotSubField(System.Char[])">
            <summary>
            Haves the not sub field.
            </summary>
            <param name="codes">The codes.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:ManagedClient.RecordField.ToText">
            <summary>
            To the text.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.ToSortedText">
            <summary>
            Вывод поля в порядке алфавита
            кодов подполей.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.RecordField.Parse(System.String,System.String)">
            <summary>
            Парсинг текстового проедставления поля
            </summary>
            <param name="tag"></param>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.RecordField.Reparse(System.String)">
            <summary>
            Reparses the specified text.
            </summary>
            <param name="text">The text.</param>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.AddSubFields(System.Collections.Generic.IEnumerable{ManagedClient.SubField})">
            <summary>
            Adds the sub fields.
            </summary>
            <param name="subFields">The sub fields.</param>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.AddSubFields(System.String)">
            <summary>
            Adds the sub fields.
            </summary>
            <param name="encodedText">The encoded text.</param>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.SetSubFields(System.Collections.Generic.IEnumerable{ManagedClient.SubField})">
            <summary>
            Sets the sub fields.
            </summary>
            <param name="subFields">The sub fields.</param>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.SetSubFields(System.String)">
            <summary>
            Sets the sub fields.
            </summary>
            <param name="encodedText">The encoded text.</param>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.Parse(System.String)">
            <summary>
            Парсинг строкового представления поля.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.RecordField.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>RecordField.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.Compare(ManagedClient.RecordField,ManagedClient.RecordField,System.Boolean)">
            <summary>
            Compares the specified field1.
            </summary>
            <param name="field1">The field1.</param>
            <param name="field2">The field2.</param>
            <param name="verbose">if set to <c>true</c> [verbose].</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:ManagedClient.RecordField.GetEmbeddedFields(System.Char)">
            <summary>
            Gets the embedded fields.
            </summary>
            <param name="sign">The sign.</param>
            <returns>RecordField[].</returns>
        </member>
        <member name="M:ManagedClient.RecordField.GetEmbeddedFields">
            <summary>
            Gets the embedded fields.
            </summary>
            <returns>RecordField[].</returns>
        </member>
        <member name="M:ManagedClient.RecordField.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:ManagedClient.RecordField.Tag">
            <summary>
            Метка поля.
            </summary>
        </member>
        <member name="P:ManagedClient.RecordField.Text">
            <summary>
            Значение поля до первого разделителя подполей.
            </summary>
            <remarks>
            Внимание! Если присваиваемое значение содержит
            разделитель, то происходит и присвоение подполей!
            Имеющиеся в SubFields значения при этом пропадают
            и замещаются на вновь присваиваемые!
            </remarks>
        </member>
        <member name="P:ManagedClient.RecordField.SubFields">
            <summary>
            Список подполей.
            </summary>
        </member>
        <member name="P:ManagedClient.RecordField.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedClient.RecordMergeSpecification">
            <summary>
            Спецификация для слияния записей.
            </summary>
        </member>
        <member name="F:ManagedClient.RecordMergeSpecification.DefaultAction">
            <summary>
            Действие по умолчанию.
            </summary>
        </member>
        <member name="F:ManagedClient.RecordMergeSpecification.Fields">
            <summary>
            Спецификации для слияния полей.
            </summary>
        </member>
        <member name="T:ManagedClient.RecordReference">
            <summary>
            Ссылка на запись (например, для сохранения в "кармане").
            </summary>
        </member>
        <member name="P:ManagedClient.RecordReference.HostName">
            <summary>
            Сервер ИРБИС64. Например, "127.0.0.1".
            </summary>
        </member>
        <member name="P:ManagedClient.RecordReference.Database">
            <summary>
            База данных. Например, "IBIS".
            </summary>
        </member>
        <member name="P:ManagedClient.RecordReference.Mfn">
            <summary>
            MFN. Чаще всего = 0, т. к. используется Index.
            </summary>
        </member>
        <member name="P:ManagedClient.RecordReference.Index">
            <summary>
            Шифр записи в базе данных, например "81.432.1-42/P41-012833".
            </summary>
        </member>
        <member name="T:ManagedClient.RecordStatus">
            <summary>
            Статус записи
            </summary>
        </member>
        <member name="F:ManagedClient.RecordStatus.LogicallyDeleted">
            <summary>
            Запись логически удалена
            </summary>
        </member>
        <member name="F:ManagedClient.RecordStatus.PhysicallyDeleted">
            <summary>
            Запись физически удалена
            </summary>
        </member>
        <member name="F:ManagedClient.RecordStatus.Absent">
            <summary>
            Запись отсутствует
            </summary>
        </member>
        <member name="F:ManagedClient.RecordStatus.NonActualized">
            <summary>
            Запись не актуализирована
            </summary>
        </member>
        <member name="F:ManagedClient.RecordStatus.Last">
            <summary>
            Последний экземпляр записи
            </summary>
        </member>
        <member name="F:ManagedClient.RecordStatus.Locked">
            <summary>
            Запись заблокирована
            </summary>
        </member>
        <member name="T:ManagedClient.Requests.BookRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:ManagedClient.Requests.BookRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.Mfn">
            <summary>
            MFN записи с заказом.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.BookDescription">
            <summary>
            Краткое описание заказанного издания.
            Поле 201.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.BookCode">
            <summary>
            Шифр заказанного издания.
            Поле 903.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.RequestDate">
            <summary>
            Дата создания заказа.
            Поле 40.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.ReaderID">
            <summary>
            Идентификатор читателя.
            Поле 30.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.ReaderDescription">
            <summary>
            Краткое описание читателя.
            Поле 31.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.Database">
            <summary>
            Имя БД электронного каталога.
            Поле 1.
            Как правило, IBIS.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.RejectInfo">
            <summary>
            Сведения об отказе.
            Поле 44.
            Подполе A: причина отказа.
            Подполе B: дата.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.Place">
            <summary>
            Место выдачи.
            Поле 102.
            Часто равно *.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.ResponsiblePerson">
            <summary>
            Ответственное лицо.
            Поле 50.
            Берется из логина.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.BookRecord">
            <summary>
            Библиографическая запись о книге.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.Reader">
            <summary>
            Сведения о читателе.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.FreeNumbers">
            <summary>
            Свободные инвентарные номера.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.MyNumbers">
            <summary>
            Свободные номера, предназначенные для данного АРМ.
            </summary>
        </member>
        <member name="P:ManagedClient.Requests.BookRequest.Record">
            <summary>
            Запись, на осонове которой построен запрос
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.Status">
            <summary>
            Статус заказа.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.Unfulfilled">
            <summary>
            Невыполненные заказы.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.Fulfilled">
            <summary>
            Выполненные заказы.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.Refused">
            <summary>
            Отказы.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.ReaderID">
            <summary>
            Идентификатор читателя.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.DocumentID">
            <summary>
            Идентификкатор издания.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.Number">
            <summary>
            Инвентарный номер или штрих-код экземпляра.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.OrderDate">
            <summary>
            Дата заказа.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.LoanID">
            <summary>
            Шифр выданной литературы.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.Description">
            <summary>
            Описание выданной литературы.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.LoanDate">
            <summary>
            Дата выдачи.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.ReturnDate">
            <summary>
            Дата возврата.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.Attendance">
            <summary>
            Посещаемость.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.Lost">
            <summary>
            Утерянные экземпляры.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestPrefixes.Debtor">
            <summary>
            Читатели с отрицательным балансом.
            </summary>
        </member>
        <member name="T:ManagedClient.Requests.RequestRefusals">
            <summary>
            Причины отказов.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.Busy">
            <summary>
            Занято.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.OutOfStock">
            <summary>
            Нет на месте.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.OutOfStockAndTopo">
            <summary>
            Нет на месте и по топокаталогу.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.Bound">
            <summary>
            В переплете.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.WrittenOff">
            <summary>
            Списано.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.Lacuna">
            <summary>
            Лакуна.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.Defect">
            <summary>
            Дефектный.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.Decrepit">
            <summary>
            Ветхий.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.Redirect">
            <summary>
            Перенаправление.
            </summary>
        </member>
        <member name="F:ManagedClient.Requests.RequestRefusals.Other">
            <summary>
            Прочее.
            </summary>
        </member>
        <member name="T:ManagedClient.ResponseHeader">
            <summary>
            Заголовок ответа сервера
            </summary>
        </member>
        <member name="M:ManagedClient.ResponseHeader.Parse(System.String)">
            <summary>
            Разбор ответа сервера.
            </summary>
            <param name="text">Текст ответа сервера</param>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.ResponseHeader.Command">
            <summary>
            Повторенный код команды
            </summary>
        </member>
        <member name="P:ManagedClient.ResponseHeader.UserID">
            <summary>
            Повторенный идентификатор клиента
            </summary>
        </member>
        <member name="P:ManagedClient.ResponseHeader.QueryID">
            <summary>
            Повторенный идентификатор команды
            </summary>
        </member>
        <member name="P:ManagedClient.ResponseHeader.Data">
            <summary>
            Собственно ответ сервера (данные).
            Часто первая строка содержит код возврата
            </summary>
        </member>
        <member name="P:ManagedClient.ResponseHeader.JoinedData">
            <summary>
            Соединенные данные ответа сервера.
            </summary>
        </member>
        <member name="P:ManagedClient.ResponseHeader.ReturnCode">
            <summary>
            Код возврата (код ошибки)
            </summary>
        </member>
        <member name="T:ManagedClient.IrbisSearchMenu">
            <summary>
            
            </summary>
        </member>
        <member name="T:ManagedClient.Fields.RevisionInfo">
            <summary>
            Данные о редактировании записи (поле 907).
            </summary>
        </member>
        <member name="F:ManagedClient.Fields.RevisionInfo.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.RevisionInfo.Parse(ManagedClient.RecordField)">
            <summary>
            Разбор поля.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.RevisionInfo.Parse(ManagedClient.IrbisRecord,System.String)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.RevisionInfo.Parse(ManagedClient.IrbisRecord)">
            <summary>
            Разбор записи.
            </summary>
        </member>
        <member name="M:ManagedClient.Fields.RevisionInfo.ToField">
            <summary>
            Превращение обратно в 
            </summary>
            <returns></returns>
        </member>
        <member name="P:ManagedClient.Fields.RevisionInfo.Stage">
            <summary>
            Этап работы. Подполе c.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.RevisionInfo.Date">
            <summary>
            Дата. Подполе a.
            </summary>
        </member>
        <member name="P:ManagedClient.Fields.RevisionInfo.Name">
            <summary>
            ФИО оператора. Подполе b.
            </summary>
        </member>
        <member name="T:ManagedClient.SearchPostingInfo">
            <summary>
            Информация о постинге.
            </summary>
        </member>
        <member name="M:ManagedClient.SearchPostingInfo.Parse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Разбор ответа сервера.
            </summary>
            <param name="answer"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.SearchPostingInfo.ParseFormatted(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Разбор ответа сервера с расформатированными записями.
            </summary>
            <param name="answer"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.SearchPostingInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:ManagedClient.SearchPostingInfo.Mfn">
            <summary>
            MFN.
            </summary>
        </member>
        <member name="P:ManagedClient.SearchPostingInfo.Tag">
            <summary>
            Тег поля.
            </summary>
        </member>
        <member name="P:ManagedClient.SearchPostingInfo.Occurrence">
            <summary>
            Номер повторения поля
            </summary>
        </member>
        <member name="P:ManagedClient.SearchPostingInfo.Count">
            <summary>
            Количество повторений.
            </summary>
        </member>
        <member name="P:ManagedClient.SearchPostingInfo.Text">
            <summary>
            Текст постинга.
            </summary>
        </member>
        <member name="P:ManagedClient.SearchPostingInfo.Formatted">
            <summary>
            Если было запрошено форматирование.
            </summary>
        </member>
        <member name="T:ManagedClient.SearchTermInfo">
            <summary>
            Информация о поисковом термине.
            </summary>
        </member>
        <member name="M:ManagedClient.SearchTermInfo.Parse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Разбор ответа сервера
            </summary>
        </member>
        <member name="P:ManagedClient.SearchTermInfo.Count">
            <summary>
            Количество ссылок.
            </summary>
        </member>
        <member name="P:ManagedClient.SearchTermInfo.Text">
            <summary>
            Поисковый термин.
            </summary>
        </member>
        <member name="T:ManagedClient.SubField">
            <summary>
            Подполе MARC-записи.
            </summary>
        </member>
        <member name="F:ManagedClient.SubField.Field">
            <summary>
            Ссылка на поле, владеющее
            данным подполем. Настраивается
            перед передачей в скрипты.
            Всё остальное время неактуально.
            </summary>
        </member>
        <member name="M:ManagedClient.SubField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.SubField"/> class.
            </summary>
        </member>
        <member name="M:ManagedClient.SubField.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.SubField"/> class.
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="M:ManagedClient.SubField.#ctor(System.Char,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ManagedClient.SubField"/> class.
            </summary>
            <param name="code">The code.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:ManagedClient.SubField.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.SubField.Compare(ManagedClient.SubField,ManagedClient.SubField,System.Boolean)">
            <summary>
            Compares the specified sub field1.
            </summary>
            <param name="subField1">The sub field1.</param>
            <param name="subField2">The sub field2.</param>
            <param name="verbose">if set to <c>true</c> [verbose].</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:ManagedClient.SubField.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:ManagedClient.SubField.Code">
            <summary>
            Код подполя.
            </summary>
        </member>
        <member name="P:ManagedClient.SubField.CodeString">
            <summary>
            Код подполя.
            </summary>
            <remarks>
            Для XML-сериализации.
            </remarks>
        </member>
        <member name="P:ManagedClient.SubField.Text">
            <summary>
            Значение подполя.
            </summary>
        </member>
        <member name="P:ManagedClient.SubField.UserData">
            <summary>
            Произвольные пользовательские данные.
            </summary>
        </member>
        <member name="T:ManagedClient.Utilities">
            <summary>
            Несколько утилит, упрощающих код.
            </summary>
        </member>
        <member name="M:ManagedClient.Utilities.GetOccurrence``1(``0[],System.Int32)">
            <summary>
            Выборка элемента из массива.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="occurrence"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.GetOccurrence``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Выборка элемента из списка.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="occurrence"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.NonNullItems``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Отбирает из последовательности только
            ненулевые элементы.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.NonEmptyLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Отбирает из последовательности только непустые строки.
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.SplitFirst(System.String,System.Char)">
            <summary>
            Разбивает строку по указанному разделителю.
            </summary>
            <param name="line"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.SameString(System.String,System.String)">
            <summary>
            Сравнивает строки с точностью до регистра.
            </summary>
            <param name="one">Первая строка.</param>
            <param name="two">Вторая строка.</param>
            <returns>Строки совпадают с точностью до регистра.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.SameStringSensitive(System.String,System.String)">
            <summary>
            Сравнивает строки.
            </summary>
            <param name="one"></param>
            <param name="two"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.OneOf(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Проверяет, является ли искомая строка одной
            из перечисленных. Регистр символов не учитывается.
            </summary>
            <param name="one">Искомая строка.</param>
            <param name="many">Источник проверяемых строк.</param>
            <returns>Найдена ли искомая строка.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.OneOf(System.String,System.String[])">
            <summary>
            Проверяет, является ли искомая строка одной
            из перечисленных. Регистр символов не учитывается.
            </summary>
            <param name="one">Искомая строка.</param>
            <param name="many">Массив проверяемых строк.</param>
            <returns>Найдена ли искомая строка.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.OneOf(System.Char,System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Проверяет, является ли искомый символ одним
            из перечисленных. Регистр символов не учитывается.
            </summary>
            <param name="one">Искомый символ.</param>
            <param name="many">Массив проверяемых символов.</param>
            <returns>Найден ли искомый символ.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.OneOf(System.Char,System.Char[])">
            <summary>
            Проверяет, является ли искомый символ одним
            из перечисленных. Регистр символов не учитывается.
            </summary>
            <param name="one">Искомый символ.</param>
            <param name="many">Массив проверяемых символов.</param>
            <returns>Найден ли искомый символ.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.SameChar(System.Char,System.Char)">
            <summary>
            Сравнивает символы с точностью до регистра.
            </summary>
            <param name="one">Первый символ.</param>
            <param name="two">Второй символ.</param>
            <returns>Символы совпадают с точностью до регистра.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.IsPositiveInteger(System.String)">
            <summary>
            Представляет ли строка положительное целое число.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.SafeToInt32(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Безопасное преобразование строки
            в целое.
            </summary>
            <param name="text"></param>
            <param name="defaultValue"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.SafeParseInt32(System.String,System.Int32)">
            <summary>
            Безопасный парсинг целого числа.
            </summary>
            <param name="text">Строка, подлежащая парсингу.</param>
            <param name="defaultValue">Значение по умолчанию.</param>
            <returns>Разобранное целое число или значение по умолчанию.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.SafeParseInt32(System.String)">
            <summary>
            Безопасный парсинг целого числа.
            </summary>
            <param name="text">Строка, подлежащая парсингу.</param>
            <returns>Разобранное целое число или значение по умолчанию.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.SafeCompare(System.String,System.String)">
            <summary>
            Сравнение строк.
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.SafeCompare(System.String,System.String[])">
            <summary>
            Сравнение строки с массивом.
            </summary>
            <param name="value"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.SafeContains(System.String,System.String)">
            <summary>
            Поиск подстроки.
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.SafeContains(System.String,System.String[])">
            <summary>
            Поиск подстроки.
            </summary>
            <param name="value"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.SafeStarts(System.String,System.String)">
            <summary>
            Поиск начала строки.
            </summary>
            <param name="text"></param>
            <param name="begin"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.ToInvariantString(System.Int32)">
            <summary>
            Преобразование числа в строку по правилам инвариантной 
            (не зависящей от региона) культуры.
            </summary>
            <param name="value">Число для преобразования.</param>
            <returns>Строковое представление числа.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.ToInvariantString(System.Char)">
            <summary>
            Преобразование числа в строку по правилам инвариантной
            (не зависящей от региона) культуры.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.FormatRange(System.Int32,System.Int32)">
            <summary>
            Форматирование диапазона целых чисел.
            </summary>
            <remarks>Границы диапазона могут совпадать, однако
            левая не должна превышать правую.</remarks>
            <param name="first">Левая граница диапазона.</param>
            <param name="last">Правая граница диапазона.</param>
            <returns>Строковое представление диапазона.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.CompressRange(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Преобразование набора целых чисел в строковое представление,
            учитывающее возможное наличие цепочек последовательных чисел,
            которые форматируются как диапазоны.
            </summary>
            <param name="n">Источник целых чисел.</param>
            <remarks>Источник должен поддерживать многократное считывание.
            Числа предполагаются предварительно упорядоченные. Повторения чисел
            не допускаются. Пропуски в последовательностях допустимы.
            Числа допускаются только неотрицательные.
            </remarks>
            <returns>Строковое представление набора чисел.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.SplitLines(System.String)">
            <summary>
            Разбивка текста на отдельные строки.
            </summary>
            <remarks>Пустые строки не удаляются.</remarks>
            <param name="text">Текст для разбиения.</param>
            <returns>Массив строк.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.MergeLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Склейка строк в сплошной текст, разделенный переводами строки.
            </summary>
            <param name="lines">Строки для склейки.</param>
            <returns>Склеенный текст.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.ReadToEnd(System.IO.Stream)">
            <summary>
            Считывает из потока максимально возможное число байт.
            </summary>
            <remarks>Полезно для считывания из сети (сервер высылает
            ответ, после чего закрывает соединение).</remarks>
            <param name="stream">Поток для чтения.</param>
            <returns>Массив считанных байт.</returns>
        </member>
        <member name="M:ManagedClient.Utilities.DumpBytes(System.IO.TextWriter,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Шестнадцатиричный дамп массива байт.
            </summary>
            <param name="writer">Куда писать.</param>
            <param name="buffer">Байты.</param>
            <param name="offset">Начальное смещение.</param>
            <param name="count">Количество байт для дампа.</param>
        </member>
        <member name="M:ManagedClient.Utilities.AppendToArray``1(``0[],``0)">
            <summary>
            Добавление элемента к массиву.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceArray"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.AppendToArray``1(``0[],System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Добавление элементов к массиву.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceArray"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.AppendToArray``1(``0[],``0[])">
            <summary>
            Добавление элементов к массиву.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceArray"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.FindSetting(System.String[])">
            <summary>
            Получаем сеттинг из возможных кандидатов.
            </summary>
            <param name="candidates"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.ContainsAnySymbol(System.String,System.Char[])">
            <summary>
            Содержит ли строка любой из перечисленных символов.
            </summary>
            <param name="text"></param>
            <param name="symbols"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.ContainsWhitespace(System.String)">
            <summary>
            Строка содержит пробельные символы?
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.PrepareFormat(System.String)">
            <summary>
            Подготавливает строку запроса
            </summary>
            <param name="text"></param>
            <remarks>Строка формата не должна
            содержать комментариев и переводов
            строки (настоящих и ирбисных)
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Utilities.PrepareQuery(System.String)">
            <summary>
            Подготавливает строку запроса,
            заменяя запрещённые символы на пробелы.
            </summary>
        </member>
        <member name="M:ManagedClient.Utilities.MakeVisibleString(System.String)">
            <summary>
            Превращает строку в видимую.
            Пример: "(null)".
            </summary>
        </member>
        <member name="M:ManagedClient.Utilities.SplitArray``1(``0[],System.Int32)">
            <summary>
            Разбиение массива на (почти) равные части.
            </summary>
        </member>
        <member name="T:ManagedClient.Readers.VisitInfo">
            <summary>
            Информация о посещении/выдаче.
            </summary>
        </member>
        <member name="M:ManagedClient.Readers.VisitInfo.Parse(ManagedClient.RecordField)">
            <summary>
            Parses the specified field.
            </summary>
            <param name="field">The field.</param>
            <returns>VisitInfo.</returns>
        </member>
        <member name="M:ManagedClient.Readers.VisitInfo.ToField">
            <summary>
            Формирование поля 40 
            из данных о выдаче/посещении.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedClient.Readers.VisitInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Database">
            <summary>
            подполе G, имя БД каталога.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Index">
            <summary>
            подполе A, шифр документа.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Inventory">
            <summary>
            подполе B, инвентарный номер экземпляра
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Barcode">
            <summary>
            подполе H, штрих-код экземпляра.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Sigla">
            <summary>
            подполе K, место хранения экземпляра
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.DateGivenString">
            <summary>
            подполе D, дата выдачи
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Department">
            <summary>
            подполе V, место выдачи
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.DateExpectedString">
            <summary>
            подполе E, дата предполагаемого возврата
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.DateReturnedString">
            <summary>
            подполе F, дата фактического возврата
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.DateProlongString">
            <summary>
            подполе L, дата продления
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Lost">
            <summary>
            подполе U, признак утерянной книги
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Description">
            <summary>
            подполе C, краткое библиографическое описание
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Responsible">
            <summary>
            подполе I, ответственное лицо
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.TimeIn">
            <summary>
            подполе 1, время начала визита в библиотеку
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.TimeOut">
            <summary>
            подполе 2, время окончания визита в библиотеку
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.IsVisit">
            <summary>
            Не посещение ли?
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.IsReturned">
            <summary>
            Возвращена ли книга?
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.DateGiven">
            <summary>
            Дата выдачи/посещения.
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.DateReturned">
            <summary>
            Дата возврата
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.DateExpected">
            <summary>
            Ожидаемая дата возврата
            </summary>
        </member>
        <member name="P:ManagedClient.Readers.VisitInfo.Reader">
            <summary>
            Ссылка на читателя, сделавшего посещение.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.XrfFile64">
            <summary>
            Файл перекрестных ссылок XRF представляет собой
            таблицу ссылок на записи файла документов.
            Первая ссылка соответствует записи файла документов
            с номером 1, вторая – 2  и тд.
            </summary>
        </member>
        <member name="T:ManagedClient.Direct.XrfRecord64">
            <summary>
            Contains information about record offset and status.
            </summary>
        </member>
        <member name="F:ManagedClient.Direct.XrfRecord64.RecordSize">
            <summary>
            Fixed record size.
            </summary>
        </member>
        <member name="M:ManagedClient.Direct.XrfRecord64.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.XrfRecord64.Mfn">
            <summary>
            MFN
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.XrfRecord64.Offset">
            <summary>
            8-byte offset of the record in the MST file.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.XrfRecord64.Status">
            <summary>
            Status of the record.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.XrfRecord64.Locked">
            <summary>
            Is the record locked.
            </summary>
        </member>
        <member name="P:ManagedClient.Direct.XrfRecord64.Deleted">
            <summary>
            Is the record deleted.
            </summary>
        </member>
    </members>
</doc>
